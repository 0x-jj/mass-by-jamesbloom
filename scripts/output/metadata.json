{"name":"Mass #0", "description":"GOLD is a dynamic cryptoart series where the artworks change in response to the collection's own live market activity. The actions of GOLD collectors are part of this ever-changing artwork, where prices, levels of activity and on-chain provenance define the art itself.\n\nHow does the market affect the way we see art? Does the sale price of an NFT change our perception of it? In GOLD, market factors literally influence the appearance of the dynamic imagery. From a sale to a listing, from the amount of time an artwork is held to whether it has recently been flipped, all this data is recorded by the contract and reflected live in each GOLD piece.\n\nGOLD is an artistic exploration of NFT market behaviour. It explores how we see in digital environments, and how market networks influence how we see. The full spectrum of possibilities for GOLD will take years to reveal.\n\nThe series is 100% on-chain - the artworks are composed and rendered directly from the blockchain - with live data streamed from an Ethereum node. Viewers can change the node by pressing 'G'.","external_url": "https://mass.is/token/0", "image": "https://arweave.net/mass/0.jpg", "animation_url":"data:text/html;base64,<html><body style='margin:0;'><script>let palettes = [8,4,131];let objects = [1,21,3,2,21,122,3,14,68,4,20,107,5,12,83,8,0,55,11,0,78,17,9,37];let J = "0x4d4c6b40214ab8bbc521ff28584d4e90d39cecd3";let K = "0x5681e00b";let X = "0x2d56ab42";let $ = 1714586535;let U = 5;let H = 0;let y = 832165;let h = 999;</script><script>(() => {
  const css = `body { margin: 0; }`;
  const head = document.head;
  const style = document.createElement("style");

  head.appendChild(style);

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
})();
</script><script>WALLETS = ["0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x5399a09fc5d0054fe1d0c15b2dd135fcf7cc3ade", "0x72eb30d3ca53f5e839325e2eacf535e70a9e6987", "0xd4284c8cc59941565f1bf687209cebbba6da1d5a", "0xb3c3b3038bd2231b7b61a510102b459e694690a4", "0x773d715200ab5c07f39db9772e3c83c48534a585", "0xb3c3b3038bd2231b7b61a510102b459e694690a4", "0xaf7cf5910510b7cf912c156f91244487632e5fb6", "0x058c11bdca759f48fcf9619e28c9a11ac0fe60fd", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0xa3f81f0a82f2af7549ca9dd10fa5e1d64d2ea949", "0xa3f81f0a82f2af7549ca9dd10fa5e1d64d2ea949", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0xd36954df517cfd9d533d4494b0e62b61c02fc29a", "0xd36954df517cfd9d533d4494b0e62b61c02fc29a", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x685b6326261c5ad99aba748ba12a303125e57bfa", "0x31004f28babda1f632cb445944892b04a411e7f7", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x31004f28babda1f632cb445944892b04a411e7f7", "0x31004f28babda1f632cb445944892b04a411e7f7", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0xde66673fd16ee0a88daf106e34a61046754d7cb2", "0x3e9afe0df874f11f4728007ef412051cc7f60e2a", "0x4e3a2169fba7abe971110939c9290970914ec1df", "0x3480c08ffcb3751721355887f689629314f36f3b", "0xafb905265fb0c005b4755660e7f69f5829f3c754", "0x76d01054ff91afc2d515f7fea9a3e3313e248615", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x6f536801668a575d7cd07666215eed1bc701b922", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x2e083206ff94af9932457b556b983f01abc4f3e6", "0x9d928f3df4a79ba2e05c55b63d3e933974195039", "0x9d928f3df4a79ba2e05c55b63d3e933974195039", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0xbff1205bfcbaa467cf39b213e1fa5ae5c256e571", "0xeab4014ddf17367055dc57fafb358c6282d5b01e", "0x134309c4cf57bfa43ef66bf20bd0eeccdeb2d80c", "0x6041f881358c71d64bc9253c9ba0391df69f7d98", "0x6041f881358c71d64bc9253c9ba0391df69f7d98", "0x11a51b3af70afae1b52cf51cb38cade20c1203dc", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x63fbe9d404581a73e4f74157f4cc5640dc48a3cc", "0x63fbe9d404581a73e4f74157f4cc5640dc48a3cc", "0x63fbe9d404581a73e4f74157f4cc5640dc48a3cc", "0x06cb0a03c2518873befc6bc257cbf4c438d14b4a", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x7a75e7aee47bfd893688a2e30349b6ae249c209f", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x8036bb84031e60a1bac93078c0e59bbd5e485db9", "0x5660b6402c00e8c5994c9d004599928a74a076d0", "0x0649fb57c1bc919d96218e87fd1cc429af964b50", "0xdbc70388645d6b756567b6dee36e53654cf081bd", "0xdbc70388645d6b756567b6dee36e53654cf081bd", "0xdbc70388645d6b756567b6dee36e53654cf081bd", "0xdbc70388645d6b756567b6dee36e53654cf081bd", "0xbc49de68bcbd164574847a7ced47e7475179c76b", "0xdbc70388645d6b756567b6dee36e53654cf081bd", "0x94de7e2c73529ebf3206aa3459e699fbcdfcd49b", "0x2e083206ff94af9932457b556b983f01abc4f3e6", "0x9ff53a90322c068d7572079ec3c1f307ed3f84b5", "0x99e2e69f98b164c399cc12d8382a82135eea6364", "0xf038a5f1b621b4c598d8483eb2e6a57ef5596af8", "0xa7cafd18dd8bc1e23203058d66f89f0f0ee539d9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xba8e220834c32fac376bbfb33820c001f022d72e", "0x0c96e96db7eb9934ad85c84dbca5c78ebd4840f9", "0xbc49de68bcbd164574847a7ced47e7475179c76b", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x685b6326261c5ad99aba748ba12a303125e57bfa", "0xefb43f901492f4b2400081b15b3982fa76140ea3", "0xefb43f901492f4b2400081b15b3982fa76140ea3", "0xefb43f901492f4b2400081b15b3982fa76140ea3", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x12e2f1589f27372e3906d19c5cbf57ab1e567d10", "0x6b6ae848f555f70944bc99d736fe29fcaecf8b23", "0xbc49de68bcbd164574847a7ced47e7475179c76b", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x5784d92a85b34e51d4f86a0928d9cddee6876840", "0x731b40ba7e1dfe37fdf21429c54e896f1653f0f9", "0x1689b564814db5f1c7abd74129771d282e2d652b", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0xc55d765bbd35e495ea519f0a170dedd30363e114", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0xbc49de68bcbd164574847a7ced47e7475179c76b", "0x6f536801668a575d7cd07666215eed1bc701b922", "0x645eb399f09a347f040ab48017512556ee13f9b4", "0xb791e24c63ecf7bcc66d2923d57a4d7417b0250b", "0x6b6ae848f555f70944bc99d736fe29fcaecf8b23", "0x645eb399f09a347f040ab48017512556ee13f9b4", "0x6b6ae848f555f70944bc99d736fe29fcaecf8b23", "0x9f7064dfe6ca5856b3afd7a3b3974686a35bdab5", "0x645eb399f09a347f040ab48017512556ee13f9b4", "0x5a33d7d7a6a15fb215767fc27d571873d1417ae4", "0x645eb399f09a347f040ab48017512556ee13f9b4", "0xbc49de68bcbd164574847a7ced47e7475179c76b", "0xbfdf3266847b0cc9cf9bdc626bef48ff9c46e9cd", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xd3fcd3eb35f83b76d494d63d3f1bb362fa05d143", "0x11a51b3af70afae1b52cf51cb38cade20c1203dc", "0x296e0c21db4061ebf971e55d5db85011e7ff9797", "0x763c189d29de29090d80110928bfddfd2ae0eceb", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x6fbe3ee1f62cd0d7e6942dffe4ccf8c8c3993520", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0xec6d36a487d85cf562b7b8464ce8dc60637362ac", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x645eb399f09a347f040ab48017512556ee13f9b4", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x6d9dd2b0fbf6e7d800f31c55f0f2f9089dfb7dc2", "0x0f4bc970e348a061b69d05b7e2e5c13eb687e5e3", "0x885fcf666c73717895828a5f5c64a18bf81cc4d2", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x3480c08ffcb3751721355887f689629314f36f3b", "0xb646ece3b657b21fbceca00c3bf66dfe3c310e71", "0xe13d4abee4b304b67c52a56871141cad1b833aa7", "0xf8027e0f03c95782ef9be1826828bee931c1ab83", "0x0f4bc970e348a061b69d05b7e2e5c13eb687e5e3", "0x55aeff15b1f37c5d180f3350a56cc9cd6a6a6602", "0xb7f73311a823fa70059cf6e22a842c3bd64c53c3", "0x2e0d63ffcb08ea20ff3acdbb72dfec97343885d2", "0x123be94bca3e5ae858039112d14c1c740a3989f9", "0x568f888e808621bde2f8f6511bfcf952732ae70c", "0xfed93f0ad93ff25993274d8245a2bb2133de38c0", "0x5e494ea673cf1b46286f58f98ca2ebc29528813c", "0xd0dbf8221003ce87dd9adba82d259f9ff7b186ff", "0x2334d91317950c19a6c21c69d69f5ab8a8f275fa", "0xe113e7b1e8ecd07973ea40978aed520241d17f27", "0xc6dcd55a897b90a49c1ccf93677727c58ab48a1f", "0x21301d901db04724597d1b6012ac49878157580d", "0x63fbe9d404581a73e4f74157f4cc5640dc48a3cc", "0x11a51b3af70afae1b52cf51cb38cade20c1203dc", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x705cbe1c15df4b2474bc43b4998a0db114889cc0", "0x705cbe1c15df4b2474bc43b4998a0db114889cc0", "0x3480c08ffcb3751721355887f689629314f36f3b", "0xbdfc087a5c32f6b6e425697c1a19a10e378136ee", "0x5399a09fc5d0054fe1d0c15b2dd135fcf7cc3ade", "0xe7d254965c04468b559cbd796ee9d13b14011aa3", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0x51522a59dae2a6585a8a4d6ee901821041ae209d", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x188c30e9a6527f5f0c3f7fe59b72ac7253c62f28", "0x21301d901db04724597d1b6012ac49878157580d", "0x7c0aca16d409ad72f1729fdda4205374eb853645", "0x43e2960d1c17feea394a4386f8d0d272a36293c1", "0x28ecea27f868c880d189a1c3c60c1a9264dacb39", "0x21301d901db04724597d1b6012ac49878157580d", "0x3480c08ffcb3751721355887f689629314f36f3b", "0xa5e5d3afe7daf372972559c7fa3b75cb7a4ae0d7", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x10e80e996931291c519680913ef18b2a9d5bc2fe", "0x884befa765a966508cb0bd8ca36e300a4529f380", "0x557fd9677cc7c219d205d8eaee00cdb68304a122", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xaf7cf5910510b7cf912c156f91244487632e5fb6", "0x058c11bdca759f48fcf9619e28c9a11ac0fe60fd", "0xbff1205bfcbaa467cf39b213e1fa5ae5c256e571", "0xed46a567cdd65358a938276cde48258590506375", "0xf53af966dab1afaaac1171dd941148384d38417d", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x926bf90196781cf2161535d48af542889cac4d2e", "0x67ea36ed0e3a035e96fbfdd595cb25a88a3d4d74", "0x98d633d2df5e70b6b93936f225fcc16106383aa2", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x6bbf2e36d6902f273dcf291cd279199d8b4006e1", "0x926bf90196781cf2161535d48af542889cac4d2e", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x12bf21bb7dd1b612d64cf301ce760f6acf397528", "0x0e3d617a8975738371c46131c4f3bc5ace2caa33", "0x0940b47ce80862fdf3e0c71846ceb2f32c384f38", "0xc7734f68f937715a640f65e1a71b316f83ee31eb", "0x6853a596d6d7264d3622546da3b891b6fe17eb82", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x23570363ff61804f43dc902ac49d8e05ce7566bc", "0xd3fcd3eb35f83b76d494d63d3f1bb362fa05d143", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x9b88a76ef6d08150f97558a05dd0069b5bda1589", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0xbff1205bfcbaa467cf39b213e1fa5ae5c256e571", "0x96fd61202a698ee3eac21e247a6b209ea5ffeb91", "0x6ce52498047b8279ccc7c25b41c95cd482525e54", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x48aae1669d4cf7988a227b3d68d9d6e9f02840ee", "0x5178b38849eb9200ad681309ee4a6d5b00c23e51", "0x557fd9677cc7c219d205d8eaee00cdb68304a122", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x649444a98edc0c5d351459b925ec08572c1a1757", "0x3484208c3b6dc2f951ab045c58c7358b72d68329", "0xfed93f0ad93ff25993274d8245a2bb2133de38c0", "0xf8027e0f03c95782ef9be1826828bee931c1ab83", "0x21301d901db04724597d1b6012ac49878157580d", "0xec6d36a487d85cf562b7b8464ce8dc60637362ac", "0xe88effd61bb4b7d8c0df5b40eff0876e60230495", "0x5aa7652ff7a493baa40f50121b6d3040da02997f", "0x94de7e2c73529ebf3206aa3459e699fbcdfcd49b", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xcc1dd9520afdb08e32b57b35f00cd2e6bcf4703a", "0x3e9afe0df874f11f4728007ef412051cc7f60e2a", "0x3484208c3b6dc2f951ab045c58c7358b72d68329", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0c8209b31462ea6e05df2dd6d00d0cc5b574172a", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x43e2960d1c17feea394a4386f8d0d272a36293c1", "0x036eec8667eaf500fce71f4273cda3deb8fc32b8", "0x6694f5cb8f80320024a9c141c7e3f8fc503ca362", "0xa7cafd18dd8bc1e23203058d66f89f0f0ee539d9", "0x21301d901db04724597d1b6012ac49878157580d", "0xe88effd61bb4b7d8c0df5b40eff0876e60230495", "0xb778e5f70b2315c1682b27f322c749c8333eb254", "0x3484208c3b6dc2f951ab045c58c7358b72d68329", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x5d27570f408c25a8394fa6071c71ee3814c1bdfa", "0x5a6abe2b4bd1e178d984afa8630cd6ac212b070b", "0x23570363ff61804f43dc902ac49d8e05ce7566bc", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x731b40ba7e1dfe37fdf21429c54e896f1653f0f9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0649fb57c1bc919d96218e87fd1cc429af964b50", "0xed46a567cdd65358a938276cde48258590506375", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x68bca5a8bdebe05fb8a6648c7316b4eb7e19a064", "0x7c0aca16d409ad72f1729fdda4205374eb853645", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x55038f72943144983baab03a0107c9a237bd0da9", "0x10e80e996931291c519680913ef18b2a9d5bc2fe", "0xbff1205bfcbaa467cf39b213e1fa5ae5c256e571", "0x241f1a461da47ccd40b48c38340896a9948a4725", "0x125932718c2c15d593fbfe9860b179e13371d9bc", "0x34a32ad4ba1ea1eb02ccd3ed5b9af9a8d8ea07a8", "0xa7cafd18dd8bc1e23203058d66f89f0f0ee539d9", "0x2b0386bbdd314d8356c21f39be2491f975bd6361", "0x8f54249ae4c8a73e92d44459e026c9197670f3fd", "0x4e3a2169fba7abe971110939c9290970914ec1df", "0x3d280fde2ddb59323c891cf30995e1862510342f", "0x11a51b3af70afae1b52cf51cb38cade20c1203dc", "0x03d1a11f5e98a02ecd31962dc787000451e0c1d2", "0xd78a394b7c1b059f42ef5a7ff2cab37699765688", "0x34a32ad4ba1ea1eb02ccd3ed5b9af9a8d8ea07a8", "0xb3c3b3038bd2231b7b61a510102b459e694690a4", "0x72eb30d3ca53f5e839325e2eacf535e70a9e6987", "0x16a0edf95c600b9ff5982f79284bff3a5cf2d7f7", "0x2b0386bbdd314d8356c21f39be2491f975bd6361", "0xc73452ec2a7abc1462959c227b83f3f7547b531b", "0x8a09ed6a990324d26fd4070d6c81b2bbd3288cfd", "0x8f54249ae4c8a73e92d44459e026c9197670f3fd", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xb791e24c63ecf7bcc66d2923d57a4d7417b0250b", "0xb276a9a6e7414529873af8b149369602c3a6206c", "0x036eec8667eaf500fce71f4273cda3deb8fc32b8", "0x036eec8667eaf500fce71f4273cda3deb8fc32b8", "0x685b6326261c5ad99aba748ba12a303125e57bfa", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0xf599a05b4ea846a5afa1db274b508bb1ba1ddd93", "0x125932718c2c15d593fbfe9860b179e13371d9bc", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x21301d901db04724597d1b6012ac49878157580d", "0x68bca5a8bdebe05fb8a6648c7316b4eb7e19a064", "0x884befa765a966508cb0bd8ca36e300a4529f380", "0x125932718c2c15d593fbfe9860b179e13371d9bc", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x493304495b1d6708c40d47f056547eceb8834373", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x6974606889a3b1ff76a2347441324b13a4bbb7e6", "0xa099ec99966fa615c29b1ec56ce403fe655bca40", "0x5a483c063b6b2b4f0baafbfe799a3504dd477dae", "0xbd72d021d3cb334deb3151db905ee073b8eee518", "0x0075078a6f6621acb3f43d2915fc8e40e5a5c657", "0xd0dbf8221003ce87dd9adba82d259f9ff7b186ff", "0xc6dcd55a897b90a49c1ccf93677727c58ab48a1f", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xe4550aed6a6237ee253e022c94455e417a4c9375", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x9983d09b9e3741c0cd1f11ccae41fca1745efd2c", "0xf3ce9bb53e5ee50d9533635ff90403242cf7d639", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xd308ba2636a2b152e954479cd6e19b6479873ee5", "0x2b0386bbdd314d8356c21f39be2491f975bd6361", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x685b6326261c5ad99aba748ba12a303125e57bfa", "0x21301d901db04724597d1b6012ac49878157580d", "0x72241b7cd963cf56ba409e80ed59e1aee76a1ada", "0xe4550aed6a6237ee253e022c94455e417a4c9375", "0x495ab8b3f88fc9d474ee6f2e96a1040a6395aa50", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x107752288b215467de25c16119787d715ec8e26e", "0x107752288b215467de25c16119787d715ec8e26e", "0x49e3cf47606a5da7b11b270a790e2112a467485f", "0x6b6ae848f555f70944bc99d736fe29fcaecf8b23", "0x51360d99966724b2603182cc367ab9621d96eed2", "0x5aa7652ff7a493baa40f50121b6d3040da02997f", "0x2e083206ff94af9932457b556b983f01abc4f3e6", "0x0830337ed8d752b520d5547aadeae4b8d4154199", "0x11a51b3af70afae1b52cf51cb38cade20c1203dc", "0x125932718c2c15d593fbfe9860b179e13371d9bc", "0xb0a2852750b15038cf9b5be255a483e3063162d7", "0x6041f881358c71d64bc9253c9ba0391df69f7d98", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x48aae1669d4cf7988a227b3d68d9d6e9f02840ee", "0x884befa765a966508cb0bd8ca36e300a4529f380", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x40f465f1ba4c2aba91c0c896cb92bbe4c7e545df", "0x40f465f1ba4c2aba91c0c896cb92bbe4c7e545df", "0xd35fc346e15ba5b446917c9fd23a9471d6144701", "0x3480c08ffcb3751721355887f689629314f36f3b", "0x75d4bdbf6593ed463e9625694272a0ff9a6d346f", "0x48aae1669d4cf7988a227b3d68d9d6e9f02840ee", "0x8f54249ae4c8a73e92d44459e026c9197670f3fd", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0xbf2a403e23c4877dd966102eb221378eae3a9fef", "0xbf2a403e23c4877dd966102eb221378eae3a9fef", "0x9d048ee350516a613241b14399b86bd6adc4560f", "0x0af5cfecd1b1be7cd808bf466470db20cb65c51d", "0x0940b47ce80862fdf3e0c71846ceb2f32c384f38", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x3a3da350fd33a1854beaeab086261c848526811b", "0x8a09ed6a990324d26fd4070d6c81b2bbd3288cfd", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x0f4bc970e348a061b69d05b7e2e5c13eb687e5e3", "0x230648f035da16d6d9ee3dbdbf3cfca6bd261ebb", "0x3d736000e4a13cd823dfd76dcdbfcd362cacee98", "0x230648f035da16d6d9ee3dbdbf3cfca6bd261ebb", "0xd4284c8cc59941565f1bf687209cebbba6da1d5a", "0xd4284c8cc59941565f1bf687209cebbba6da1d5a", "0xd4284c8cc59941565f1bf687209cebbba6da1d5a", "0x76d01054ff91afc2d515f7fea9a3e3313e248615", "0x34b1372f7f960207d8bb68275f1c33311564c21a", "0xed46a567cdd65358a938276cde48258590506375", "0x63fbe9d404581a73e4f74157f4cc5640dc48a3cc", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xe8270b17f341871e814a157142f0fedccb7a9a92", "0xa0c537293bdf3b6962104135746624c5e27d0c41", "0x3480c08ffcb3751721355887f689629314f36f3b", "0xe7d254965c04468b559cbd796ee9d13b14011aa3", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x6b6ae848f555f70944bc99d736fe29fcaecf8b23", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xbdd7caac869881f651a06cee8fbd8c0023cbcce0", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x8a3b8dfe66bc420c1da15af38bf1ad3640594538", "0xd3fcd3eb35f83b76d494d63d3f1bb362fa05d143", "0xb646ece3b657b21fbceca00c3bf66dfe3c310e71", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0xd3fcd3eb35f83b76d494d63d3f1bb362fa05d143", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0xe540a8d94bd379c4d9c0478c8fe9f7fe7f0b06e1", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0xd0dbf8221003ce87dd9adba82d259f9ff7b186ff", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x5e4bea43eb527650686f219ab682865493850edb", "0xb3c3b3038bd2231b7b61a510102b459e694690a4", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x8dbbca57ea56290efa14d835bbfd34faf1d89753", "0x125932718c2c15d593fbfe9860b179e13371d9bc", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x697c89c4bc5344960c26da9517e39204186d7efa", "0xbff1205bfcbaa467cf39b213e1fa5ae5c256e571", "0x76498dbcb3905d4a4f5ad295f7af1373b1627bde", "0xa8e23c9df598721bcced9f63d1af84e0b61006cc", "0x21301d901db04724597d1b6012ac49878157580d", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x884befa765a966508cb0bd8ca36e300a4529f380", "0xe13d4abee4b304b67c52a56871141cad1b833aa7", "0xa6e7e73c707d686bebfbda770b9a23e5dc97dc12", "0x5aa7652ff7a493baa40f50121b6d3040da02997f", "0x2b0386bbdd314d8356c21f39be2491f975bd6361", "0xf1db8a2623193757317639d0532daa5e3c8ea20c", "0xe58bd9aba6a19b13f5cf845694a6982a3841f735", "0x183abe67478eb7e87c96ca28e2f63dec53f22e3a", "0xe027b13409bf7d14ca4633e778c4d3b6ea7e2ae3", "0x86d89966f507bbffddf9a5dff22ef5609b0c80dc", "0xc9367730ede93bb941e0a5f6509618001b001fa4", "0x2b0386bbdd314d8356c21f39be2491f975bd6361", "0xe13d4abee4b304b67c52a56871141cad1b833aa7", "0xa5855f4f40a409ffde3a171eb616926aec5d7b9c", "0x1737164e15738e5c8f495e0f30b394a07b127a2a", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x75a56cd64e10c4f07a6d2cb9027580b7b9a728db", "0x5660b6402c00e8c5994c9d004599928a74a076d0", "0x763c189d29de29090d80110928bfddfd2ae0eceb", "0x2ad0c65a4877015ef78e4ce9b7dc28bbab7af40b", "0x2ad0c65a4877015ef78e4ce9b7dc28bbab7af40b", "0x2ad0c65a4877015ef78e4ce9b7dc28bbab7af40b", "0x12bf21bb7dd1b612d64cf301ce760f6acf397528", "0x12bf21bb7dd1b612d64cf301ce760f6acf397528", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0xd3fcd3eb35f83b76d494d63d3f1bb362fa05d143", "0x146d745139d417b8b5a1190cc73b34d7d37a9bba", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x123be94bca3e5ae858039112d14c1c740a3989f9", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x2a193336b79d9462bb36215210d44e9d60878c65", "0x565196152f8a4066a51b498a44a9981145d441ff", "0x2e0d63ffcb08ea20ff3acdbb72dfec97343885d2", "0xd7d184fec20a50aa7e522aa2f92971b5b1bb2a88", "0xcafb98282f5ae4aa9083e031981e980cff1d9a79", "0x65c7432e6662a96f4e999603991d5e929e57f60a", "0xd2a3f9c6fbe4c13d979898e603d64561264a6b35", "0xd7d184fec20a50aa7e522aa2f92971b5b1bb2a88", "0x5660b6402c00e8c5994c9d004599928a74a076d0", "0xa22414e4af5767448624017c7e0151d22490412b", "0xd36954df517cfd9d533d4494b0e62b61c02fc29a", "0x10e80e996931291c519680913ef18b2a9d5bc2fe", "0x0c57daae59367c1b26cd337fdc0b69356f31ffa9", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x9674ede5eb609f9483dd1682f2160ec45105250d", "0x65c7432e6662a96f4e999603991d5e929e57f60a"]</script><script>const providerURL = "https://eth-mainnet.g.alchemy.com/v2/WCVfs4Oi5mlTLOPJzlZXtEL-1Pk37edh";
const contractAddress = "0xCcBE56eA12B845A281431290F202196864F2f576";
const jsonRpcCallDataContract = "0x5681e00b";

// Receipts
async function callProvider(payload) {
    // Helper func to make calls to the RPC provider
    callPayload = {
        method: "POST",
        body: JSON.stringify(payload)
    }
    let response = await fetch(providerURL, callPayload);
    let responsePayload = await response.json();
    return responsePayload;
}
async function getLastBlockReceipts() {
    // Get last block number
    let lastBlockNumber = await callProvider(
        {
            method:"eth_blockNumber",
            params:[],
            id:2,
            jsonrpc:"2.0"
        }
    );
    console.log("Last block number:", lastBlockNumber.result);

    // Use last block number to get last block receipt
    let blockReceipts = await callProvider(
        {
            "method": "eth_getBlockReceipts",
            "params": [lastBlockNumber.result],
            "id": 2,
            "jsonrpc": "2.0"
        }
    );
    for (let receipt of blockReceipts.result) {
        if (WALLETS.indexOf(receipt.from) > -1 || WALLETS.indexOf(receipt.to) > -1) {
            const receiptString = JSON.stringify(receipt, null, 2);
            console.log(receiptString);
        }
    }
}
async function receiptsWrapper() {
    try {
        await getLastBlockReceipts();
    }
    catch (e) {
        console.error(e);
    }
}

// Contract
async function getContractData() {
    // contract data for GOLD
    // approvalCount, uint256,
    // latestApprovalTimestamps, uint256[HISTORY_LENGTH] memory,
    // transferCount, uint256,
    // latestTransferTimestamps, uint256[HISTORY_LENGTH] memory,
    // getHolderCount(), uint256,
    // ethReceipts, RoyaltyReceipt[HISTORY_LENGTH] memory,
    // wethReceipts RoyaltyReceipt[HISTORY_LENGTH] memory
    // mintedSupply, uint256,
    //  uint256, uint256[200], uint256, uint256[200], uint256, tuple[200], tuple[200], uint256

    // token
    // tokenData[tokenId].transferCount,    uint256,
    // tokenData[tokenId].latestTransferTimestamps,    uint256[HISTORY_LENGTH] memory,
    // tokenData[tokenId].minttoken_dataTimestamp,    uint256,
    // tokenData[tokenId].seed,             bytes32,
    // balanceOf(ownerOf(tokenId))          uint256
    // numberOfHodlLayers uint256 NOTE: that one is not yet added to the solidity
    //  uint256, uint256[200], uint256, bytes32, uint256, uint256

    // contract data
    try {
        var contract_data_response = await fetch(
            providerURL,
            {
                method: "POST",
                body: JSON.stringify(
                    {
                        "method": "eth_call",
                        "params": [
                            {
                                "to": contractAddress,
                                "data": jsonRpcCallDataContract
                            },
                            "latest"
                        ],
                        "id": 2,
                        "jsonrpc": "2.0"
                    },
                )
            }
        );
    } catch {
        console.log("Node failed.");
        return;
    }
    let contract_data_json = await contract_data_response.json();
    let contract_data = hexToArray(contract_data_json.result);
    contract_data = splitArray(contract_data, [1, 200, 1, 200, 1, 400, 400, 1]);
    console.log("contract_data:", contract_data);
    return contract_data;
}
function hexToArray(hex) {
    const bytes = hex.slice(2); // remove the "0x" prefix
    const array = [];

    for (let i = 0; i < bytes.length; i += 64) {
        const hexNumber = bytes.slice(i, i + 64);
        const number = parseInt(hexNumber, 16);
        array.push(number);
    }

    return array;
}
function splitArray(A, B) {
    const result = [];
    let startIndex = 0;

    for (let i = 0; i < B.length; i++) {
        const partSize = B[i];
        const part = A.slice(startIndex, startIndex + partSize);
        result.push(part);
        startIndex += partSize;
    }

    // Handle the remaining elements if A has more elements than specified in B
    if (startIndex < A.length) {
        const remainingPart = A.slice(startIndex);
        result.push(remainingPart);
    }

    return result;
}</script><script>!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).THREE={})}(this,(function(t){"use strict";const e="144",i=100,n=300,r=301,s=302,a=303,o=304,l=306,c=1e3,h=1001,u=1002,d=1003,p=1004,m=1005,f=1006,g=1007,v=1008,x=1009,_=1012,y=1014,M=1015,b=1016,S=1020,w=1023,T=1026,A=1027,E=33776,C=33777,L=33778,R=33779,P=35840,I=35841,D=35842,N=35843,O=37492,z=37496,U=37808,B=37809,F=37810,k=37811,G=37812,V=37813,H=37814,W=37815,j=37816,q=37817,X=37818,Y=37819,Z=37820,J=37821,K=36492,$=2300,Q=2301,tt=2302,et=2400,it=2401,nt=2402,rt=2500,st=2501,at=3e3,ot=3001,lt="srgb",ct="srgb-linear",ht=7680,ut=35044,dt="300 es",pt=1035;class mt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(e);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const i=e.slice(0);for(let e=0,n=i.length;e<n;e++)i[e].call(this,t);t.target=null}}}const ft=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let gt=1234567;const vt=Math.PI/180,xt=180/Math.PI;function _t(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(ft[255&t]+ft[t>>8&255]+ft[t>>16&255]+ft[t>>24&255]+"-"+ft[255&e]+ft[e>>8&255]+"-"+ft[e>>16&15|64]+ft[e>>24&255]+"-"+ft[63&i|128]+ft[i>>8&255]+"-"+ft[i>>16&255]+ft[i>>24&255]+ft[255&n]+ft[n>>8&255]+ft[n>>16&255]+ft[n>>24&255]).toLowerCase()}function yt(t,e,i){return Math.max(e,Math.min(i,t))}function Mt(t,e){return(t%e+e)%e}function bt(t,e,i){return(1-i)*t+i*e}function St(t){return 0==(t&t-1)&&0!==t}function wt(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Tt(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function At(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Et(t,e){switch(e.constructor){case Float32Array:return t;case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}var Ct=Object.freeze({__proto__:null,DEG2RAD:vt,RAD2DEG:xt,generateUUID:_t,clamp:yt,euclideanModulo:Mt,mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},inverseLerp:function(t,e,i){return t!==e?(i-t)/(e-t):0},lerp:bt,damp:function(t,e,i,n){return bt(t,e,1-Math.exp(-i*n))},pingpong:function(t,e=1){return e-Math.abs(Mt(t,2*e)-e)},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){void 0!==t&&(gt=t);let e=gt+=1831565813;return e=Math.imul(e^e>>>15,1|e),e^=e+Math.imul(e^e>>>7,61|e),((e^e>>>14)>>>0)/4294967296},degToRad:function(t){return t*vt},radToDeg:function(t){return t*xt},isPowerOfTwo:St,ceilPowerOfTwo:wt,floorPowerOfTwo:Tt,setQuaternionFromProperEuler:function(t,e,i,n,r){const s=Math.cos,a=Math.sin,o=s(i/2),l=a(i/2),c=s((e+n)/2),h=a((e+n)/2),u=s((e-n)/2),d=a((e-n)/2),p=s((n-e)/2),m=a((n-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*d,o*c);break;case"YZY":t.set(l*d,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*d,o*h,o*c);break;case"XZX":t.set(o*h,l*m,l*p,o*c);break;case"YXY":t.set(l*p,o*h,l*m,o*c);break;case"ZYZ":t.set(l*m,l*p,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:Et,denormalize:At});class Lt{constructor(t=0,e=0){Lt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,s=this.y-t.y;return this.x=r*i-s*n+t.x,this.y=r*n+s*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Rt{constructor(){Rt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,n,r,s,a,o,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=i,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[3],o=i[6],l=i[1],c=i[4],h=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],v=n[1],x=n[4],_=n[7],y=n[2],M=n[5],b=n[8];return r[0]=s*m+a*v+o*y,r[3]=s*f+a*x+o*M,r[6]=s*g+a*_+o*b,r[1]=l*m+c*v+h*y,r[4]=l*f+c*x+h*M,r[7]=l*g+c*_+h*b,r[2]=u*m+d*v+p*y,r[5]=u*f+d*x+p*M,r[8]=u*g+d*_+p*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8];return e*s*c-e*a*l-i*r*c+i*a*o+n*r*l-n*s*o}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=c*s-a*l,u=a*o-c*r,d=l*r-s*o,p=e*h+i*u+n*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return t[0]=h*m,t[1]=(n*l-c*i)*m,t[2]=(a*i-n*s)*m,t[3]=u*m,t[4]=(c*e-n*o)*m,t[5]=(n*r-a*e)*m,t[6]=d*m,t[7]=(i*o-l*e)*m,t[8]=(s*e-i*r)*m,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,r,s,a){const o=Math.cos(r),l=Math.sin(r);return this.set(i*o,i*l,-i*(o*s+l*a)+s+t,-n*l,n*o,-n*(-l*s+o*a)+a+e,0,0,1),this}scale(t,e){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){const e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],s=n[3],a=n[6],o=n[1],l=n[4],c=n[7];return n[0]=e*r+i*o,n[3]=e*s+i*l,n[6]=e*a+i*c,n[1]=-i*r+e*o,n[4]=-i*s+e*l,n[7]=-i*a+e*c,this}translate(t,e){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function Pt(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}const It={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Dt(t,e){return new It[t](e)}function Nt(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Ot(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function zt(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const Ut={[lt]:{[ct]:Ot},[ct]:{[lt]:zt}},Bt={legacyMode:!0,get workingColorSpace(){return ct},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,i){if(this.legacyMode||e===i||!e||!i)return t;if(Ut[e]&&void 0!==Ut[e][i]){const n=Ut[e][i];return t.r=n(t.r),t.g=n(t.g),t.b=n(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},Ft={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={r:0,g:0,b:0},Gt={h:0,s:0,l:0},Vt={h:0,s:0,l:0};function Ht(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}function Wt(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class jt{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e="srgb"){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Bt.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n="srgb-linear"){return this.r=t,this.g=e,this.b=i,Bt.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n="srgb-linear"){if(t=Mt(t,1),e=yt(e,0,1),i=yt(i,0,1),0===e)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=Ht(r,n,t+1/3),this.g=Ht(r,n,t),this.b=Ht(r,n,t-1/3)}return Bt.toWorkingColorSpace(this,n),this}setStyle(t,e="srgb"){function i(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,Bt.toWorkingColorSpace(this,e),i(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,Bt.toWorkingColorSpace(this,e),i(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const n=parseFloat(t[1])/360,r=parseFloat(t[2])/100,s=parseFloat(t[3])/100;return i(t[4]),this.setHSL(n,r,s,e)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],i=t.length;if(3===i)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,Bt.toWorkingColorSpace(this,e),this;if(6===i)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,Bt.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e="srgb"){const i=Ft[t.toLowerCase()];return void 0!==i?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ot(t.r),this.g=Ot(t.g),this.b=Ot(t.b),this}copyLinearToSRGB(t){return this.r=zt(t.r),this.g=zt(t.g),this.b=zt(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t="srgb"){return Bt.fromWorkingColorSpace(Wt(this,kt),t),yt(255*kt.r,0,255)<<16^yt(255*kt.g,0,255)<<8^yt(255*kt.b,0,255)<<0}getHexString(t="srgb"){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e="srgb-linear"){Bt.fromWorkingColorSpace(Wt(this,kt),e);const i=kt.r,n=kt.g,r=kt.b,s=Math.max(i,n,r),a=Math.min(i,n,r);let o,l;const c=(a+s)/2;if(a===s)o=0,l=0;else{const t=s-a;switch(l=c<=.5?t/(s+a):t/(2-s-a),s){case i:o=(n-r)/t+(n<r?6:0);break;case n:o=(r-i)/t+2;break;case r:o=(i-n)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e="srgb-linear"){return Bt.fromWorkingColorSpace(Wt(this,kt),e),t.r=kt.r,t.g=kt.g,t.b=kt.b,t}getStyle(t="srgb"){return Bt.fromWorkingColorSpace(Wt(this,kt),t),t!==lt?`color(${t} ${kt.r} ${kt.g} ${kt.b})`:`rgb(${255*kt.r|0},${255*kt.g|0},${255*kt.b|0})`}offsetHSL(t,e,i){return this.getHSL(Gt),Gt.h+=t,Gt.s+=e,Gt.l+=i,this.setHSL(Gt.h,Gt.s,Gt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Gt),t.getHSL(Vt);const i=bt(Gt.h,Vt.h,e),n=bt(Gt.s,Vt.s,e),r=bt(Gt.l,Vt.l,e);return this.setHSL(i,n,r),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let qt;jt.NAMES=Ft;class Xt{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===qt&&(qt=Nt("canvas")),qt.width=t.width,qt.height=t.height;const i=qt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=qt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Nt("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),r=n.data;for(let t=0;t<r.length;t++)r[t]=255*Ot(r[t]/255);return i.putImageData(n,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ot(e[t]/255)):e[t]=Ot(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Yt{constructor(t=null){this.isSource=!0,this.uuid=_t(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(null!==n){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)n[e].isDataTexture?t.push(Zt(n[e].image)):t.push(Zt(n[e]))}else t=Zt(n);i.url=t}return e||(t.images[this.uuid]=i),i}}function Zt(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Xt.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Jt=0;class Kt extends mt{constructor(t=Kt.DEFAULT_IMAGE,e=Kt.DEFAULT_MAPPING,i=1001,n=1001,r=1006,s=1008,a=1023,o=1009,l=1,c=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Jt++}),this.uuid=_t(),this.name="",this.source=new Yt(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=n,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new Lt(0,0),this.repeat=new Lt(1,1),this.center=new Lt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Rt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==n)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case c:t.x=t.x-Math.floor(t.x);break;case h:t.x=t.x<0?0:1;break;case u:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case c:t.y=t.y-Math.floor(t.y);break;case h:t.y=t.y<0?0:1;break;case u:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}Kt.DEFAULT_IMAGE=null,Kt.DEFAULT_MAPPING=n;class $t{constructor(t=0,e=0,i=0,n=1){$t.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=this.w,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*e+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*e+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*e+s[7]*i+s[11]*n+s[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,r;const s=.01,a=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],m=o[2],f=o[6],g=o[10];if(Math.abs(c-u)<s&&Math.abs(h-m)<s&&Math.abs(p-f)<s){if(Math.abs(c+u)<a&&Math.abs(h+m)<a&&Math.abs(p+f)<a&&Math.abs(l+d+g-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,x=(c+u)/4,_=(h+m)/4,y=(p+f)/4;return t>o&&t>v?t<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(t),n=x/i,r=_/i):o>v?o<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(o),i=x/n,r=y/n):v<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(v),i=_/r,n=y/r),this.set(i,n,r,e),this}let v=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(f-p)/v,this.y=(h-m)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Qt extends mt{constructor(t,e,i={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new $t(0,0,t,e),this.scissorTest=!1,this.viewport=new $t(0,0,t,e);const n={width:t,height:e,depth:1};this.texture=new Kt(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:f,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null,this.samples=void 0!==i.samples?i.samples:0}setSize(t,e,i=1){this.width===t&&this.height===e&&this.depth===i||(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Yt(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class te extends Kt{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=d,this.minFilter=d,this.wrapR=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ee extends Kt{constructor(t=null,e=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=d,this.minFilter=d,this.wrapR=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ie{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,r,s,a){let o=i[n+0],l=i[n+1],c=i[n+2],h=i[n+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(0===a)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=m);if(h!==m||o!==u||l!==d||c!==p){let t=1-a;const e=o*u+l*d+c*p+h*m,i=e>=0?1:-1,n=1-e*e;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,e*i);t=Math.sin(t*s)/r,a=Math.sin(a*s)/r}const r=a*i;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+m*r,t===1-a){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,i,n,r,s){const a=i[n],o=i[n+1],l=i[n+2],c=i[n+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return t[e]=a*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-a*d,t[e+2]=l*p+c*d+a*u-o*h,t[e+3]=c*p-a*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const i=t._x,n=t._y,r=t._z,s=t._order,a=Math.cos,o=Math.sin,l=a(i/2),c=a(n/2),h=a(r/2),u=o(i/2),d=o(n/2),p=o(r/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],r=e[8],s=e[1],a=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=i+a+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(s-n)*t}else if(i>a&&i>h){const t=2*Math.sqrt(1+i-a-h);this._w=(c-o)/t,this._x=.25*t,this._y=(n+s)/t,this._z=(r+l)/t}else if(a>h){const t=2*Math.sqrt(1+a-i-h);this._w=(r-l)/t,this._x=(n+s)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-i-a);this._w=(s-n)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(yt(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,r=t._z,s=t._w,a=e._x,o=e._y,l=e._z,c=e._w;return this._x=i*c+s*a+n*l-r*o,this._y=n*c+s*o+r*a-i*l,this._z=r*c+s*l+i*o-n*a,this._w=s*c-i*a-n*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,n=this._y,r=this._z,s=this._w;let a=s*t._w+i*t._x+n*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*i+e*this._x,this._y=t*n+e*this._y,this._z=t*r+e*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(o),c=Math.atan2(l,a),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=s*h+this._w*u,this._x=i*h+this._x*u,this._y=n*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),n=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(n),i*Math.sin(r),i*Math.cos(r),e*Math.sin(n))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class ne{constructor(t=0,e=0,i=0){ne.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(se.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(se.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,r=t.elements,s=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,r=t.x,s=t.y,a=t.z,o=t.w,l=o*e+s*n-a*i,c=o*i+a*e-r*n,h=o*n+r*i-s*e,u=-r*e-s*i-a*n;return this.x=l*o+u*-r+c*-a-h*-s,this.y=c*o+u*-s+h*-r-l*-a,this.z=h*o+u*-a+l*-s-c*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,r=t.z,s=e.x,a=e.y,o=e.z;return this.x=n*o-r*a,this.y=r*s-i*o,this.z=i*a-n*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return re.copy(this).projectOnVector(t),this.sub(re)}reflect(t){return this.sub(re.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(yt(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const re=new ne,se=new ie;class ae{constructor(t=new ne(1/0,1/0,1/0),e=new ne(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.length;o<l;o+=3){const l=t[o],c=t[o+1],h=t[o+2];l<e&&(e=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>a&&(a=h)}return this.min.set(e,i,n),this.max.set(r,s,a),this}setFromBufferAttribute(t){let e=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,a=-1/0;for(let o=0,l=t.count;o<l;o++){const l=t.getX(o),c=t.getY(o),h=t.getZ(o);l<e&&(e=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>a&&(a=h)}return this.min.set(e,i,n),this.max.set(r,s,a),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=le.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i)if(e&&null!=i.attributes&&void 0!==i.attributes.position){const e=i.attributes.position;for(let i=0,n=e.count;i<n;i++)le.fromBufferAttribute(e,i).applyMatrix4(t.matrixWorld),this.expandByPoint(le)}else null===i.boundingBox&&i.computeBoundingBox(),ce.copy(i.boundingBox),ce.applyMatrix4(t.matrixWorld),this.union(ce);const n=t.children;for(let t=0,i=n.length;t<i;t++)this.expandByObject(n[t],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,le),le.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ge),ve.subVectors(this.max,ge),he.subVectors(t.a,ge),ue.subVectors(t.b,ge),de.subVectors(t.c,ge),pe.subVectors(ue,he),me.subVectors(de,ue),fe.subVectors(he,de);let e=[0,-pe.z,pe.y,0,-me.z,me.y,0,-fe.z,fe.y,pe.z,0,-pe.x,me.z,0,-me.x,fe.z,0,-fe.x,-pe.y,pe.x,0,-me.y,me.x,0,-fe.y,fe.x,0];return!!ye(e,he,ue,de,ve)&&(e=[1,0,0,0,1,0,0,0,1],!!ye(e,he,ue,de,ve)&&(xe.crossVectors(pe,me),e=[xe.x,xe.y,xe.z],ye(e,he,ue,de,ve)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return le.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(le).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(oe[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),oe[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),oe[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),oe[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),oe[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),oe[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),oe[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),oe[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(oe)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const oe=[new ne,new ne,new ne,new ne,new ne,new ne,new ne,new ne],le=new ne,ce=new ae,he=new ne,ue=new ne,de=new ne,pe=new ne,me=new ne,fe=new ne,ge=new ne,ve=new ne,xe=new ne,_e=new ne;function ye(t,e,i,n,r){for(let s=0,a=t.length-3;s<=a;s+=3){_e.fromArray(t,s);const a=r.x*Math.abs(_e.x)+r.y*Math.abs(_e.y)+r.z*Math.abs(_e.z),o=e.dot(_e),l=i.dot(_e),c=n.dot(_e);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>a)return!1}return!0}const Me=new ae,be=new ne,Se=new ne,we=new ne;class Te{constructor(t=new ne,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):Me.setFromPoints(t).getCenter(i);let n=0;for(let e=0,r=t.length;e<r;e++)n=Math.max(n,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){we.subVectors(t,this.center);const e=we.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.add(we.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return!0===this.center.equals(t.center)?Se.set(0,0,1).multiplyScalar(t.radius):Se.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(be.copy(t.center).add(Se)),this.expandByPoint(be.copy(t.center).sub(Se)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ae=new ne,Ee=new ne,Ce=new ne,Le=new ne,Re=new ne,Pe=new ne,Ie=new ne;class De{constructor(t=new ne,e=new ne(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ae)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ae.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ae.copy(this.direction).multiplyScalar(e).add(this.origin),Ae.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Ee.copy(t).add(e).multiplyScalar(.5),Ce.copy(e).sub(t).normalize(),Le.copy(this.origin).sub(Ee);const r=.5*t.distanceTo(e),s=-this.direction.dot(Ce),a=Le.dot(this.direction),o=-Le.dot(Ce),l=Le.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*o-a,u=s*a-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+s*u+2*a)+u*(s*h+u+2*o)+l}else u=r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-s*r+a)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(s*r+a)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+a)),d=-h*h+u*(u+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(Ce).multiplyScalar(u).add(Ee),d}intersectSphere(t,e){Ae.subVectors(t.center,this.origin);const i=Ae.dot(this.direction),n=Ae.dot(Ae)-i*i,r=t.radius*t.radius;if(n>r)return null;const s=Math.sqrt(r-n),a=i-s,o=i+s;return a<0&&o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,r,s,a,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(i=(t.min.x-u.x)*l,n=(t.max.x-u.x)*l):(i=(t.max.x-u.x)*l,n=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,s=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,s=(t.min.y-u.y)*c),i>s||r>n?null:((r>i||i!=i)&&(i=r),(s<n||n!=n)&&(n=s),h>=0?(a=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(a=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),i>o||a>n?null:((a>i||i!=i)&&(i=a),(o<n||n!=n)&&(n=o),n<0?null:this.at(i>=0?i:n,e)))}intersectsBox(t){return null!==this.intersectBox(t,Ae)}intersectTriangle(t,e,i,n,r){Re.subVectors(e,t),Pe.subVectors(i,t),Ie.crossVectors(Re,Pe);let s,a=this.direction.dot(Ie);if(a>0){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Le.subVectors(this.origin,t);const o=s*this.direction.dot(Pe.crossVectors(Le,Pe));if(o<0)return null;const l=s*this.direction.dot(Re.cross(Le));if(l<0)return null;if(o+l>a)return null;const c=-s*Le.dot(Ie);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Ne{constructor(){Ne.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,n,r,s,a,o,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=a,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ne).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/Oe.setFromMatrixColumn(t,0).length(),r=1/Oe.setFromMatrixColumn(t,1).length(),s=1/Oe.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*s,e[9]=i[9]*s,e[10]=i[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,r=t.z,s=Math.cos(i),a=Math.sin(i),o=Math.cos(n),l=Math.sin(n),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=s*c,i=s*h,n=a*c,r=a*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=i+n*l,e[5]=t-r*l,e[9]=-a*o,e[2]=r-t*l,e[6]=n+i*l,e[10]=s*o}else if("YXZ"===t.order){const t=o*c,i=o*h,n=l*c,r=l*h;e[0]=t+r*a,e[4]=n*a-i,e[8]=s*l,e[1]=s*h,e[5]=s*c,e[9]=-a,e[2]=i*a-n,e[6]=r+t*a,e[10]=s*o}else if("ZXY"===t.order){const t=o*c,i=o*h,n=l*c,r=l*h;e[0]=t-r*a,e[4]=-s*h,e[8]=n+i*a,e[1]=i+n*a,e[5]=s*c,e[9]=r-t*a,e[2]=-s*l,e[6]=a,e[10]=s*o}else if("ZYX"===t.order){const t=s*c,i=s*h,n=a*c,r=a*h;e[0]=o*c,e[4]=n*l-i,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=i*l-n,e[2]=-l,e[6]=a*o,e[10]=s*o}else if("YZX"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*c,e[4]=r-t*h,e[8]=n*h+i,e[1]=h,e[5]=s*c,e[9]=-a*c,e[2]=-l*c,e[6]=i*h+n,e[10]=t-r*h}else if("XZY"===t.order){const t=s*o,i=s*l,n=a*o,r=a*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=s*c,e[9]=i*h-n,e[2]=n*h-i,e[6]=a*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Ue,t,Be)}lookAt(t,e,i){const n=this.elements;return Ge.subVectors(t,e),0===Ge.lengthSq()&&(Ge.z=1),Ge.normalize(),Fe.crossVectors(i,Ge),0===Fe.lengthSq()&&(1===Math.abs(i.z)?Ge.x+=1e-4:Ge.z+=1e-4,Ge.normalize(),Fe.crossVectors(i,Ge)),Fe.normalize(),ke.crossVectors(Ge,Fe),n[0]=Fe.x,n[4]=ke.x,n[8]=Ge.x,n[1]=Fe.y,n[5]=ke.y,n[9]=Ge.y,n[2]=Fe.z,n[6]=ke.z,n[10]=Ge.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,r=this.elements,s=i[0],a=i[4],o=i[8],l=i[12],c=i[1],h=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],v=i[3],x=i[7],_=i[11],y=i[15],M=n[0],b=n[4],S=n[8],w=n[12],T=n[1],A=n[5],E=n[9],C=n[13],L=n[2],R=n[6],P=n[10],I=n[14],D=n[3],N=n[7],O=n[11],z=n[15];return r[0]=s*M+a*T+o*L+l*D,r[4]=s*b+a*A+o*R+l*N,r[8]=s*S+a*E+o*P+l*O,r[12]=s*w+a*C+o*I+l*z,r[1]=c*M+h*T+u*L+d*D,r[5]=c*b+h*A+u*R+d*N,r[9]=c*S+h*E+u*P+d*O,r[13]=c*w+h*C+u*I+d*z,r[2]=p*M+m*T+f*L+g*D,r[6]=p*b+m*A+f*R+g*N,r[10]=p*S+m*E+f*P+g*O,r[14]=p*w+m*C+f*I+g*z,r[3]=v*M+x*T+_*L+y*D,r[7]=v*b+x*A+_*R+y*N,r[11]=v*S+x*E+_*P+y*O,r[15]=v*w+x*C+_*I+y*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],s=t[1],a=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-n*l*h-r*a*u+i*l*u+n*a*d-i*o*d)+t[7]*(+e*o*d-e*l*u+r*s*u-n*s*d+n*l*c-r*o*c)+t[11]*(+e*l*h-e*a*d-r*s*h+i*s*d+r*a*c-i*l*c)+t[15]*(-n*a*c-e*o*h+e*a*u+n*s*h-i*s*u+i*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],s=t[4],a=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],m=t[13],f=t[14],g=t[15],v=h*f*l-m*u*l+m*o*d-a*f*d-h*o*g+a*u*g,x=p*u*l-c*f*l-p*o*d+s*f*d+c*o*g-s*u*g,_=c*m*l-p*h*l+p*a*d-s*m*d-c*a*g+s*h*g,y=p*h*o-c*m*o-p*a*u+s*m*u+c*a*f-s*h*f,M=e*v+i*x+n*_+r*y;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/M;return t[0]=v*b,t[1]=(m*u*r-h*f*r-m*n*d+i*f*d+h*n*g-i*u*g)*b,t[2]=(a*f*r-m*o*r+m*n*l-i*f*l-a*n*g+i*o*g)*b,t[3]=(h*o*r-a*u*r-h*n*l+i*u*l+a*n*d-i*o*d)*b,t[4]=x*b,t[5]=(c*f*r-p*u*r+p*n*d-e*f*d-c*n*g+e*u*g)*b,t[6]=(p*o*r-s*f*r-p*n*l+e*f*l+s*n*g-e*o*g)*b,t[7]=(s*u*r-c*o*r+c*n*l-e*u*l-s*n*d+e*o*d)*b,t[8]=_*b,t[9]=(p*h*r-c*m*r-p*i*d+e*m*d+c*i*g-e*h*g)*b,t[10]=(s*m*r-p*a*r+p*i*l-e*m*l-s*i*g+e*a*g)*b,t[11]=(c*a*r-s*h*r-c*i*l+e*h*l+s*i*d-e*a*d)*b,t[12]=y*b,t[13]=(c*m*n-p*h*n+p*i*u-e*m*u-c*i*f+e*h*f)*b,t[14]=(p*a*n-s*m*n-p*i*o+e*m*o+s*i*f-e*a*f)*b,t[15]=(s*h*n-c*a*n+c*i*o-e*h*o-s*i*u+e*a*u)*b,this}scale(t){const e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),r=1-i,s=t.x,a=t.y,o=t.z,l=r*s,c=r*a;return this.set(l*s+i,l*a-n*o,l*o+n*a,0,l*a+n*o,c*a+i,c*o-n*s,0,l*o-n*a,c*o+n*s,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,r,s){return this.set(1,i,r,0,t,1,s,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,r=e._x,s=e._y,a=e._z,o=e._w,l=r+r,c=s+s,h=a+a,u=r*l,d=r*c,p=r*h,m=s*c,f=s*h,g=a*h,v=o*l,x=o*c,_=o*h,y=i.x,M=i.y,b=i.z;return n[0]=(1-(m+g))*y,n[1]=(d+_)*y,n[2]=(p-x)*y,n[3]=0,n[4]=(d-_)*M,n[5]=(1-(u+g))*M,n[6]=(f+v)*M,n[7]=0,n[8]=(p+x)*b,n[9]=(f-v)*b,n[10]=(1-(u+m))*b,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let r=Oe.set(n[0],n[1],n[2]).length();const s=Oe.set(n[4],n[5],n[6]).length(),a=Oe.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),t.x=n[12],t.y=n[13],t.z=n[14],ze.copy(this);const o=1/r,l=1/s,c=1/a;return ze.elements[0]*=o,ze.elements[1]*=o,ze.elements[2]*=o,ze.elements[4]*=l,ze.elements[5]*=l,ze.elements[6]*=l,ze.elements[8]*=c,ze.elements[9]*=c,ze.elements[10]*=c,e.setFromRotationMatrix(ze),i.x=r,i.y=s,i.z=a,this}makePerspective(t,e,i,n,r,s){const a=this.elements,o=2*r/(e-t),l=2*r/(i-n),c=(e+t)/(e-t),h=(i+n)/(i-n),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return a[0]=o,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,n,r,s){const a=this.elements,o=1/(e-t),l=1/(i-n),c=1/(s-r),h=(e+t)*o,u=(i+n)*l,d=(s+r)*c;return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Oe=new ne,ze=new Ne,Ue=new ne(0,0,0),Be=new ne(1,1,1),Fe=new ne,ke=new ne,Ge=new ne,Ve=new Ne,He=new ie;class We{constructor(t=0,e=0,i=0,n=We.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,r=n[0],s=n[4],a=n[8],o=n[1],l=n[5],c=n[9],h=n[2],u=n[6],d=n[10];switch(e){case"XYZ":this._y=Math.asin(yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-s,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-yt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(yt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-yt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(yt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-yt(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Ve.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ve,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return He.setFromEuler(this),this.setFromQuaternion(He,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}We.DefaultOrder="XYZ",We.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class je{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let qe=0;const Xe=new ne,Ye=new ie,Ze=new Ne,Je=new ne,Ke=new ne,$e=new ne,Qe=new ie,ti=new ne(1,0,0),ei=new ne(0,1,0),ii=new ne(0,0,1),ni={type:"added"},ri={type:"removed"};class si extends mt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:qe++}),this.uuid=_t(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=si.DefaultUp.clone();const t=new ne,e=new We,i=new ie,n=new ne(1,1,1);e._onChange((function(){i.setFromEuler(e,!1)})),i._onChange((function(){e.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ne},normalMatrix:{value:new Rt}}),this.matrix=new Ne,this.matrixWorld=new Ne,this.matrixAutoUpdate=si.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=si.DefaultMatrixWorldAutoUpdate,this.layers=new je,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ye.setFromAxisAngle(t,e),this.quaternion.multiply(Ye),this}rotateOnWorldAxis(t,e){return Ye.setFromAxisAngle(t,e),this.quaternion.premultiply(Ye),this}rotateX(t){return this.rotateOnAxis(ti,t)}rotateY(t){return this.rotateOnAxis(ei,t)}rotateZ(t){return this.rotateOnAxis(ii,t)}translateOnAxis(t,e){return Xe.copy(t).applyQuaternion(this.quaternion),this.position.add(Xe.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ti,t)}translateY(t){return this.translateOnAxis(ei,t)}translateZ(t){return this.translateOnAxis(ii,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Ze.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Je.copy(t):Je.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Ke.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ze.lookAt(Ke,Je,this.up):Ze.lookAt(Je,Ke,this.up),this.quaternion.setFromRotationMatrix(Ze),n&&(Ze.extractRotation(n.matrixWorld),Ye.setFromRotationMatrix(Ze),this.quaternion.premultiply(Ye.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(ni)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ri)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ri)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ze.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Ze.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ze),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(t,e);if(void 0!==n)return n}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ke,t,$e),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ke,Qe,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++){const n=e[i];!0!==n.matrixWorldAutoUpdate&&!0!==t||n.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++){const i=t[e];!0===i.matrixWorldAutoUpdate&&i.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(n.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,n=i.length;e<n;e++){const n=i[e];r(t.shapes,n)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,n=this.material.length;i<n;i++)e.push(r(t.materials,this.material[i]));n.material=e}else n.material=r(t.materials,this.material);if(this.children.length>0){n.children=[];for(let e=0;e<this.children.length;e++)n.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];n.animations.push(r(t.animations,i))}}if(e){const e=s(t.geometries),n=s(t.materials),r=s(t.textures),a=s(t.images),o=s(t.shapes),l=s(t.skeletons),c=s(t.animations),h=s(t.nodes);e.length>0&&(i.geometries=e),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),l.length>0&&(i.skeletons=l),c.length>0&&(i.animations=c),h.length>0&&(i.nodes=h)}return i.object=n,i;function s(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}si.DefaultUp=new ne(0,1,0),si.DefaultMatrixAutoUpdate=!0,si.DefaultMatrixWorldAutoUpdate=!0;const ai=new ne,oi=new ne,li=new ne,ci=new ne,hi=new ne,ui=new ne,di=new ne,pi=new ne,mi=new ne,fi=new ne;class gi{constructor(t=new ne,e=new ne,i=new ne){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),ai.subVectors(t,e),n.cross(ai);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(t,e,i,n,r){ai.subVectors(n,e),oi.subVectors(i,e),li.subVectors(t,e);const s=ai.dot(ai),a=ai.dot(oi),o=ai.dot(li),l=oi.dot(oi),c=oi.dot(li),h=s*l-a*a;if(0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*o-a*c)*u,p=(s*c-a*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,ci),ci.x>=0&&ci.y>=0&&ci.x+ci.y<=1}static getUV(t,e,i,n,r,s,a,o){return this.getBarycoord(t,e,i,n,ci),o.set(0,0),o.addScaledVector(r,ci.x),o.addScaledVector(s,ci.y),o.addScaledVector(a,ci.z),o}static isFrontFacing(t,e,i,n){return ai.subVectors(i,e),oi.subVectors(t,e),ai.cross(oi).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ai.subVectors(this.c,this.b),oi.subVectors(this.a,this.b),.5*ai.cross(oi).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return gi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return gi.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,n,r){return gi.getUV(t,this.a,this.b,this.c,e,i,n,r)}containsPoint(t){return gi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return gi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,r=this.c;let s,a;hi.subVectors(n,i),ui.subVectors(r,i),pi.subVectors(t,i);const o=hi.dot(pi),l=ui.dot(pi);if(o<=0&&l<=0)return e.copy(i);mi.subVectors(t,n);const c=hi.dot(mi),h=ui.dot(mi);if(c>=0&&h<=c)return e.copy(n);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return s=o/(o-c),e.copy(i).addScaledVector(hi,s);fi.subVectors(t,r);const d=hi.dot(fi),p=ui.dot(fi);if(p>=0&&d<=p)return e.copy(r);const m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(ui,a);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return di.subVectors(r,n),a=(h-c)/(h-c+(d-p)),e.copy(n).addScaledVector(di,a);const g=1/(f+m+u);return s=m*g,a=u*g,e.copy(i).addScaledVector(hi,s).addScaledVector(ui,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let vi=0;class xi extends mt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:vi++}),this.uuid=_t(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=i,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ht,this.stencilZFail=ht,this.stencilZPass=ht,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const i=t[e];if(void 0===i){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(t){const e=[];for(const i in t){const n=t[i];delete n.metadata,e.push(n)}return e}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(i.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(i.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),!1===this.fog&&(i.fog=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),e){const e=n(t.textures),r=n(t.images);e.length>0&&(i.textures=e),r.length>0&&(i.images=r)}return i}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(null!==e){const t=e.length;i=new Array(t);for(let n=0;n!==t;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class _i extends xi{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const yi=new ne,Mi=new Lt;class bi{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.usage=ut,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Mi.fromBufferAttribute(this,e),Mi.applyMatrix3(t),this.setXY(e,Mi.x,Mi.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)yi.fromBufferAttribute(this,e),yi.applyMatrix3(t),this.setXYZ(e,yi.x,yi.y,yi.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)yi.fromBufferAttribute(this,e),yi.applyMatrix4(t),this.setXYZ(e,yi.x,yi.y,yi.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)yi.fromBufferAttribute(this,e),yi.applyNormalMatrix(t),this.setXYZ(e,yi.x,yi.y,yi.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)yi.fromBufferAttribute(this,e),yi.transformDirection(t),this.setXYZ(e,yi.x,yi.y,yi.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=At(e,this.array)),e}setX(t,e){return this.normalized&&(e=Et(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=At(e,this.array)),e}setY(t,e){return this.normalized&&(e=Et(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=At(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Et(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=At(e,this.array)),e}setW(t,e){return this.normalized&&(e=Et(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array),n=Et(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t*=this.itemSize,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array),n=Et(n,this.array),r=Et(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),this.usage!==ut&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Si extends bi{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class wi extends bi{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Ti extends bi{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ai=0;const Ei=new Ne,Ci=new si,Li=new ne,Ri=new ae,Pi=new ae,Ii=new ne;class Di extends mt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ai++}),this.uuid=_t(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Pt(t)?wi:Si)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new Rt).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(t),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ei.makeRotationFromQuaternion(t),this.applyMatrix4(Ei),this}rotateX(t){return Ei.makeRotationX(t),this.applyMatrix4(Ei),this}rotateY(t){return Ei.makeRotationY(t),this.applyMatrix4(Ei),this}rotateZ(t){return Ei.makeRotationZ(t),this.applyMatrix4(Ei),this}translate(t,e,i){return Ei.makeTranslation(t,e,i),this.applyMatrix4(Ei),this}scale(t,e,i){return Ei.makeScale(t,e,i),this.applyMatrix4(Ei),this}lookAt(t){return Ci.lookAt(t),Ci.updateMatrix(),this.applyMatrix4(Ci.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Li).negate(),this.translate(Li.x,Li.y,Li.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Ti(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ae);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ne(-1/0,-1/0,-1/0),new ne(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Ri.setFromBufferAttribute(i),this.morphTargetsRelative?(Ii.addVectors(this.boundingBox.min,Ri.min),this.boundingBox.expandByPoint(Ii),Ii.addVectors(this.boundingBox.max,Ri.max),this.boundingBox.expandByPoint(Ii)):(this.boundingBox.expandByPoint(Ri.min),this.boundingBox.expandByPoint(Ri.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Te);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ne,1/0);if(t){const i=this.boundingSphere.center;if(Ri.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];Pi.setFromBufferAttribute(i),this.morphTargetsRelative?(Ii.addVectors(Ri.min,Pi.min),Ri.expandByPoint(Ii),Ii.addVectors(Ri.max,Pi.max),Ri.expandByPoint(Ii)):(Ri.expandByPoint(Pi.min),Ri.expandByPoint(Pi.max))}Ri.getCenter(i);let n=0;for(let e=0,r=t.count;e<r;e++)Ii.fromBufferAttribute(t,e),n=Math.max(n,i.distanceToSquared(Ii));if(e)for(let r=0,s=e.length;r<s;r++){const s=e[r],a=this.morphTargetsRelative;for(let e=0,r=s.count;e<r;e++)Ii.fromBufferAttribute(s,e),a&&(Li.fromBufferAttribute(t,e),Ii.add(Li)),n=Math.max(n,i.distanceToSquared(Ii))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const i=t.array,n=e.position.array,r=e.normal.array,s=e.uv.array,a=n.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new bi(new Float32Array(4*a),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let t=0;t<a;t++)l[t]=new ne,c[t]=new ne;const h=new ne,u=new ne,d=new ne,p=new Lt,m=new Lt,f=new Lt,g=new ne,v=new ne;function x(t,e,i){h.fromArray(n,3*t),u.fromArray(n,3*e),d.fromArray(n,3*i),p.fromArray(s,2*t),m.fromArray(s,2*e),f.fromArray(s,2*i),u.sub(h),d.sub(h),m.sub(p),f.sub(p);const r=1/(m.x*f.y-f.x*m.y);isFinite(r)&&(g.copy(u).multiplyScalar(f.y).addScaledVector(d,-m.y).multiplyScalar(r),v.copy(d).multiplyScalar(m.x).addScaledVector(u,-f.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[i].add(g),c[t].add(v),c[e].add(v),c[i].add(v))}let _=this.groups;0===_.length&&(_=[{start:0,count:i.length}]);for(let t=0,e=_.length;t<e;++t){const e=_[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)x(i[t+0],i[t+1],i[t+2])}const y=new ne,M=new ne,b=new ne,S=new ne;function w(t){b.fromArray(r,3*t),S.copy(b);const e=l[t];y.copy(e),y.sub(b.multiplyScalar(b.dot(e))).normalize(),M.crossVectors(S,e);const i=M.dot(c[t])<0?-1:1;o[4*t]=y.x,o[4*t+1]=y.y,o[4*t+2]=y.z,o[4*t+3]=i}for(let t=0,e=_.length;t<e;++t){const e=_[t],n=e.start;for(let t=n,r=n+e.count;t<r;t+=3)w(i[t+0]),w(i[t+1]),w(i[t+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new bi(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const n=new ne,r=new ne,s=new ne,a=new ne,o=new ne,l=new ne,c=new ne,h=new ne;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),m=t.getX(u+2);n.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,m),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),a.add(c),o.add(c),l.add(c),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let t=0,a=e.count;t<a;t+=3)n.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),s.fromBufferAttribute(e,t+2),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),i.setXYZ(t+0,c.x,c.y,c.z),i.setXYZ(t+1,c.x,c.y,c.z),i.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Ii.fromBufferAttribute(t,e),Ii.normalize(),t.setXYZ(e,Ii.x,Ii.y,Ii.z)}toNonIndexed(){function t(t,e){const i=t.array,n=t.itemSize,r=t.normalized,s=new i.constructor(e.length*n);let a=0,o=0;for(let r=0,l=e.length;r<l;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*n;for(let t=0;t<n;t++)s[o++]=i[a++]}return new bi(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Di,i=this.index.array,n=this.attributes;for(const r in n){const s=t(n[r],i);e.setAttribute(r,s)}const r=this.morphAttributes;for(const n in r){const s=[],a=r[n];for(let e=0,n=a.length;e<n;e++){const n=t(a[e],i);s.push(n)}e.morphAttributes[n]=s}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let t=0,i=s.length;t<i;t++){const i=s[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const n=i[e];t.data.attributes[e]=n.toJSON(t.data)}const n={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],s=[];for(let e=0,n=i.length;e<n;e++){const n=i[e];s.push(n.toJSON(t.data))}s.length>0&&(n[e]=s,r=!0)}r&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone(e));const n=t.attributes;for(const t in n){const i=n[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],n=r[t];for(let t=0,r=n.length;t<r;t++)i.push(n[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let t=0,e=s.length;t<e;t++){const e=s[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,void 0!==t.parameters&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ni=new Ne,Oi=new De,zi=new Te,Ui=new ne,Bi=new ne,Fi=new ne,ki=new ne,Gi=new ne,Vi=new ne,Hi=new ne,Wi=new ne,ji=new ne,qi=new Lt,Xi=new Lt,Yi=new Lt,Zi=new ne,Ji=new ne;class Ki extends si{constructor(t=new Di,e=new _i){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}raycast(t,e){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),zi.copy(i.boundingSphere),zi.applyMatrix4(r),!1===t.ray.intersectsSphere(zi))return;if(Ni.copy(r).invert(),Oi.copy(t.ray).applyMatrix4(Ni),null!==i.boundingBox&&!1===Oi.intersectsBox(i.boundingBox))return;let s;const a=i.index,o=i.attributes.position,l=i.morphAttributes.position,c=i.morphTargetsRelative,h=i.attributes.uv,u=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==a)if(Array.isArray(n))for(let i=0,r=d.length;i<r;i++){const r=d[i],m=n[r.materialIndex];for(let i=Math.max(r.start,p.start),n=Math.min(a.count,Math.min(r.start+r.count,p.start+p.count));i<n;i+=3){const n=a.getX(i),d=a.getX(i+1),p=a.getX(i+2);s=$i(this,m,t,Oi,o,l,c,h,u,n,d,p),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=r.materialIndex,e.push(s))}}else{for(let i=Math.max(0,p.start),r=Math.min(a.count,p.start+p.count);i<r;i+=3){const r=a.getX(i),d=a.getX(i+1),p=a.getX(i+2);s=$i(this,n,t,Oi,o,l,c,h,u,r,d,p),s&&(s.faceIndex=Math.floor(i/3),e.push(s))}}else if(void 0!==o)if(Array.isArray(n))for(let i=0,r=d.length;i<r;i++){const r=d[i],a=n[r.materialIndex];for(let i=Math.max(r.start,p.start),n=Math.min(o.count,Math.min(r.start+r.count,p.start+p.count));i<n;i+=3){s=$i(this,a,t,Oi,o,l,c,h,u,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=r.materialIndex,e.push(s))}}else{for(let i=Math.max(0,p.start),r=Math.min(o.count,p.start+p.count);i<r;i+=3){s=$i(this,n,t,Oi,o,l,c,h,u,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),e.push(s))}}}}function $i(t,e,i,n,r,s,a,o,l,c,h,u){Ui.fromBufferAttribute(r,c),Bi.fromBufferAttribute(r,h),Fi.fromBufferAttribute(r,u);const d=t.morphTargetInfluences;if(s&&d){Hi.set(0,0,0),Wi.set(0,0,0),ji.set(0,0,0);for(let t=0,e=s.length;t<e;t++){const e=d[t],i=s[t];0!==e&&(ki.fromBufferAttribute(i,c),Gi.fromBufferAttribute(i,h),Vi.fromBufferAttribute(i,u),a?(Hi.addScaledVector(ki,e),Wi.addScaledVector(Gi,e),ji.addScaledVector(Vi,e)):(Hi.addScaledVector(ki.sub(Ui),e),Wi.addScaledVector(Gi.sub(Bi),e),ji.addScaledVector(Vi.sub(Fi),e)))}Ui.add(Hi),Bi.add(Wi),Fi.add(ji)}t.isSkinnedMesh&&(t.boneTransform(c,Ui),t.boneTransform(h,Bi),t.boneTransform(u,Fi));const p=function(t,e,i,n,r,s,a,o){let l;if(l=1===e.side?n.intersectTriangle(a,s,r,!0,o):n.intersectTriangle(r,s,a,2!==e.side,o),null===l)return null;Ji.copy(o),Ji.applyMatrix4(t.matrixWorld);const c=i.ray.origin.distanceTo(Ji);return c<i.near||c>i.far?null:{distance:c,point:Ji.clone(),object:t}}(t,e,i,n,Ui,Bi,Fi,Zi);if(p){o&&(qi.fromBufferAttribute(o,c),Xi.fromBufferAttribute(o,h),Yi.fromBufferAttribute(o,u),p.uv=gi.getUV(Zi,Ui,Bi,Fi,qi,Xi,Yi,new Lt)),l&&(qi.fromBufferAttribute(l,c),Xi.fromBufferAttribute(l,h),Yi.fromBufferAttribute(l,u),p.uv2=gi.getUV(Zi,Ui,Bi,Fi,qi,Xi,Yi,new Lt));const t={a:c,b:h,c:u,normal:new ne,materialIndex:0};gi.getNormal(Ui,Bi,Fi,t.normal),p.face=t}return p}class Qi extends Di{constructor(t=1,e=1,i=1,n=1,r=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const a=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,i,n,r,s,p,m,f,g,v){const x=s/f,_=p/g,y=s/2,M=p/2,b=m/2,S=f+1,w=g+1;let T=0,A=0;const E=new ne;for(let s=0;s<w;s++){const a=s*_-M;for(let o=0;o<S;o++){const u=o*x-y;E[t]=u*n,E[e]=a*r,E[i]=b,l.push(E.x,E.y,E.z),E[t]=0,E[e]=0,E[i]=m>0?1:-1,c.push(E.x,E.y,E.z),h.push(o/f),h.push(1-s/g),T+=1}}for(let t=0;t<g;t++)for(let e=0;e<f;e++){const i=u+e+S*t,n=u+e+S*(t+1),r=u+(e+1)+S*(t+1),s=u+(e+1)+S*t;o.push(i,n,s),o.push(n,r,s),A+=6}a.addGroup(d,A,v),d+=A,u+=T}p("z","y","x",-1,-1,i,e,t,s,r,0),p("z","y","x",1,-1,i,e,-t,s,r,1),p("x","z","y",1,1,t,i,e,n,s,2),p("x","z","y",1,-1,t,i,-e,n,s,3),p("x","y","z",1,-1,t,e,i,n,r,4),p("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(o),this.setAttribute("position",new Ti(l,3)),this.setAttribute("normal",new Ti(c,3)),this.setAttribute("uv",new Ti(h,2))}static fromJSON(t){return new Qi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function tn(t){const e={};for(const i in t){e[i]={};for(const n in t[i]){const r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}function en(t){const e={};for(let i=0;i<t.length;i++){const n=tn(t[i]);for(const t in n)e[t]=n[t]}return e}const nn={clone:tn,merge:en};class rn extends xi{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=tn(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let i=0;i<t.length;i++)e.push(t[i].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const i={};for(const t in this.extensions)!0===this.extensions[t]&&(i[t]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class sn extends si{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ne,this.projectionMatrix=new Ne,this.projectionMatrixInverse=new Ne}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class an extends sn{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*xt*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*vt*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*xt*Math.atan(Math.tan(.5*vt*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,n,r,s){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*vt*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n;const s=this.view;if(null!==this.view&&this.view.enabled){const t=s.fullWidth,a=s.fullHeight;r+=s.offsetX*n/t,e-=s.offsetY*i/a,n*=s.width/t,i*=s.height/a}const a=this.filmOffset;0!==a&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const on=90;class ln extends si{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i;const n=new an(on,1,t,e);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new ne(1,0,0)),this.add(n);const r=new an(on,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ne(-1,0,0)),this.add(r);const s=new an(on,1,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new ne(0,1,0)),this.add(s);const a=new an(on,1,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new ne(0,-1,0)),this.add(a);const o=new an(on,1,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new ne(0,0,1)),this.add(o);const l=new an(on,1,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new ne(0,0,-1)),this.add(l)}update(t,e){null===this.parent&&this.updateMatrixWorld();const i=this.renderTarget,[n,r,s,a,o,l]=this.children,c=t.getRenderTarget(),h=t.toneMapping,u=t.xr.enabled;t.toneMapping=0,t.xr.enabled=!1;const d=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,n),t.setRenderTarget(i,1),t.render(e,r),t.setRenderTarget(i,2),t.render(e,s),t.setRenderTarget(i,3),t.render(e,a),t.setRenderTarget(i,4),t.render(e,o),i.texture.generateMipmaps=d,t.setRenderTarget(i,5),t.render(e,l),t.setRenderTarget(c),t.toneMapping=h,t.xr.enabled=u,i.texture.needsPMREMUpdate=!0}}class cn extends Kt{constructor(t,e,i,n,s,a,o,l,c,h){super(t=void 0!==t?t:[],e=void 0!==e?e:r,i,n,s,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class hn extends Qt{constructor(t,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new cn(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:f}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},n=new Qi(5,5,5),r=new rn({name:"CubemapFromEquirect",uniforms:tn(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=e;const s=new Ki(n,r),a=e.minFilter;e.minFilter===v&&(e.minFilter=f);return new ln(1,10,this).update(t,s),e.minFilter=a,s.geometry.dispose(),s.material.dispose(),this}clear(t,e,i,n){const r=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,i,n);t.setRenderTarget(r)}}const un=new ne,dn=new ne,pn=new Rt;class mn{constructor(t=new ne(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=un.subVectors(i,e).cross(dn.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){const i=t.delta(un),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/n;return r<0||r>1?null:e.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||pn.getNormalMatrix(t),n=this.coplanarPoint(un).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const fn=new Te,gn=new ne;class vn{constructor(t=new mn,e=new mn,i=new mn,n=new mn,r=new mn,s=new mn){this.planes=[t,e,i,n,r,s]}set(t,e,i,n,r,s){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(r),a[5].copy(s),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){const e=this.planes,i=t.elements,n=i[0],r=i[1],s=i[2],a=i[3],o=i[4],l=i[5],c=i[6],h=i[7],u=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],v=i[14],x=i[15];return e[0].setComponents(a-n,h-o,m-u,x-f).normalize(),e[1].setComponents(a+n,h+o,m+u,x+f).normalize(),e[2].setComponents(a+r,h+l,m+d,x+g).normalize(),e[3].setComponents(a-r,h-l,m-d,x-g).normalize(),e[4].setComponents(a-s,h-c,m-p,x-v).normalize(),e[5].setComponents(a+s,h+c,m+p,x+v).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),fn.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(fn)}intersectsSprite(t){return fn.center.set(0,0,0),fn.radius=.7071067811865476,fn.applyMatrix4(t.matrixWorld),this.intersectsSphere(fn)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let t=0;t<6;t++){if(e[t].distanceToPoint(i)<n)return!1}return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(gn.x=n.normal.x>0?t.max.x:t.min.x,gn.y=n.normal.y>0?t.max.y:t.min.y,gn.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(gn)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function xn(){let t=null,e=!1,i=null,n=null;function r(e,s){i(e,s),n=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==i&&(n=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(t){i=t},setContext:function(e){t=e}}}function _n(t,e){const i=e.isWebGL2,n=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),n.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const i=n.get(e);i&&(t.deleteBuffer(i.buffer),n.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=n.get(e);return void((!t||t.version<e.version)&&n.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const s=n.get(e);void 0===s?n.set(e,function(e,n){const r=e.array,s=e.usage,a=t.createBuffer();let o;if(t.bindBuffer(n,a),t.bufferData(n,r,s),e.onUploadCallback(),r instanceof Float32Array)o=5126;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!i)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=5131}else o=5123;else if(r instanceof Int16Array)o=5122;else if(r instanceof Uint32Array)o=5125;else if(r instanceof Int32Array)o=5124;else if(r instanceof Int8Array)o=5120;else if(r instanceof Uint8Array)o=5121;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=5121}return{buffer:a,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,r)):s.version<e.version&&(!function(e,n,r){const s=n.array,a=n.updateRange;t.bindBuffer(r,e),-1===a.count?t.bufferSubData(r,0,s):(i?t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s,a.offset,a.count):t.bufferSubData(r,a.offset*s.BYTES_PER_ELEMENT,s.subarray(a.offset,a.offset+a.count)),a.count=-1)}(s.buffer,e,r),s.version=e.version)}}}class yn extends Di{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const r=t/2,s=e/2,a=Math.floor(i),o=Math.floor(n),l=a+1,c=o+1,h=t/a,u=e/o,d=[],p=[],m=[],f=[];for(let t=0;t<c;t++){const e=t*u-s;for(let i=0;i<l;i++){const n=i*h-r;p.push(n,-e,0),m.push(0,0,1),f.push(i/a),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<a;e++){const i=e+l*t,n=e+l*(t+1),r=e+1+l*(t+1),s=e+1+l*t;d.push(i,n,s),d.push(n,r,s)}this.setIndex(d),this.setAttribute("position",new Ti(p,3)),this.setAttribute("normal",new Ti(m,3)),this.setAttribute("uv",new Ti(f,2))}static fromJSON(t){return new yn(t.width,t.height,t.widthSegments,t.heightSegments)}}const Mn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n\t\tfloat x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n\t\tfloat x2 = x * x;\n\t\tfloat x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n\t\treturn ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,\t0.0556434,\n\t\t-1.5371385,\t1.8760108, -0.2040259,\n\t\t-0.4985314,\t0.0415560,\t1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert\n#define Material_LightProbeLOD( material )\t(0)",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},bn={common:{diffuse:{value:new jt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Rt},uv2Transform:{value:new Rt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Lt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new jt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new jt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Rt}},sprite:{diffuse:{value:new jt(16777215)},opacity:{value:1},center:{value:new Lt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Rt}}},Sn={basic:{uniforms:en([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.fog]),vertexShader:Mn.meshbasic_vert,fragmentShader:Mn.meshbasic_frag},lambert:{uniforms:en([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.fog,bn.lights,{emissive:{value:new jt(0)}}]),vertexShader:Mn.meshlambert_vert,fragmentShader:Mn.meshlambert_frag},phong:{uniforms:en([bn.common,bn.specularmap,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.fog,bn.lights,{emissive:{value:new jt(0)},specular:{value:new jt(1118481)},shininess:{value:30}}]),vertexShader:Mn.meshphong_vert,fragmentShader:Mn.meshphong_frag},standard:{uniforms:en([bn.common,bn.envmap,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.roughnessmap,bn.metalnessmap,bn.fog,bn.lights,{emissive:{value:new jt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Mn.meshphysical_vert,fragmentShader:Mn.meshphysical_frag},toon:{uniforms:en([bn.common,bn.aomap,bn.lightmap,bn.emissivemap,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.gradientmap,bn.fog,bn.lights,{emissive:{value:new jt(0)}}]),vertexShader:Mn.meshtoon_vert,fragmentShader:Mn.meshtoon_frag},matcap:{uniforms:en([bn.common,bn.bumpmap,bn.normalmap,bn.displacementmap,bn.fog,{matcap:{value:null}}]),vertexShader:Mn.meshmatcap_vert,fragmentShader:Mn.meshmatcap_frag},points:{uniforms:en([bn.points,bn.fog]),vertexShader:Mn.points_vert,fragmentShader:Mn.points_frag},dashed:{uniforms:en([bn.common,bn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Mn.linedashed_vert,fragmentShader:Mn.linedashed_frag},depth:{uniforms:en([bn.common,bn.displacementmap]),vertexShader:Mn.depth_vert,fragmentShader:Mn.depth_frag},normal:{uniforms:en([bn.common,bn.bumpmap,bn.normalmap,bn.displacementmap,{opacity:{value:1}}]),vertexShader:Mn.meshnormal_vert,fragmentShader:Mn.meshnormal_frag},sprite:{uniforms:en([bn.sprite,bn.fog]),vertexShader:Mn.sprite_vert,fragmentShader:Mn.sprite_frag},background:{uniforms:{uvTransform:{value:new Rt},t2D:{value:null}},vertexShader:Mn.background_vert,fragmentShader:Mn.background_frag},cube:{uniforms:en([bn.envmap,{opacity:{value:1}}]),vertexShader:Mn.cube_vert,fragmentShader:Mn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Mn.equirect_vert,fragmentShader:Mn.equirect_frag},distanceRGBA:{uniforms:en([bn.common,bn.displacementmap,{referencePosition:{value:new ne},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Mn.distanceRGBA_vert,fragmentShader:Mn.distanceRGBA_frag},shadow:{uniforms:en([bn.lights,bn.fog,{color:{value:new jt(0)},opacity:{value:1}}]),vertexShader:Mn.shadow_vert,fragmentShader:Mn.shadow_frag}};function wn(t,e,i,n,r,s){const a=new jt(0);let o,c,h=!0===r?0:1,u=null,d=0,p=null;function m(t,e){i.buffers.color.setClear(t.r,t.g,t.b,e,s)}return{getClearColor:function(){return a},setClearColor:function(t,e=1){a.set(t),h=e,m(a,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,m(a,h)},render:function(i,r){let s=!1,f=!0===r.isScene?r.background:null;f&&f.isTexture&&(f=e.get(f));const g=t.xr,v=g.getSession&&g.getSession();v&&"additive"===v.environmentBlendMode&&(f=null),null===f?m(a,h):f&&f.isColor&&(m(f,1),s=!0),(t.autoClear||s)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),f&&(f.isCubeTexture||f.mapping===l)?(void 0===c&&(c=new Ki(new Qi(1,1,1),new rn({name:"BackgroundCubeMaterial",uniforms:tn(Sn.cube.uniforms),vertexShader:Sn.cube.vertexShader,fragmentShader:Sn.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=f,c.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,u===f&&d===f.version&&p===t.toneMapping||(c.material.needsUpdate=!0,u=f,d=f.version,p=t.toneMapping),c.layers.enableAll(),i.unshift(c,c.geometry,c.material,0,0,null)):f&&f.isTexture&&(void 0===o&&(o=new Ki(new yn(2,2),new rn({name:"BackgroundMaterial",uniforms:tn(Sn.background.uniforms),vertexShader:Sn.background.vertexShader,fragmentShader:Sn.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),o.material.uniforms.uvTransform.value.copy(f.matrix),u===f&&d===f.version&&p===t.toneMapping||(o.material.needsUpdate=!0,u=f,d=f.version,p=t.toneMapping),o.layers.enableAll(),i.unshift(o,o.geometry,o.material,0,0,null))}}}function Tn(t,e,i,n){const r=t.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||null!==s,o={},l=p(null);let c=l,h=!1;function u(e){return n.isWebGL2?t.bindVertexArray(e):s.bindVertexArrayOES(e)}function d(e){return n.isWebGL2?t.deleteVertexArray(e):s.deleteVertexArrayOES(e)}function p(t){const e=[],i=[],n=[];for(let t=0;t<r;t++)e[t]=0,i[t]=0,n[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:i,attributeDivisors:n,object:t,attributes:{},index:null}}function m(){const t=c.newAttributes;for(let e=0,i=t.length;e<i;e++)t[e]=0}function f(t){g(t,0)}function g(i,r){const s=c.newAttributes,a=c.enabledAttributes,o=c.attributeDivisors;if(s[i]=1,0===a[i]&&(t.enableVertexAttribArray(i),a[i]=1),o[i]!==r){(n.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),o[i]=r}}function v(){const e=c.newAttributes,i=c.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==e[n]&&(t.disableVertexAttribArray(n),i[n]=0)}function x(e,i,r,s,a,o){!0!==n.isWebGL2||5124!==r&&5125!==r?t.vertexAttribPointer(e,i,r,s,a,o):t.vertexAttribIPointer(e,i,r,a,o)}function _(){y(),h=!0,c!==l&&(c=l,u(c.object))}function y(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,d,_,y){let M=!1;if(a){const e=function(e,i,r){const a=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[i.id];void 0===c&&(c={},l[i.id]=c);let h=c[a];void 0===h&&(h=p(n.isWebGL2?t.createVertexArray():s.createVertexArrayOES()),c[a]=h);return h}(_,d,l);c!==e&&(c=e,u(c.object)),M=function(t,e,i,n){const r=c.attributes,s=e.attributes;let a=0;const o=i.getAttributes();for(const e in o){if(o[e].location>=0){const i=r[e];let n=s[e];if(void 0===n&&("instanceMatrix"===e&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(n=t.instanceColor)),void 0===i)return!0;if(i.attribute!==n)return!0;if(n&&i.data!==n.data)return!0;a++}}return c.attributesNum!==a||c.index!==n}(r,_,d,y),M&&function(t,e,i,n){const r={},s=e.attributes;let a=0;const o=i.getAttributes();for(const e in o){if(o[e].location>=0){let i=s[e];void 0===i&&("instanceMatrix"===e&&t.instanceMatrix&&(i=t.instanceMatrix),"instanceColor"===e&&t.instanceColor&&(i=t.instanceColor));const n={};n.attribute=i,i&&i.data&&(n.data=i.data),r[e]=n,a++}}c.attributes=r,c.attributesNum=a,c.index=n}(r,_,d,y)}else{const t=!0===l.wireframe;c.geometry===_.id&&c.program===d.id&&c.wireframe===t||(c.geometry=_.id,c.program=d.id,c.wireframe=t,M=!0)}null!==y&&i.update(y,34963),(M||h)&&(h=!1,function(r,s,a,o){if(!1===n.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;m();const l=o.attributes,c=a.getAttributes(),h=s.defaultAttributeValues;for(const e in c){const n=c[e];if(n.location>=0){let s=l[e];if(void 0===s&&("instanceMatrix"===e&&r.instanceMatrix&&(s=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(s=r.instanceColor)),void 0!==s){const e=s.normalized,a=s.itemSize,l=i.get(s);if(void 0===l)continue;const c=l.buffer,h=l.type,u=l.bytesPerElement;if(s.isInterleavedBufferAttribute){const i=s.data,l=i.stride,d=s.offset;if(i.isInstancedInterleavedBuffer){for(let t=0;t<n.locationSize;t++)g(n.location+t,i.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let t=0;t<n.locationSize;t++)f(n.location+t);t.bindBuffer(34962,c);for(let t=0;t<n.locationSize;t++)x(n.location+t,a/n.locationSize,h,e,l*u,(d+a/n.locationSize*t)*u)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<n.locationSize;t++)g(n.location+t,s.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<n.locationSize;t++)f(n.location+t);t.bindBuffer(34962,c);for(let t=0;t<n.locationSize;t++)x(n.location+t,a/n.locationSize,h,e,a*u,a/n.locationSize*t*u)}}else if(void 0!==h){const i=h[e];if(void 0!==i)switch(i.length){case 2:t.vertexAttrib2fv(n.location,i);break;case 3:t.vertexAttrib3fv(n.location,i);break;case 4:t.vertexAttrib4fv(n.location,i);break;default:t.vertexAttrib1fv(n.location,i)}}}}v()}(r,l,d,_),null!==y&&t.bindBuffer(34963,i.get(y).buffer))},reset:_,resetDefaultState:y,dispose:function(){_();for(const t in o){const e=o[t];for(const t in e){const i=e[t];for(const t in i)d(i[t].object),delete i[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const t in e){const i=e[t];for(const t in i)d(i[t].object),delete i[t];delete e[t]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const i=o[e];if(void 0===i[t.id])continue;const n=i[t.id];for(const t in n)d(n[t].object),delete n[t];delete i[t.id]}},initAttributes:m,enableAttribute:f,disableUnusedAttributes:v}}function An(t,e,i,n){const r=n.isWebGL2;let s;this.setMode=function(t){s=t},this.render=function(e,n){t.drawArrays(s,e,n),i.update(n,s,1)},this.renderInstances=function(n,a,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](s,n,a,o),i.update(a,s,o)}}function En(t,e,i){let n;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let a=void 0!==i.precision?i.precision:"highp";const o=r(a);o!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o);const l=s||e.has("WEBGL_draw_buffers"),c=!0===i.logarithmicDepthBuffer,h=t.getParameter(34930),u=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),m=t.getParameter(34921),f=t.getParameter(36347),g=t.getParameter(36348),v=t.getParameter(36349),x=u>0,_=s||e.has("OES_texture_float");return{isWebGL2:s,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const i=e.get("EXT_texture_filter_anisotropic");n=t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:r,precision:a,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:_,floatVertexTextures:x&&_,maxSamples:s?t.getParameter(36183):0}}function Cn(t){const e=this;let i=null,n=0,r=!1,s=!1;const a=new mn,o=new Rt,l={value:null,needsUpdate:!1};function c(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(t,i,n,r){const s=null!==t?t.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const e=n+4*s,r=i.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,i=n;e!==s;++e,i+=4)a.copy(t[e]).applyMatrix4(r,o),a.normal.toArray(c,i),c[i+3]=a.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=s,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,s){const a=0!==t.length||e||0!==n||r;return r=e,i=h(t,s,0),n=t.length,a},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(e,a,o){const u=e.clippingPlanes,d=e.clipIntersection,p=e.clipShadows,m=t.get(e);if(!r||null===u||0===u.length||s&&!p)s?h(null):c();else{const t=s?0:n,e=4*t;let r=m.clippingState||null;l.value=r,r=h(u,a,e,o);for(let t=0;t!==e;++t)r[t]=i[t];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Ln(t){let e=new WeakMap;function i(t,e){return e===a?t.mapping=r:e===o&&(t.mapping=s),t}function n(t){const i=t.target;i.removeEventListener("dispose",n);const r=e.get(i);void 0!==r&&(e.delete(i),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const s=r.mapping;if(s===a||s===o){if(e.has(r)){return i(e.get(r).texture,r.mapping)}{const s=r.image;if(s&&s.height>0){const a=new hn(s.height/2);return a.fromEquirectangularTexture(t,r),e.set(r,a),r.addEventListener("dispose",n),i(a.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}Sn.physical={uniforms:en([Sn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Lt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new jt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Lt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new jt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new jt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Mn.meshphysical_vert,fragmentShader:Mn.meshphysical_frag};class Rn extends sn{constructor(t=-1,e=1,i=1,n=-1,r=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=r,this.far=s,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-t,s=i+t,a=n+e,o=n-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,s=r+t*this.view.width,a-=e*this.view.offsetY,o=a-e*this.view.height}this.projectionMatrix.makeOrthographic(r,s,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Pn=[.125,.215,.35,.446,.526,.582],In=20,Dn=new Rn,Nn=new jt;let On=null;const zn=(1+Math.sqrt(5))/2,Un=1/zn,Bn=[new ne(1,1,1),new ne(-1,1,1),new ne(1,1,-1),new ne(-1,1,-1),new ne(0,zn,Un),new ne(0,zn,-Un),new ne(Un,0,zn),new ne(-Un,0,zn),new ne(zn,Un,0),new ne(-zn,Un,0)];class Fn{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){On=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,i,n,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Hn(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Vn(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(On),t.scissorTest=!1,Gn(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===r||t.mapping===s?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),On=this._renderer.getRenderTarget();const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:f,minFilter:f,generateMipmaps:!1,type:b,format:w,encoding:at,depthBuffer:!1},n=kn(t,e,i);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=kn(t,e,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],i=[],n=[];let r=t;const s=t-4+1+Pn.length;for(let a=0;a<s;a++){const s=Math.pow(2,r);i.push(s);let o=1/s;a>t-4?o=Pn[a-t+4-1]:0===a&&(o=0),n.push(o);const l=1/(s-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,m=3,f=2,g=1,v=new Float32Array(m*p*d),x=new Float32Array(f*p*d),_=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,i=t>2?0:-1,n=[e,i,0,e+2/3,i,0,e+2/3,i+1,0,e,i,0,e+2/3,i+1,0,e,i+1,0];v.set(n,m*p*t),x.set(u,f*p*t);const r=[t,t,t,t,t,t];_.set(r,g*p*t)}const y=new Di;y.setAttribute("position",new bi(v,m)),y.setAttribute("uv",new bi(x,f)),y.setAttribute("faceIndex",new bi(_,g)),e.push(y),r>4&&r--}return{lodPlanes:e,sizeLods:i,sigmas:n}}(n)),this._blurMaterial=function(t,e,i){const n=new Float32Array(In),r=new ne(0,1,0);return new rn({name:"SphericalGaussianBlur",defines:{n:In,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Wn(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(n,t,e)}return n}_compileMaterial(t){const e=new Ki(this._lodPlanes[0],t);this._renderer.compile(e,Dn)}_sceneToCubeUV(t,e,i,n){const r=new an(90,1,e,i),s=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Nn),o.toneMapping=0,o.autoClear=!1;const h=new _i({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),u=new Ki(new Qi,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(Nn),d=!0);for(let e=0;e<6;e++){const i=e%3;0===i?(r.up.set(0,s[e],0),r.lookAt(a[e],0,0)):1===i?(r.up.set(0,0,s[e]),r.lookAt(0,a[e],0)):(r.up.set(0,s[e],0),r.lookAt(0,0,a[e]));const l=this._cubeSize;Gn(n,i*l,e>2?l:0,l,l),o.setRenderTarget(n),d&&o.render(u,r),o.render(t,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=p}_textureToCubeUV(t,e){const i=this._renderer,n=t.mapping===r||t.mapping===s;n?(null===this._cubemapMaterial&&(this._cubemapMaterial=Hn()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Vn());const a=n?this._cubemapMaterial:this._equirectMaterial,o=new Ki(this._lodPlanes[0],a);a.uniforms.envMap.value=t;const l=this._cubeSize;Gn(e,0,0,3*l,2*l),i.setRenderTarget(e),i.render(o,Dn)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){const i=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),n=Bn[(e-1)%Bn.length];this._blur(t,e-1,e,i,n)}e.autoClear=i}_blur(t,e,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(t,s,e,i,n,"latitudinal",r),this._halfBlur(s,t,i,i,n,"longitudinal",r)}_halfBlur(t,e,i,n,r,s,a){const o=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Ki(this._lodPlanes[n],l),h=l.uniforms,u=this._sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):In;m>In&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let t=0;t<In;++t){const e=t/p,i=Math.exp(-e*e/2);f.push(i),0===t?g+=i:t<m&&(g+=2*i)}for(let t=0;t<f.length;t++)f[t]=f[t]/g;h.envMap.value=t.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===s,a&&(h.poleAxis.value=a);const{_lodMax:v}=this;h.dTheta.value=d,h.mipInt.value=v-i;const x=this._sizeLods[n];Gn(e,3*x*(n>v-4?n-v+4:0),4*(this._cubeSize-x),3*x,2*x),o.setRenderTarget(e),o.render(c,Dn)}}function kn(t,e,i){const n=new Qt(t,e,i);return n.texture.mapping=l,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Gn(t,e,i,n,r){t.viewport.set(e,i,n,r),t.scissor.set(e,i,n,r)}function Vn(){return new rn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Wn(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Hn(){return new rn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Wn(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Wn(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function jn(t){let e=new WeakMap,i=null;function n(t){const i=t.target;i.removeEventListener("dispose",n);const r=e.get(i);void 0!==r&&(e.delete(i),r.dispose())}return{get:function(l){if(l&&l.isTexture){const c=l.mapping,h=c===a||c===o,u=c===r||c===s;if(h||u){if(l.isRenderTargetTexture&&!0===l.needsPMREMUpdate){l.needsPMREMUpdate=!1;let n=e.get(l);return null===i&&(i=new Fn(t)),n=h?i.fromEquirectangular(l,n):i.fromCubemap(l,n),e.set(l,n),n.texture}if(e.has(l))return e.get(l).texture;{const r=l.image;if(h&&r&&r.height>0||u&&r&&function(t){let e=0;const i=6;for(let n=0;n<i;n++)void 0!==t[n]&&e++;return e===i}(r)){null===i&&(i=new Fn(t));const r=h?i.fromEquirectangular(l):i.fromCubemap(l);return e.set(l,r),l.addEventListener("dispose",n),r.texture}return null}}}return l},dispose:function(){e=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function qn(t){const e={};function i(i){if(void 0!==e[i])return e[i];let n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=t.getExtension(i)}return e[i]=n,n}return{has:function(t){return null!==i(t)},init:function(t){t.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(t){const e=i(t);return null===e&&console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e}}}function Xn(t,e,i,n){const r={},s=new WeakMap;function a(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const t in o.attributes)e.remove(o.attributes[t]);o.removeEventListener("dispose",a),delete r[o.id];const l=s.get(o);l&&(e.remove(l),s.delete(o)),n.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(t){const i=[],n=t.index,r=t.attributes.position;let a=0;if(null!==n){const t=n.array;a=n.version;for(let e=0,n=t.length;e<n;e+=3){const n=t[e+0],r=t[e+1],s=t[e+2];i.push(n,r,r,s,s,n)}}else{const t=r.array;a=r.version;for(let e=0,n=t.length/3-1;e<n;e+=3){const t=e+0,n=e+1,r=e+2;i.push(t,n,n,r,r,t)}}const o=new(Pt(i)?wi:Si)(i,1);o.version=a;const l=s.get(t);l&&e.remove(l),s.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",a),r[e.id]=!0,i.memory.geometries++),e},update:function(t){const i=t.attributes;for(const t in i)e.update(i[t],34962);const n=t.morphAttributes;for(const t in n){const i=n[t];for(let t=0,n=i.length;t<n;t++)e.update(i[t],34962)}},getWireframeAttribute:function(t){const e=s.get(t);if(e){const i=t.index;null!==i&&e.version<i.version&&o(t)}else o(t);return s.get(t)}}}function Yn(t,e,i,n){const r=n.isWebGL2;let s,a,o;this.setMode=function(t){s=t},this.setIndex=function(t){a=t.type,o=t.bytesPerElement},this.render=function(e,n){t.drawElements(s,n,a,e*o),i.update(n,s,1)},this.renderInstances=function(n,l,c){if(0===c)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](s,l,a,n*o,c),i.update(l,s,c)}}function Zn(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,i,n){switch(e.calls++,i){case 4:e.triangles+=n*(t/3);break;case 1:e.lines+=n*(t/2);break;case 3:e.lines+=n*(t-1);break;case 2:e.lines+=n*t;break;case 0:e.points+=n*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Jn(t,e){return t[0]-e[0]}function Kn(t,e){return Math.abs(e[1])-Math.abs(t[1])}function $n(t,e,i){const n={},r=new Float32Array(8),s=new WeakMap,a=new $t,o=[];for(let t=0;t<8;t++)o[t]=[t,0];return{update:function(l,c,h,u){const d=l.morphTargetInfluences;if(!0===e.isWebGL2){const p=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,m=void 0!==p?p.length:0;let f=s.get(c);if(void 0===f||f.count!==m){void 0!==f&&f.texture.dispose();const x=void 0!==c.morphAttributes.position,_=void 0!==c.morphAttributes.normal,y=void 0!==c.morphAttributes.color,b=c.morphAttributes.position||[],S=c.morphAttributes.normal||[],w=c.morphAttributes.color||[];let T=0;!0===x&&(T=1),!0===_&&(T=2),!0===y&&(T=3);let A=c.attributes.position.count*T,E=1;A>e.maxTextureSize&&(E=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const C=new Float32Array(A*E*4*m),L=new te(C,A,E,m);L.type=M,L.needsUpdate=!0;const R=4*T;for(let I=0;I<m;I++){const D=b[I],N=S[I],O=w[I],z=A*E*4*I;for(let U=0;U<D.count;U++){const B=U*R;!0===x&&(a.fromBufferAttribute(D,U),C[z+B+0]=a.x,C[z+B+1]=a.y,C[z+B+2]=a.z,C[z+B+3]=0),!0===_&&(a.fromBufferAttribute(N,U),C[z+B+4]=a.x,C[z+B+5]=a.y,C[z+B+6]=a.z,C[z+B+7]=0),!0===y&&(a.fromBufferAttribute(O,U),C[z+B+8]=a.x,C[z+B+9]=a.y,C[z+B+10]=a.z,C[z+B+11]=4===O.itemSize?a.w:1)}}function P(){L.dispose(),s.delete(c),c.removeEventListener("dispose",P)}f={count:m,texture:L,size:new Lt(A,E)},s.set(c,f),c.addEventListener("dispose",P)}let g=0;for(let F=0;F<d.length;F++)g+=d[F];const v=c.morphTargetsRelative?1:1-g;u.getUniforms().setValue(t,"morphTargetBaseInfluence",v),u.getUniforms().setValue(t,"morphTargetInfluences",d),u.getUniforms().setValue(t,"morphTargetsTexture",f.texture,i),u.getUniforms().setValue(t,"morphTargetsTextureSize",f.size)}else{const k=void 0===d?0:d.length;let G=n[c.id];if(void 0===G||G.length!==k){G=[];for(let q=0;q<k;q++)G[q]=[q,0];n[c.id]=G}for(let X=0;X<k;X++){const Y=G[X];Y[0]=X,Y[1]=d[X]}G.sort(Kn);for(let Z=0;Z<8;Z++)Z<k&&G[Z][1]?(o[Z][0]=G[Z][0],o[Z][1]=G[Z][1]):(o[Z][0]=Number.MAX_SAFE_INTEGER,o[Z][1]=0);o.sort(Jn);const V=c.morphAttributes.position,H=c.morphAttributes.normal;let W=0;for(let J=0;J<8;J++){const K=o[J],$=K[0],Q=K[1];$!==Number.MAX_SAFE_INTEGER&&Q?(V&&c.getAttribute("morphTarget"+J)!==V[$]&&c.setAttribute("morphTarget"+J,V[$]),H&&c.getAttribute("morphNormal"+J)!==H[$]&&c.setAttribute("morphNormal"+J,H[$]),r[J]=Q,W+=Q):(V&&!0===c.hasAttribute("morphTarget"+J)&&c.deleteAttribute("morphTarget"+J),H&&!0===c.hasAttribute("morphNormal"+J)&&c.deleteAttribute("morphNormal"+J),r[J]=0)}const j=c.morphTargetsRelative?1:1-W;u.getUniforms().setValue(t,"morphTargetBaseInfluence",j),u.getUniforms().setValue(t,"morphTargetInfluences",r)}}}}function Qn(t,e,i,n){let r=new WeakMap;function s(t){const e=t.target;e.removeEventListener("dispose",s),i.remove(e.instanceMatrix),null!==e.instanceColor&&i.remove(e.instanceColor)}return{update:function(t){const a=n.render.frame,o=t.geometry,l=e.get(t,o);return r.get(l)!==a&&(e.update(l),r.set(l,a)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",s)&&t.addEventListener("dispose",s),i.update(t.instanceMatrix,34962),null!==t.instanceColor&&i.update(t.instanceColor,34962)),l},dispose:function(){r=new WeakMap}}}const tr=new Kt,er=new te,ir=new ee,nr=new cn,rr=[],sr=[],ar=new Float32Array(16),or=new Float32Array(9),lr=new Float32Array(4);function cr(t,e,i){const n=t[0];if(n<=0||n>0)return t;const r=e*i;let s=rr[r];if(void 0===s&&(s=new Float32Array(r),rr[r]=s),0!==e){n.toArray(s,0);for(let n=1,r=0;n!==e;++n)r+=i,t[n].toArray(s,r)}return s}function hr(t,e){if(t.length!==e.length)return!1;for(let i=0,n=t.length;i<n;i++)if(t[i]!==e[i])return!1;return!0}function ur(t,e){for(let i=0,n=e.length;i<n;i++)t[i]=e[i]}function dr(t,e){let i=sr[e];void 0===i&&(i=new Int32Array(e),sr[e]=i);for(let n=0;n!==e;++n)i[n]=t.allocateTextureUnit();return i}function pr(t,e){const i=this.cache;i[0]!==e&&(t.uniform1f(this.addr,e),i[0]=e)}function mr(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(hr(i,e))return;t.uniform2fv(this.addr,e),ur(i,e)}}function fr(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(void 0!==e.r)i[0]===e.r&&i[1]===e.g&&i[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(hr(i,e))return;t.uniform3fv(this.addr,e),ur(i,e)}}function gr(t,e){const i=this.cache;if(void 0!==e.x)i[0]===e.x&&i[1]===e.y&&i[2]===e.z&&i[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(hr(i,e))return;t.uniform4fv(this.addr,e),ur(i,e)}}function vr(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(hr(i,e))return;t.uniformMatrix2fv(this.addr,!1,e),ur(i,e)}else{if(hr(i,n))return;lr.set(n),t.uniformMatrix2fv(this.addr,!1,lr),ur(i,n)}}function xr(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(hr(i,e))return;t.uniformMatrix3fv(this.addr,!1,e),ur(i,e)}else{if(hr(i,n))return;or.set(n),t.uniformMatrix3fv(this.addr,!1,or),ur(i,n)}}function _r(t,e){const i=this.cache,n=e.elements;if(void 0===n){if(hr(i,e))return;t.uniformMatrix4fv(this.addr,!1,e),ur(i,e)}else{if(hr(i,n))return;ar.set(n),t.uniformMatrix4fv(this.addr,!1,ar),ur(i,n)}}function yr(t,e){const i=this.cache;i[0]!==e&&(t.uniform1i(this.addr,e),i[0]=e)}function Mr(t,e){const i=this.cache;hr(i,e)||(t.uniform2iv(this.addr,e),ur(i,e))}function br(t,e){const i=this.cache;hr(i,e)||(t.uniform3iv(this.addr,e),ur(i,e))}function Sr(t,e){const i=this.cache;hr(i,e)||(t.uniform4iv(this.addr,e),ur(i,e))}function wr(t,e){const i=this.cache;i[0]!==e&&(t.uniform1ui(this.addr,e),i[0]=e)}function Tr(t,e){const i=this.cache;hr(i,e)||(t.uniform2uiv(this.addr,e),ur(i,e))}function Ar(t,e){const i=this.cache;hr(i,e)||(t.uniform3uiv(this.addr,e),ur(i,e))}function Er(t,e){const i=this.cache;hr(i,e)||(t.uniform4uiv(this.addr,e),ur(i,e))}function Cr(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2D(e||tr,r)}function Lr(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(e||ir,r)}function Rr(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTextureCube(e||nr,r)}function Pr(t,e,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(t.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(e||er,r)}function Ir(t,e){t.uniform1fv(this.addr,e)}function Dr(t,e){const i=cr(e,this.size,2);t.uniform2fv(this.addr,i)}function Nr(t,e){const i=cr(e,this.size,3);t.uniform3fv(this.addr,i)}function Or(t,e){const i=cr(e,this.size,4);t.uniform4fv(this.addr,i)}function zr(t,e){const i=cr(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,i)}function Ur(t,e){const i=cr(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,i)}function Br(t,e){const i=cr(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,i)}function Fr(t,e){t.uniform1iv(this.addr,e)}function kr(t,e){t.uniform2iv(this.addr,e)}function Gr(t,e){t.uniform3iv(this.addr,e)}function Vr(t,e){t.uniform4iv(this.addr,e)}function Hr(t,e){t.uniform1uiv(this.addr,e)}function Wr(t,e){t.uniform2uiv(this.addr,e)}function jr(t,e){t.uniform3uiv(this.addr,e)}function qr(t,e){t.uniform4uiv(this.addr,e)}function Xr(t,e,i){const n=e.length,r=dr(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture2D(e[t]||tr,r[t])}function Yr(t,e,i){const n=e.length,r=dr(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture3D(e[t]||ir,r[t])}function Zr(t,e,i){const n=e.length,r=dr(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTextureCube(e[t]||nr,r[t])}function Jr(t,e,i){const n=e.length,r=dr(i,n);t.uniform1iv(this.addr,r);for(let t=0;t!==n;++t)i.setTexture2DArray(e[t]||er,r[t])}class Kr{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=function(t){switch(t){case 5126:return pr;case 35664:return mr;case 35665:return fr;case 35666:return gr;case 35674:return vr;case 35675:return xr;case 35676:return _r;case 5124:case 35670:return yr;case 35667:case 35671:return Mr;case 35668:case 35672:return br;case 35669:case 35673:return Sr;case 5125:return wr;case 36294:return Tr;case 36295:return Ar;case 36296:return Er;case 35678:case 36198:case 36298:case 36306:case 35682:return Cr;case 35679:case 36299:case 36307:return Lr;case 35680:case 36300:case 36308:case 36293:return Rr;case 36289:case 36303:case 36311:case 36292:return Pr}}(e.type)}}class $r{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Ir;case 35664:return Dr;case 35665:return Nr;case 35666:return Or;case 35674:return zr;case 35675:return Ur;case 35676:return Br;case 5124:case 35670:return Fr;case 35667:case 35671:return kr;case 35668:case 35672:return Gr;case 35669:case 35673:return Vr;case 5125:return Hr;case 36294:return Wr;case 36295:return jr;case 36296:return qr;case 35678:case 36198:case 36298:case 36306:case 35682:return Xr;case 35679:case 36299:case 36307:return Yr;case 35680:case 36300:case 36308:case 36293:return Zr;case 36289:case 36303:case 36311:case 36292:return Jr}}(e.type)}}class Qr{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const s=n[r];s.setValue(t,e[s.id],i)}}}const ts=/(\w+)(\])?(\[|\.)?/g;function es(t,e){t.seq.push(e),t.map[e.id]=e}function is(t,e,i){const n=t.name,r=n.length;for(ts.lastIndex=0;;){const s=ts.exec(n),a=ts.lastIndex;let o=s[1];const l="]"===s[2],c=s[3];if(l&&(o|=0),void 0===c||"["===c&&a+2===r){es(i,void 0===c?new Kr(o,t,e):new $r(o,t,e));break}{let t=i.map[o];void 0===t&&(t=new Qr(o),es(i,t)),i=t}}}class ns{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,35718);for(let n=0;n<i;++n){const i=t.getActiveUniform(e,n);is(i,t.getUniformLocation(e,i.name),this)}}setValue(t,e,i,n){const r=this.map[e];void 0!==r&&r.setValue(t,i,n)}setOptional(t,e,i){const n=e[i];void 0!==n&&this.setValue(t,i,n)}static upload(t,e,i,n){for(let r=0,s=e.length;r!==s;++r){const s=e[r],a=i[s.id];!1!==a.needsUpdate&&s.setValue(t,a.value,n)}}static seqWithValue(t,e){const i=[];for(let n=0,r=t.length;n!==r;++n){const r=t[n];r.id in e&&i.push(r)}return i}}function rs(t,e,i){const n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),n}let ss=0;function as(t,e,i){const n=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(n&&""===r)return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const n=parseInt(s[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const i=t.split("\n"),n=[],r=Math.max(e-6,0),s=Math.min(e+6,i.length);for(let t=r;t<s;t++){const r=t+1;n.push(`${r===e?">":" "} ${r}: ${i[t]}`)}return n.join("\n")}(t.getShaderSource(e),n)}return r}function os(t,e){const i=function(t){switch(t){case at:return["Linear","( value )"];case ot:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function ls(t,e){let i;switch(e){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function cs(t){return""!==t}function hs(t,e){const i=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function us(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ds=/^[ \t]*#include +<([\w\d./]+)>/gm;function ps(t){return t.replace(ds,ms)}function ms(t,e){const i=Mn[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return ps(i)}const fs=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gs(t){return t.replace(fs,vs)}function vs(t,e,i,n){let r="";for(let t=parseInt(e);t<parseInt(i);t++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return r}function xs(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function _s(t,e,i,n){const a=t.getContext(),o=i.defines;let c=i.vertexShader,h=i.fragmentShader;const u=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(i),d=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case r:case s:e="ENVMAP_TYPE_CUBE";break;case l:e="ENVMAP_TYPE_CUBE_UV"}return e}(i),p=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===s&&(e="ENVMAP_MODE_REFRACTION");return e}(i),m=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(i),f=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const i=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),112)),texelHeight:n,maxMip:i}}(i),g=i.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(cs).join("\n")}(i),v=function(t){const e=[];for(const i in t){const n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(o),x=a.createProgram();let _,y,M=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(_=[v].filter(cs).join("\n"),_.length>0&&(_+="\n"),y=[g,v].filter(cs).join("\n"),y.length>0&&(y+="\n")):(_=[xs(i),"#define SHADER_NAME "+i.shaderName,v,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(cs).join("\n"),y=[g,xs(i),"#define SHADER_NAME "+i.shaderName,v,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.envMap?"#define "+p:"",i.envMap?"#define "+m:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?Mn.tonemapping_pars_fragment:"",0!==i.toneMapping?ls("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",Mn.encodings_pars_fragment,os("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(cs).join("\n")),c=ps(c),c=hs(c,i),c=us(c,i),h=ps(h),h=hs(h,i),h=us(h,i),c=gs(c),h=gs(h),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(M="#version 300 es\n",_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+_,y=["#define varying in",i.glslVersion===dt?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===dt?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const b=M+y+h,S=rs(a,35633,M+_+c),w=rs(a,35632,b);if(a.attachShader(x,S),a.attachShader(x,w),void 0!==i.index0AttributeName?a.bindAttribLocation(x,0,i.index0AttributeName):!0===i.morphTargets&&a.bindAttribLocation(x,0,"position"),a.linkProgram(x),t.debug.checkShaderErrors){const t=a.getProgramInfoLog(x).trim(),e=a.getShaderInfoLog(S).trim(),i=a.getShaderInfoLog(w).trim();let n=!0,r=!0;if(!1===a.getProgramParameter(x,35714)){n=!1;const e=as(a,S,"vertex"),i=as(a,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(x,35715)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+i)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==e&&""!==i||(r=!1);r&&(this.diagnostics={runnable:n,programLog:t,vertexShader:{log:e,prefix:_},fragmentShader:{log:i,prefix:y}})}let T,A;return a.deleteShader(S),a.deleteShader(w),this.getUniforms=function(){return void 0===T&&(T=new ns(a,x)),T},this.getAttributes=function(){return void 0===A&&(A=function(t,e){const i={},n=t.getProgramParameter(e,35721);for(let r=0;r<n;r++){const n=t.getActiveAttrib(e,r),s=n.name;let a=1;35674===n.type&&(a=2),35675===n.type&&(a=3),35676===n.type&&(a=4),i[s]={type:n.type,location:t.getAttribLocation(e,s),locationSize:a}}return i}(a,x)),A},this.destroy=function(){n.releaseStatesOfProgram(this),a.deleteProgram(x),this.program=void 0},this.name=i.shaderName,this.id=ss++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=S,this.fragmentShader=w,this}let ys=0;class Ms{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,n=this._getShaderStage(e),r=this._getShaderStage(i),s=this._getShaderCacheForMaterial(t);return!1===s.has(n)&&(s.add(n),n.usedTimes++),!1===s.has(r)&&(s.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const t of e)t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let i=e.get(t);return void 0===i&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){const e=this.shaderCache;let i=e.get(t);return void 0===i&&(i=new bs(t),e.set(t,i)),i}}class bs{constructor(t){this.id=ys++,this.code=t,this.usedTimes=0}}function Ss(t,e,i,n,r,s,a){const o=new je,c=new Ms,h=[],u=r.isWebGL2,d=r.logarithmicDepthBuffer,p=r.vertexTextures;let m=r.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(s,o,h,g,v){const x=g.fog,_=v.geometry,y=s.isMeshStandardMaterial?g.environment:null,M=(s.isMeshStandardMaterial?i:e).get(s.envMap||y),b=M&&M.mapping===l?M.image.height:null,S=f[s.type];null!==s.precision&&(m=r.getMaxPrecision(s.precision),m!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",m,"instead."));const w=_.morphAttributes.position||_.morphAttributes.normal||_.morphAttributes.color,T=void 0!==w?w.length:0;let A,E,C,L,R=0;if(void 0!==_.morphAttributes.position&&(R=1),void 0!==_.morphAttributes.normal&&(R=2),void 0!==_.morphAttributes.color&&(R=3),S){const t=Sn[S];A=t.vertexShader,E=t.fragmentShader}else A=s.vertexShader,E=s.fragmentShader,c.update(s),C=c.getVertexShaderID(s),L=c.getFragmentShaderID(s);const P=t.getRenderTarget(),I=s.alphaTest>0,D=s.clearcoat>0,N=s.iridescence>0;return{isWebGL2:u,shaderID:S,shaderName:s.type,vertexShader:A,fragmentShader:E,defines:s.defines,customVertexShaderID:C,customFragmentShaderID:L,isRawShaderMaterial:!0===s.isRawShaderMaterial,glslVersion:s.glslVersion,precision:m,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:p,outputEncoding:null===P?t.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:at,map:!!s.map,matcap:!!s.matcap,envMap:!!M,envMapMode:M&&M.mapping,envMapCubeUVHeight:b,lightMap:!!s.lightMap,aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:1===s.normalMapType,tangentSpaceNormalMap:0===s.normalMapType,decodeVideoTexture:!!s.map&&!0===s.map.isVideoTexture&&s.map.encoding===ot,clearcoat:D,clearcoatMap:D&&!!s.clearcoatMap,clearcoatRoughnessMap:D&&!!s.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!s.clearcoatNormalMap,iridescence:N,iridescenceMap:N&&!!s.iridescenceMap,iridescenceThicknessMap:N&&!!s.iridescenceThicknessMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,specularIntensityMap:!!s.specularIntensityMap,specularColorMap:!!s.specularColorMap,opaque:!1===s.transparent&&1===s.blending,alphaMap:!!s.alphaMap,alphaTest:I,gradientMap:!!s.gradientMap,sheen:s.sheen>0,sheenColorMap:!!s.sheenColorMap,sheenRoughnessMap:!!s.sheenRoughnessMap,transmission:s.transmission>0,transmissionMap:!!s.transmissionMap,thicknessMap:!!s.thicknessMap,combine:s.combine,vertexTangents:!!s.normalMap&&!!_.attributes.tangent,vertexColors:s.vertexColors,vertexAlphas:!0===s.vertexColors&&!!_.attributes.color&&4===_.attributes.color.itemSize,vertexUvs:!!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatMap||s.clearcoatRoughnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.displacementMap||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheenColorMap||s.sheenRoughnessMap),uvsVertexOnly:!(s.map||s.bumpMap||s.normalMap||s.specularMap||s.alphaMap||s.emissiveMap||s.roughnessMap||s.metalnessMap||s.clearcoatNormalMap||s.iridescenceMap||s.iridescenceThicknessMap||s.transmission>0||s.transmissionMap||s.thicknessMap||s.specularIntensityMap||s.specularColorMap||s.sheen>0||s.sheenColorMap||s.sheenRoughnessMap||!s.displacementMap),fog:!!x,useFog:!0===s.fog,fogExp2:x&&x.isFogExp2,flatShading:!!s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==_.morphAttributes.position,morphNormals:void 0!==_.morphAttributes.normal,morphColors:void 0!==_.morphAttributes.color,morphTargetsCount:T,morphTextureStride:R,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:s.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:s.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,doubleSided:2===s.side,flipSided:1===s.side,useDepthPacking:!!s.depthPacking,depthPacking:s.depthPacking||0,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.fragDepth,extensionDrawBuffers:s.extensions&&s.extensions.drawBuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:s.customProgramCacheKey()}},getProgramCacheKey:function(e){const i=[];if(e.shaderID?i.push(e.shaderID):(i.push(e.customVertexShaderID),i.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)i.push(t),i.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputEncoding),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.combine),t.push(e.vertexUvs),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(i,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0);e.supportsVertexTextures&&o.enable(1);e.instancing&&o.enable(2);e.instancingColor&&o.enable(3);e.map&&o.enable(4);e.matcap&&o.enable(5);e.envMap&&o.enable(6);e.lightMap&&o.enable(7);e.aoMap&&o.enable(8);e.emissiveMap&&o.enable(9);e.bumpMap&&o.enable(10);e.normalMap&&o.enable(11);e.objectSpaceNormalMap&&o.enable(12);e.tangentSpaceNormalMap&&o.enable(13);e.clearcoat&&o.enable(14);e.clearcoatMap&&o.enable(15);e.clearcoatRoughnessMap&&o.enable(16);e.clearcoatNormalMap&&o.enable(17);e.iridescence&&o.enable(18);e.iridescenceMap&&o.enable(19);e.iridescenceThicknessMap&&o.enable(20);e.displacementMap&&o.enable(21);e.specularMap&&o.enable(22);e.roughnessMap&&o.enable(23);e.metalnessMap&&o.enable(24);e.gradientMap&&o.enable(25);e.alphaMap&&o.enable(26);e.alphaTest&&o.enable(27);e.vertexColors&&o.enable(28);e.vertexAlphas&&o.enable(29);e.vertexUvs&&o.enable(30);e.vertexTangents&&o.enable(31);e.uvsVertexOnly&&o.enable(32);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.skinning&&o.enable(4);e.morphTargets&&o.enable(5);e.morphNormals&&o.enable(6);e.morphColors&&o.enable(7);e.premultipliedAlpha&&o.enable(8);e.shadowMapEnabled&&o.enable(9);e.physicallyCorrectLights&&o.enable(10);e.doubleSided&&o.enable(11);e.flipSided&&o.enable(12);e.useDepthPacking&&o.enable(13);e.dithering&&o.enable(14);e.specularIntensityMap&&o.enable(15);e.specularColorMap&&o.enable(16);e.transmission&&o.enable(17);e.transmissionMap&&o.enable(18);e.thicknessMap&&o.enable(19);e.sheen&&o.enable(20);e.sheenColorMap&&o.enable(21);e.sheenRoughnessMap&&o.enable(22);e.decodeVideoTexture&&o.enable(23);e.opaque&&o.enable(24);t.push(o.mask)}(i,e),i.push(t.outputEncoding)),i.push(e.customProgramCacheKey),i.join()},getUniforms:function(t){const e=f[t.type];let i;if(e){const t=Sn[e];i=nn.clone(t.uniforms)}else i=t.uniforms;return i},acquireProgram:function(e,i){let n;for(let t=0,e=h.length;t<e;t++){const e=h[t];if(e.cacheKey===i){n=e,++n.usedTimes;break}}return void 0===n&&(n=new _s(t,i,e,s),h.push(n)),n},releaseProgram:function(t){if(0==--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){c.remove(t)},programs:h,dispose:function(){c.dispose()}}}function ws(){let t=new WeakMap;return{get:function(e){let i=t.get(e);return void 0===i&&(i={},t.set(e,i)),i},remove:function(e){t.delete(e)},update:function(e,i,n){t.get(e)[i]=n},dispose:function(){t=new WeakMap}}}function Ts(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function As(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Es(){const t=[];let e=0;const i=[],n=[],r=[];function s(i,n,r,s,a,o){let l=t[e];return void 0===l?(l={id:i.id,object:i,geometry:n,material:r,groupOrder:s,renderOrder:i.renderOrder,z:a,group:o},t[e]=l):(l.id=i.id,l.object=i,l.geometry=n,l.material=r,l.groupOrder=s,l.renderOrder=i.renderOrder,l.z=a,l.group=o),e++,l}return{opaque:i,transmissive:n,transparent:r,init:function(){e=0,i.length=0,n.length=0,r.length=0},push:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?n.push(h):!0===a.transparent?r.push(h):i.push(h)},unshift:function(t,e,a,o,l,c){const h=s(t,e,a,o,l,c);a.transmission>0?n.unshift(h):!0===a.transparent?r.unshift(h):i.unshift(h)},finish:function(){for(let i=e,n=t.length;i<n;i++){const e=t[i];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){i.length>1&&i.sort(t||Ts),n.length>1&&n.sort(e||As),r.length>1&&r.sort(e||As)}}}function Cs(){let t=new WeakMap;return{get:function(e,i){const n=t.get(e);let r;return void 0===n?(r=new Es,t.set(e,[r])):i>=n.length?(r=new Es,n.push(r)):r=n[i],r},dispose:function(){t=new WeakMap}}}function Ls(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new ne,color:new jt};break;case"SpotLight":i={position:new ne,direction:new ne,color:new jt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new ne,color:new jt,distance:0,decay:0};break;case"HemisphereLight":i={direction:new ne,skyColor:new jt,groundColor:new jt};break;case"RectAreaLight":i={color:new jt,position:new ne,halfWidth:new ne,halfHeight:new ne}}return t[e.id]=i,i}}}let Rs=0;function Ps(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function Is(t,e){const i=new Ls,n=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Lt};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Lt,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let t=0;t<9;t++)r.probe.push(new ne);const s=new ne,a=new Ne,o=new Ne;return{setup:function(s,a){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let h=0,u=0,d=0,p=0,m=0,f=0,g=0,v=0,x=0,_=0;s.sort(Ps);const y=!0!==a?Math.PI:1;for(let t=0,e=s.length;t<e;t++){const e=s[t],a=e.color,M=e.intensity,b=e.distance,S=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=a.r*M*y,l+=a.g*M*y,c+=a.b*M*y;else if(e.isLightProbe)for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],M);else if(e.isDirectionalLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,r.directionalShadow[h]=i,r.directionalShadowMap[h]=S,r.directionalShadowMatrix[h]=e.shadow.matrix,f++}r.directional[h]=t,h++}else if(e.isSpotLight){const t=i.get(e);t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(a).multiplyScalar(M*y),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,r.spot[d]=t;const s=e.shadow;if(e.map&&(r.spotLightMap[x]=e.map,x++,s.updateMatrices(e),e.castShadow&&_++),r.spotLightMatrix[d]=s.matrix,e.castShadow){const t=n.get(e);t.shadowBias=s.bias,t.shadowNormalBias=s.normalBias,t.shadowRadius=s.radius,t.shadowMapSize=s.mapSize,r.spotShadow[d]=t,r.spotShadowMap[d]=S,v++}d++}else if(e.isRectAreaLight){const t=i.get(e);t.color.copy(a).multiplyScalar(M),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[p]=t,p++}else if(e.isPointLight){const t=i.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,i=n.get(e);i.shadowBias=t.bias,i.shadowNormalBias=t.normalBias,i.shadowRadius=t.radius,i.shadowMapSize=t.mapSize,i.shadowCameraNear=t.camera.near,i.shadowCameraFar=t.camera.far,r.pointShadow[u]=i,r.pointShadowMap[u]=S,r.pointShadowMatrix[u]=e.shadow.matrix,g++}r.point[u]=t,u++}else if(e.isHemisphereLight){const t=i.get(e);t.skyColor.copy(e.color).multiplyScalar(M*y),t.groundColor.copy(e.groundColor).multiplyScalar(M*y),r.hemi[m]=t,m++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=bn.LTC_FLOAT_1,r.rectAreaLTC2=bn.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=bn.LTC_HALF_1,r.rectAreaLTC2=bn.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const M=r.hash;M.directionalLength===h&&M.pointLength===u&&M.spotLength===d&&M.rectAreaLength===p&&M.hemiLength===m&&M.numDirectionalShadows===f&&M.numPointShadows===g&&M.numSpotShadows===v&&M.numSpotMaps===x||(r.directional.length=h,r.spot.length=d,r.rectArea.length=p,r.point.length=u,r.hemi.length=m,r.directionalShadow.length=f,r.directionalShadowMap.length=f,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=f,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=v+x-_,r.spotLightMap.length=x,r.numSpotLightShadowsWithMaps=_,M.directionalLength=h,M.pointLength=u,M.spotLength=d,M.rectAreaLength=p,M.hemiLength=m,M.numDirectionalShadows=f,M.numPointShadows=g,M.numSpotShadows=v,M.numSpotMaps=x,r.version=Rs++)},setupView:function(t,e){let i=0,n=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let e=0,d=t.length;e<d;e++){const d=t[e];if(d.isDirectionalLight){const t=r.directional[i];t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),i++}else if(d.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(d.matrixWorld),s.setFromMatrixPosition(d.target.matrixWorld),t.direction.sub(s),t.direction.transformDirection(u),l++}else if(d.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),o.identity(),a.copy(d.matrixWorld),a.premultiply(u),o.extractRotation(a),t.halfWidth.set(.5*d.width,0,0),t.halfHeight.set(0,.5*d.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(d.isPointLight){const t=r.point[n];t.position.setFromMatrixPosition(d.matrixWorld),t.position.applyMatrix4(u),n++}else if(d.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(d.matrixWorld),t.direction.transformDirection(u),h++}}},state:r}}function Ds(t,e){const i=new Is(t,e),n=[],r=[];return{init:function(){n.length=0,r.length=0},state:{lightsArray:n,shadowsArray:r,lights:i},setupLights:function(t){i.setup(n,t)},setupLightsView:function(t){i.setupView(n,t)},pushLight:function(t){n.push(t)},pushShadow:function(t){r.push(t)}}}function Ns(t,e){let i=new WeakMap;return{get:function(n,r=0){const s=i.get(n);let a;return void 0===s?(a=new Ds(t,e),i.set(n,[a])):r>=s.length?(a=new Ds(t,e),s.push(a)):a=s[r],a},dispose:function(){i=new WeakMap}}}class Os extends xi{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class zs extends xi{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new ne,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Us(t,e,i){let n=new vn;const r=new Lt,s=new Lt,a=new $t,o=new Os({depthPacking:3201}),l=new zs,c={},h=i.maxTextureSize,u={0:1,1:0,2:2},p=new rn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Lt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=p.clone();m.defines.HORIZONTAL_PASS=1;const f=new Di;f.setAttribute("position",new bi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new Ki(f,p),v=this;function x(i,n){const s=e.update(g);p.defines.VSM_SAMPLES!==i.blurSamples&&(p.defines.VSM_SAMPLES=i.blurSamples,m.defines.VSM_SAMPLES=i.blurSamples,p.needsUpdate=!0,m.needsUpdate=!0),null===i.mapPass&&(i.mapPass=new Qt(r.x,r.y)),p.uniforms.shadow_pass.value=i.map.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,t.setRenderTarget(i.mapPass),t.clear(),t.renderBufferDirect(n,null,s,p,g,null),m.uniforms.shadow_pass.value=i.mapPass.texture,m.uniforms.resolution.value=i.mapSize,m.uniforms.radius.value=i.radius,t.setRenderTarget(i.map),t.clear(),t.renderBufferDirect(n,null,s,m,g,null)}function _(e,i,n,r,s,a){let h=null;const d=!0===n.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(h=void 0!==d?d:!0===n.isPointLight?l:o,t.localClippingEnabled&&!0===i.clipShadows&&Array.isArray(i.clippingPlanes)&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){const t=h.uuid,e=i.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let r=n[e];void 0===r&&(r=h.clone(),n[e]=r),h=r}return h.visible=i.visible,h.wireframe=i.wireframe,h.side=3===a?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:u[i.side],h.alphaMap=i.alphaMap,h.alphaTest=i.alphaTest,h.clipShadows=i.clipShadows,h.clippingPlanes=i.clippingPlanes,h.clipIntersection=i.clipIntersection,h.displacementMap=i.displacementMap,h.displacementScale=i.displacementScale,h.displacementBias=i.displacementBias,h.wireframeLinewidth=i.wireframeLinewidth,h.linewidth=i.linewidth,!0===n.isPointLight&&!0===h.isMeshDistanceMaterial&&(h.referencePosition.setFromMatrixPosition(n.matrixWorld),h.nearDistance=r,h.farDistance=s),h}function y(i,r,s,a,o){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const n=e.update(i),r=i.material;if(Array.isArray(r)){const e=n.groups;for(let l=0,c=e.length;l<c;l++){const c=e[l],h=r[c.materialIndex];if(h&&h.visible){const e=_(i,h,a,s.near,s.far,o);t.renderBufferDirect(s,null,n,e,i,c)}}}else if(r.visible){const e=_(i,r,a,s.near,s.far,o);t.renderBufferDirect(s,null,n,e,i,null)}}const l=i.children;for(let t=0,e=l.length;t<e;t++)y(l[t],r,s,a,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,i,o){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),p=t.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let l=0,c=e.length;l<c;l++){const c=e[l],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const m=u.getFrameExtents();if(r.multiply(m),s.copy(u.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/m.x),r.x=s.x*m.x,u.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/m.y),r.y=s.y*m.y,u.mapSize.y=s.y)),null===u.map){const t=3!==this.type?{minFilter:d,magFilter:d}:{};u.map=new Qt(r.x,r.y,t),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}t.setRenderTarget(u.map),t.clear();const f=u.getViewportCount();for(let t=0;t<f;t++){const e=u.getViewport(t);a.set(s.x*e.x,s.y*e.y,s.x*e.z,s.y*e.w),p.viewport(a),u.updateMatrices(c,t),n=u.getFrustum(),y(i,o,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&x(u,o),u.needsUpdate=!1}v.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function Bs(t,e,n){const r=n.isWebGL2;const s=new function(){let e=!1;const i=new $t;let n=null;const r=new $t(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,s,a,o){!0===o&&(e*=a,n*=a,s*=a),i.set(e,n,s,a),!1===r.equals(i)&&(t.clearColor(e,n,s,a),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},a=new function(){let e=!1,i=null,n=null,r=null;return{setTest:function(t){t?G(2929):V(2929)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:default:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517)}else t.depthFunc(515);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,i=null,n=null,r=null}}},o=new function(){let e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,c=null;return{setTest:function(t){e||(t?G(2960):V(2960))},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,a){n===e&&r===i&&s===a||(t.stencilFunc(e,i,a),n=e,r=i,s=a)},setOp:function(e,i,n){a===e&&o===i&&l===n||(t.stencilOp(e,i,n),a=e,o=i,l=n)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,i=null,n=null,r=null,s=null,a=null,o=null,l=null,c=null}}},l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,p=[],m=null,f=!1,g=null,v=null,x=null,_=null,y=null,M=null,b=null,S=!1,w=null,T=null,A=null,E=null,C=null;const L=t.getParameter(35661);let R=!1,P=0;const I=t.getParameter(7938);-1!==I.indexOf("WebGL")?(P=parseFloat(/^WebGL (\d)/.exec(I)[1]),R=P>=1):-1!==I.indexOf("OpenGL ES")&&(P=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),R=P>=2);let D=null,N={};const O=t.getParameter(3088),z=t.getParameter(2978),U=(new $t).fromArray(O),B=(new $t).fromArray(z);function F(e,i,n){const r=new Uint8Array(4),s=t.createTexture();t.bindTexture(e,s),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<n;e++)t.texImage2D(i+e,0,6408,1,1,0,6408,5121,r);return s}const k={};function G(e){!0!==h[e]&&(t.enable(e),h[e]=!0)}function V(e){!1!==h[e]&&(t.disable(e),h[e]=!1)}k[3553]=F(3553,3553,1),k[34067]=F(34067,34069,6),s.setClear(0,0,0,1),a.setClear(1),o.setClear(0),G(2929),a.setFunc(3),q(!1),X(1),G(2884),j(0);const H={[i]:32774,101:32778,102:32779};if(r)H[103]=32775,H[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(H[103]=t.MIN_EXT,H[104]=t.MAX_EXT)}const W={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function j(e,n,r,s,a,o,l,c){if(0!==e){if(!1===f&&(G(3042),f=!0),5===e)a=a||n,o=o||r,l=l||s,n===v&&a===y||(t.blendEquationSeparate(H[n],H[a]),v=n,y=a),r===x&&s===_&&o===M&&l===b||(t.blendFuncSeparate(W[r],W[s],W[o],W[l]),x=r,_=s,M=o,b=l),g=e,S=null;else if(e!==g||c!==S){if(v===i&&y===i||(t.blendEquation(32774),v=i,y=i),c)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFuncSeparate(0,769,0,1);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}x=null,_=null,M=null,b=null,g=e,S=c}}else!0===f&&(V(3042),f=!1)}function q(e){w!==e&&(e?t.frontFace(2304):t.frontFace(2305),w=e)}function X(e){0!==e?(G(2884),e!==T&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):V(2884),T=e}function Y(e,i,n){e?(G(32823),E===i&&C===n||(t.polygonOffset(i,n),E=i,C=n)):V(32823)}function Z(e){void 0===e&&(e=33984+L-1),D!==e&&(t.activeTexture(e),D=e)}return{buffers:{color:s,depth:a,stencil:o},enable:G,disable:V,bindFramebuffer:function(e,i){return u[e]!==i&&(t.bindFramebuffer(e,i),u[e]=i,r&&(36009===e&&(u[36160]=i),36160===e&&(u[36009]=i)),!0)},drawBuffers:function(i,r){let s=p,a=!1;if(i)if(s=d.get(r),void 0===s&&(s=[],d.set(r,s)),i.isWebGLMultipleRenderTargets){const t=i.texture;if(s.length!==t.length||36064!==s[0]){for(let e=0,i=t.length;e<i;e++)s[e]=36064+e;s.length=t.length,a=!0}}else 36064!==s[0]&&(s[0]=36064,a=!0);else 1029!==s[0]&&(s[0]=1029,a=!0);a&&(n.isWebGL2?t.drawBuffers(s):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(s))},useProgram:function(e){return m!==e&&(t.useProgram(e),m=e,!0)},setBlending:j,setMaterial:function(t,e){2===t.side?V(2884):G(2884);let i=1===t.side;e&&(i=!i),q(i),1===t.blending&&!1===t.transparent?j(0):j(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),s.setMask(t.colorWrite);const n=t.stencilWrite;o.setTest(n),n&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),Y(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?G(32926):V(32926)},setFlipSided:q,setCullFace:X,setLineWidth:function(e){e!==A&&(R&&t.lineWidth(e),A=e)},setPolygonOffset:Y,setScissorTest:function(t){t?G(3089):V(3089)},activeTexture:Z,bindTexture:function(e,i){null===D&&Z();let n=N[D];void 0===n&&(n={type:void 0,texture:void 0},N[D]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||k[e]),n.type=e,n.texture=i)},unbindTexture:function(){const e=N[D];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(e,i){let n=c.get(i);void 0===n&&(n=new WeakMap,c.set(i,n));let r=n.get(e);void 0===r&&(r=t.getUniformBlockIndex(i,e.name),n.set(e,r))},uniformBlockBinding:function(e,i){const n=c.get(i).get(e);l.get(e)!==n&&(t.uniformBlockBinding(i,n,e.__bindingPointIndex),l.set(e,n))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===U.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),U.copy(e))},viewport:function(e){!1===B.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),B.copy(e))},reset:function(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),!0===r&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},D=null,N={},u={},d=new WeakMap,p=[],m=null,f=!1,g=null,v=null,x=null,_=null,y=null,M=null,b=null,S=!1,w=null,T=null,A=null,E=null,C=null,U.set(0,0,t.canvas.width,t.canvas.height),B.set(0,0,t.canvas.width,t.canvas.height),s.reset(),a.reset(),o.reset()}}}function Fs(t,e,i,n,r,s,a){const o=r.isWebGL2,l=r.maxTextures,E=r.maxCubemapSize,C=r.maxTextureSize,L=r.maxSamples,R=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,P=/OculusBrowser/g.test(navigator.userAgent),I=new WeakMap;let D;const N=new WeakMap;let O=!1;try{O="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function z(t,e){return O?new OffscreenCanvas(t,e):Nt("canvas")}function U(t,e,i,n){let r=1;if((t.width>n||t.height>n)&&(r=n/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const n=e?Tt:Math.floor,s=n(r*t.width),a=n(r*t.height);void 0===D&&(D=z(s,a));const o=i?z(s,a):D;o.width=s,o.height=a;return o.getContext("2d").drawImage(t,0,0,s,a),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+s+"x"+a+")."),o}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function B(t){return St(t.width)&&St(t.height)}function F(t,e){return t.generateMipmaps&&e&&t.minFilter!==d&&t.minFilter!==f}function k(e){t.generateMipmap(e)}function G(i,n,r,s,a=!1){if(!1===o)return n;if(null!==i){if(void 0!==t[i])return t[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let l=n;return 6403===n&&(5126===r&&(l=33326),5131===r&&(l=33325),5121===r&&(l=33321)),33319===n&&(5126===r&&(l=33328),5131===r&&(l=33327),5121===r&&(l=33323)),6408===n&&(5126===r&&(l=34836),5131===r&&(l=34842),5121===r&&(l=s===ot&&!1===a?35907:32856),32819===r&&(l=32854),32820===r&&(l=32855)),33325!==l&&33326!==l&&33327!==l&&33328!==l&&34842!==l&&34836!==l||e.get("EXT_color_buffer_float"),l}function V(t,e,i){return!0===F(t,i)||t.isFramebufferTexture&&t.minFilter!==d&&t.minFilter!==f?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function H(t){return t===d||t===p||t===m?9728:9729}function W(t){const e=t.target;e.removeEventListener("dispose",W),function(t){const e=n.get(t);if(void 0===e.__webglInit)return;const i=t.source,r=N.get(i);if(r){const n=r[e.__cacheKey];n.usedTimes--,0===n.usedTimes&&q(t),0===Object.keys(r).length&&N.delete(i)}n.remove(t)}(e),e.isVideoTexture&&I.delete(e)}function j(e){const i=e.target;i.removeEventListener("dispose",j),function(e){const i=e.texture,r=n.get(e),s=n.get(i);void 0!==s.__webglTexture&&(t.deleteTexture(s.__webglTexture),a.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[e]);else{if(t.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let e=0;e<r.__webglColorRenderbuffer.length;e++)r.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(r.__webglColorRenderbuffer[e]);r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let e=0,r=i.length;e<r;e++){const r=n.get(i[e]);r.__webglTexture&&(t.deleteTexture(r.__webglTexture),a.memory.textures--),n.remove(i[e])}n.remove(i),n.remove(e)}(i)}function q(e){const i=n.get(e);t.deleteTexture(i.__webglTexture);const r=e.source;delete N.get(r)[i.__cacheKey],a.memory.textures--}let X=0;function Y(t,e){const r=n.get(t);if(t.isVideoTexture&&function(t){const e=a.render.frame;I.get(t)!==e&&(I.set(t,e),t.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&r.__version!==t.version){const i=t.image;if(null===i)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==i.complete)return void Q(r,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+e),i.bindTexture(3553,r.__webglTexture)}const Z={[c]:10497,[h]:33071,[u]:33648},J={[d]:9728,[p]:9984,[m]:9986,[f]:9729,[g]:9985,[v]:9987};function K(i,s,a){if(a?(t.texParameteri(i,10242,Z[s.wrapS]),t.texParameteri(i,10243,Z[s.wrapT]),32879!==i&&35866!==i||t.texParameteri(i,32882,Z[s.wrapR]),t.texParameteri(i,10240,J[s.magFilter]),t.texParameteri(i,10241,J[s.minFilter])):(t.texParameteri(i,10242,33071),t.texParameteri(i,10243,33071),32879!==i&&35866!==i||t.texParameteri(i,32882,33071),s.wrapS===h&&s.wrapT===h||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(i,10240,H(s.magFilter)),t.texParameteri(i,10241,H(s.minFilter)),s.minFilter!==d&&s.minFilter!==f&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const a=e.get("EXT_texture_filter_anisotropic");if(s.type===M&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&s.type===b&&!1===e.has("OES_texture_half_float_linear"))return;(s.anisotropy>1||n.get(s).__currentAnisotropy)&&(t.texParameterf(i,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy)}}function $(e,i){let n=!1;void 0===e.__webglInit&&(e.__webglInit=!0,i.addEventListener("dispose",W));const r=i.source;let s=N.get(r);void 0===s&&(s={},N.set(r,s));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.encoding),e.join()}(i);if(o!==e.__cacheKey){void 0===s[o]&&(s[o]={texture:t.createTexture(),usedTimes:0},a.memory.textures++,n=!0),s[o].usedTimes++;const r=s[e.__cacheKey];void 0!==r&&(s[e.__cacheKey].usedTimes--,0===r.usedTimes&&q(i)),e.__cacheKey=o,e.__webglTexture=s[o].texture}return n}function Q(e,n,r){let a=3553;n.isDataArrayTexture&&(a=35866),n.isData3DTexture&&(a=32879);const l=$(e,n),c=n.source;if(i.activeTexture(33984+r),i.bindTexture(a,e.__webglTexture),c.version!==c.__currentVersion||!0===l){t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const e=function(t){return!o&&(t.wrapS!==h||t.wrapT!==h||t.minFilter!==d&&t.minFilter!==f)}(n)&&!1===B(n.image);let r=U(n.image,e,!1,C);r=st(n,r);const u=B(r)||o,p=s.convert(n.format,n.encoding);let m,g=s.convert(n.type),v=G(n.internalFormat,p,g,n.encoding,n.isVideoTexture);K(a,n,u);const x=n.mipmaps,b=o&&!0!==n.isVideoTexture,E=void 0===c.__currentVersion||!0===l,L=V(n,r,u);if(n.isDepthTexture)v=6402,o?v=n.type===M?36012:n.type===y?33190:n.type===S?35056:33189:n.type===M&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===T&&6402===v&&n.type!==_&&n.type!==y&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=y,g=s.convert(n.type)),n.format===A&&6402===v&&(v=34041,n.type!==S&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=S,g=s.convert(n.type))),E&&(b?i.texStorage2D(3553,1,v,r.width,r.height):i.texImage2D(3553,0,v,r.width,r.height,0,p,g,null));else if(n.isDataTexture)if(x.length>0&&u){b&&E&&i.texStorage2D(3553,L,v,x[0].width,x[0].height);for(let t=0,e=x.length;t<e;t++)m=x[t],b?i.texSubImage2D(3553,t,0,0,m.width,m.height,p,g,m.data):i.texImage2D(3553,t,v,m.width,m.height,0,p,g,m.data);n.generateMipmaps=!1}else b?(E&&i.texStorage2D(3553,L,v,r.width,r.height),i.texSubImage2D(3553,0,0,0,r.width,r.height,p,g,r.data)):i.texImage2D(3553,0,v,r.width,r.height,0,p,g,r.data);else if(n.isCompressedTexture){b&&E&&i.texStorage2D(3553,L,v,x[0].width,x[0].height);for(let t=0,e=x.length;t<e;t++)m=x[t],n.format!==w?null!==p?b?i.compressedTexSubImage2D(3553,t,0,0,m.width,m.height,p,m.data):i.compressedTexImage2D(3553,t,v,m.width,m.height,0,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):b?i.texSubImage2D(3553,t,0,0,m.width,m.height,p,g,m.data):i.texImage2D(3553,t,v,m.width,m.height,0,p,g,m.data)}else if(n.isDataArrayTexture)b?(E&&i.texStorage3D(35866,L,v,r.width,r.height,r.depth),i.texSubImage3D(35866,0,0,0,0,r.width,r.height,r.depth,p,g,r.data)):i.texImage3D(35866,0,v,r.width,r.height,r.depth,0,p,g,r.data);else if(n.isData3DTexture)b?(E&&i.texStorage3D(32879,L,v,r.width,r.height,r.depth),i.texSubImage3D(32879,0,0,0,0,r.width,r.height,r.depth,p,g,r.data)):i.texImage3D(32879,0,v,r.width,r.height,r.depth,0,p,g,r.data);else if(n.isFramebufferTexture){if(E)if(b)i.texStorage2D(3553,L,v,r.width,r.height);else{let t=r.width,e=r.height;for(let n=0;n<L;n++)i.texImage2D(3553,n,v,t,e,0,p,g,null),t>>=1,e>>=1}}else if(x.length>0&&u){b&&E&&i.texStorage2D(3553,L,v,x[0].width,x[0].height);for(let t=0,e=x.length;t<e;t++)m=x[t],b?i.texSubImage2D(3553,t,0,0,p,g,m):i.texImage2D(3553,t,v,p,g,m);n.generateMipmaps=!1}else b?(E&&i.texStorage2D(3553,L,v,r.width,r.height),i.texSubImage2D(3553,0,0,0,p,g,r)):i.texImage2D(3553,0,v,p,g,r);F(n,u)&&k(a),c.__currentVersion=c.version,n.onUpdate&&n.onUpdate(n)}e.__version=n.version}function tt(e,r,a,o,l){const c=s.convert(a.format,a.encoding),h=s.convert(a.type),u=G(a.internalFormat,c,h,a.encoding);n.get(r).__hasExternalTextures||(32879===l||35866===l?i.texImage3D(l,0,u,r.width,r.height,r.depth,0,c,h,null):i.texImage2D(l,0,u,r.width,r.height,0,c,h,null)),i.bindFramebuffer(36160,e),rt(r)?R.framebufferTexture2DMultisampleEXT(36160,o,l,n.get(a).__webglTexture,0,nt(r)):t.framebufferTexture2D(36160,o,l,n.get(a).__webglTexture,0),i.bindFramebuffer(36160,null)}function et(e,i,n){if(t.bindRenderbuffer(36161,e),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n||rt(i)){const e=i.depthTexture;e&&e.isDepthTexture&&(e.type===M?r=36012:e.type===y&&(r=33190));const n=nt(i);rt(i)?R.renderbufferStorageMultisampleEXT(36161,n,r,i.width,i.height):t.renderbufferStorageMultisample(36161,n,r,i.width,i.height)}else t.renderbufferStorage(36161,r,i.width,i.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(i.depthBuffer&&i.stencilBuffer){const r=nt(i);n&&!1===rt(i)?t.renderbufferStorageMultisample(36161,r,35056,i.width,i.height):rt(i)?R.renderbufferStorageMultisampleEXT(36161,r,35056,i.width,i.height):t.renderbufferStorage(36161,34041,i.width,i.height),t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=!0===i.isWebGLMultipleRenderTargets?i.texture:[i.texture];for(let r=0;r<e.length;r++){const a=e[r],o=s.convert(a.format,a.encoding),l=s.convert(a.type),c=G(a.internalFormat,o,l,a.encoding),h=nt(i);n&&!1===rt(i)?t.renderbufferStorageMultisample(36161,h,c,i.width,i.height):rt(i)?R.renderbufferStorageMultisampleEXT(36161,h,c,i.width,i.height):t.renderbufferStorage(36161,c,i.width,i.height)}}t.bindRenderbuffer(36161,null)}function it(e){const r=n.get(e),s=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(s)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),Y(r.depthTexture,0);const s=n.get(r.depthTexture).__webglTexture,a=nt(r);if(r.depthTexture.format===T)rt(r)?R.framebufferTexture2DMultisampleEXT(36160,36096,3553,s,0,a):t.framebufferTexture2D(36160,36096,3553,s,0);else{if(r.depthTexture.format!==A)throw new Error("Unknown depthTexture format");rt(r)?R.framebufferTexture2DMultisampleEXT(36160,33306,3553,s,0,a):t.framebufferTexture2D(36160,33306,3553,s,0)}}(r.__webglFramebuffer,e)}else if(s){r.__webglDepthbuffer=[];for(let n=0;n<6;n++)i.bindFramebuffer(36160,r.__webglFramebuffer[n]),r.__webglDepthbuffer[n]=t.createRenderbuffer(),et(r.__webglDepthbuffer[n],e,!1)}else i.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),et(r.__webglDepthbuffer,e,!1);i.bindFramebuffer(36160,null)}function nt(t){return Math.min(L,t.samples)}function rt(t){const i=n.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==i.__useRenderToTexture}function st(t,i){const n=t.encoding,r=t.format,s=t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===pt||n!==at&&(n===ot?!1===o?!0===e.has("EXT_sRGB")&&r===w?(t.format=pt,t.minFilter=f,t.generateMipmaps=!1):i=Xt.sRGBToLinear(i):r===w&&s===x||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",n)),i}this.allocateTextureUnit=function(){const t=X;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),X+=1,t},this.resetTextureUnits=function(){X=0},this.setTexture2D=Y,this.setTexture2DArray=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?Q(r,t,e):(i.activeTexture(33984+e),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(t,e){const r=n.get(t);t.version>0&&r.__version!==t.version?Q(r,t,e):(i.activeTexture(33984+e),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=function(e,r){const a=n.get(e);e.version>0&&a.__version!==e.version?function(e,n,r){if(6!==n.image.length)return;const a=$(e,n),l=n.source;if(i.activeTexture(33984+r),i.bindTexture(34067,e.__webglTexture),l.version!==l.__currentVersion||!0===a){t.pixelStorei(37440,n.flipY),t.pixelStorei(37441,n.premultiplyAlpha),t.pixelStorei(3317,n.unpackAlignment),t.pixelStorei(37443,0);const e=n.isCompressedTexture||n.image[0].isCompressedTexture,r=n.image[0]&&n.image[0].isDataTexture,c=[];for(let t=0;t<6;t++)c[t]=e||r?r?n.image[t].image:n.image[t]:U(n.image[t],!1,!0,E),c[t]=st(n,c[t]);const h=c[0],u=B(h)||o,d=s.convert(n.format,n.encoding),p=s.convert(n.type),m=G(n.internalFormat,d,p,n.encoding),f=o&&!0!==n.isVideoTexture,g=void 0===l.__currentVersion||!0===a;let v,x=V(n,h,u);if(K(34067,n,u),e){f&&g&&i.texStorage2D(34067,x,m,h.width,h.height);for(let t=0;t<6;t++){v=c[t].mipmaps;for(let e=0;e<v.length;e++){const r=v[e];n.format!==w?null!==d?f?i.compressedTexSubImage2D(34069+t,e,0,0,r.width,r.height,d,r.data):i.compressedTexImage2D(34069+t,e,m,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):f?i.texSubImage2D(34069+t,e,0,0,r.width,r.height,d,p,r.data):i.texImage2D(34069+t,e,m,r.width,r.height,0,d,p,r.data)}}}else{v=n.mipmaps,f&&g&&(v.length>0&&x++,i.texStorage2D(34067,x,m,c[0].width,c[0].height));for(let t=0;t<6;t++)if(r){f?i.texSubImage2D(34069+t,0,0,0,c[t].width,c[t].height,d,p,c[t].data):i.texImage2D(34069+t,0,m,c[t].width,c[t].height,0,d,p,c[t].data);for(let e=0;e<v.length;e++){const n=v[e].image[t].image;f?i.texSubImage2D(34069+t,e+1,0,0,n.width,n.height,d,p,n.data):i.texImage2D(34069+t,e+1,m,n.width,n.height,0,d,p,n.data)}}else{f?i.texSubImage2D(34069+t,0,0,0,d,p,c[t]):i.texImage2D(34069+t,0,m,d,p,c[t]);for(let e=0;e<v.length;e++){const n=v[e];f?i.texSubImage2D(34069+t,e+1,0,0,d,p,n.image[t]):i.texImage2D(34069+t,e+1,m,d,p,n.image[t])}}}F(n,u)&&k(34067),l.__currentVersion=l.version,n.onUpdate&&n.onUpdate(n)}e.__version=n.version}(a,e,r):(i.activeTexture(33984+r),i.bindTexture(34067,a.__webglTexture))},this.rebindTextures=function(t,e,i){const r=n.get(t);void 0!==e&&tt(r.__webglFramebuffer,t,t.texture,36064,3553),void 0!==i&&it(t)},this.setupRenderTarget=function(e){const l=e.texture,c=n.get(e),h=n.get(l);e.addEventListener("dispose",j),!0!==e.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=t.createTexture()),h.__version=l.version,a.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=B(e)||o;if(u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else{if(c.__webglFramebuffer=t.createFramebuffer(),d)if(r.drawBuffers){const i=e.texture;for(let e=0,r=i.length;e<r;e++){const r=n.get(i[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&e.samples>0&&!1===rt(e)){const n=d?l:[l];c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=[],i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer);for(let i=0;i<n.length;i++){const r=n[i];c.__webglColorRenderbuffer[i]=t.createRenderbuffer(),t.bindRenderbuffer(36161,c.__webglColorRenderbuffer[i]);const a=s.convert(r.format,r.encoding),o=s.convert(r.type),l=G(r.internalFormat,a,o,r.encoding),h=nt(e);t.renderbufferStorageMultisample(36161,h,l,e.width,e.height),t.framebufferRenderbuffer(36160,36064+i,36161,c.__webglColorRenderbuffer[i])}t.bindRenderbuffer(36161,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),et(c.__webglDepthRenderbuffer,e,!0)),i.bindFramebuffer(36160,null)}}if(u){i.bindTexture(34067,h.__webglTexture),K(34067,l,p);for(let t=0;t<6;t++)tt(c.__webglFramebuffer[t],e,l,36064,34069+t);F(l,p)&&k(34067),i.unbindTexture()}else if(d){const t=e.texture;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=n.get(s);i.bindTexture(3553,a.__webglTexture),K(3553,s,p),tt(c.__webglFramebuffer,e,s,36064+r,3553),F(s,p)&&k(3553)}i.unbindTexture()}else{let t=3553;(e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&(o?t=e.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(t,h.__webglTexture),K(t,l,p),tt(c.__webglFramebuffer,e,l,36064,t),F(l,p)&&k(t),i.unbindTexture()}e.depthBuffer&&it(e)},this.updateRenderTargetMipmap=function(t){const e=B(t)||o,r=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,a=r.length;s<a;s++){const a=r[s];if(F(a,e)){const e=t.isWebGLCubeRenderTarget?34067:3553,r=n.get(a).__webglTexture;i.bindTexture(e,r),k(e),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(o&&e.samples>0&&!1===rt(e)){const r=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],s=e.width,a=e.height;let o=16384;const l=[],c=e.stencilBuffer?33306:36096,h=n.get(e),u=!0===e.isWebGLMultipleRenderTargets;if(u)for(let e=0;e<r.length;e++)i.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,null),i.bindFramebuffer(36160,h.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,null,0);i.bindFramebuffer(36008,h.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,h.__webglFramebuffer);for(let i=0;i<r.length;i++){l.push(36064+i),e.depthBuffer&&l.push(c);const d=void 0!==h.__ignoreDepthValues&&h.__ignoreDepthValues;if(!1===d&&(e.depthBuffer&&(o|=256),e.stencilBuffer&&(o|=1024)),u&&t.framebufferRenderbuffer(36008,36064,36161,h.__webglColorRenderbuffer[i]),!0===d&&(t.invalidateFramebuffer(36008,[c]),t.invalidateFramebuffer(36009,[c])),u){const e=n.get(r[i]).__webglTexture;t.framebufferTexture2D(36009,36064,3553,e,0)}t.blitFramebuffer(0,0,s,a,0,0,s,a,o,9728),P&&t.invalidateFramebuffer(36008,l)}if(i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),u)for(let e=0;e<r.length;e++){i.bindFramebuffer(36160,h.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064+e,36161,h.__webglColorRenderbuffer[e]);const s=n.get(r[e]).__webglTexture;i.bindFramebuffer(36160,h.__webglFramebuffer),t.framebufferTexture2D(36009,36064+e,3553,s,0)}i.bindFramebuffer(36009,h.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=it,this.setupFrameBufferTexture=tt,this.useMultisampledRTT=rt}function ks(t,e,i){const n=i.isWebGL2;return{convert:function(i,r=null){let s;if(i===x)return 5121;if(1017===i)return 32819;if(1018===i)return 32820;if(1010===i)return 5120;if(1011===i)return 5122;if(i===_)return 5123;if(1013===i)return 5124;if(i===y)return 5125;if(i===M)return 5126;if(i===b)return n?5131:(s=e.get("OES_texture_half_float"),null!==s?s.HALF_FLOAT_OES:null);if(1021===i)return 6406;if(i===w)return 6408;if(1024===i)return 6409;if(1025===i)return 6410;if(i===T)return 6402;if(i===A)return 34041;if(1028===i)return 6403;if(1022===i)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(i===pt)return s=e.get("EXT_sRGB"),null!==s?s.SRGB_ALPHA_EXT:null;if(1029===i)return 36244;if(1030===i)return 33319;if(1031===i)return 33320;if(1033===i)return 36249;if(i===E||i===C||i===L||i===R)if(r===ot){if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===s)return null;if(i===E)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===C)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===L)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===R)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(s=e.get("WEBGL_compressed_texture_s3tc"),null===s)return null;if(i===E)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===C)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===L)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===R)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(i===P||i===I||i===D||i===N){if(s=e.get("WEBGL_compressed_texture_pvrtc"),null===s)return null;if(i===P)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===I)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===D)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===N)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===i)return s=e.get("WEBGL_compressed_texture_etc1"),null!==s?s.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===O||i===z){if(s=e.get("WEBGL_compressed_texture_etc"),null===s)return null;if(i===O)return r===ot?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===z)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}if(i===U||i===B||i===F||i===k||i===G||i===V||i===H||i===W||i===j||i===q||i===X||i===Y||i===Z||i===J){if(s=e.get("WEBGL_compressed_texture_astc"),null===s)return null;if(i===U)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===B)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===F)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===k)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===G)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===V)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===H)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===W)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===j)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===q)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===X)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Y)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Z)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===J)return r===ot?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}if(i===K){if(s=e.get("EXT_texture_compression_bptc"),null===s)return null;if(i===K)return r===ot?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}return i===S?n?34042:(s=e.get("WEBGL_depth_texture"),null!==s?s.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[i]?t[i]:null}}}class Gs extends an{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Vs extends si{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Hs={type:"move"};class Ws{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Vs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Vs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ne,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ne),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Vs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ne,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ne),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,i){let n=null,r=null,s=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){s=!0;for(const n of t.hand.values()){const t=e.getJointPose(n,i);if(void 0===l.joints[n.jointName]){const t=new Vs;t.matrixAutoUpdate=!1,t.visible=!1,l.joints[n.jointName]=t,l.add(t)}const r=l.joints[n.jointName];null!==t&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.jointRadius=t.radius),r.visible=null!==t}const n=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],a=n.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&a>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&a<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==a&&(n=e.getPose(t.targetRaySpace,i),null===n&&null!==r&&(n=r),null!==n&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(Hs)))}return null!==a&&(a.visible=null!==n),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==s),this}}class js extends Kt{constructor(t,e,i,n,r,s,a,o,l,c){if((c=void 0!==c?c:T)!==T&&c!==A)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&c===T&&(i=y),void 0===i&&c===A&&(i=S),super(null,n,r,s,a,o,c,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==a?a:d,this.minFilter=void 0!==o?o:d,this.flipY=!1,this.generateMipmaps=!1}}class qs extends mt{constructor(t,e){super();const i=this;let n=null,r=1,s=null,a="local-floor",o=null,l=null,c=null,h=null,u=null,d=null;const p=e.getContextAttributes();let m=null,f=null;const g=[],v=[],_=new an;_.layers.enable(1),_.viewport=new $t;const M=new an;M.layers.enable(2),M.viewport=new $t;const b=[_,M],E=new Gs;E.layers.enable(1),E.layers.enable(2);let C=null,L=null;function R(t){const e=v.indexOf(t.inputSource);if(-1===e)return;const i=g[e];void 0!==i&&i.dispatchEvent({type:t.type,data:t.inputSource})}function P(){n.removeEventListener("select",R),n.removeEventListener("selectstart",R),n.removeEventListener("selectend",R),n.removeEventListener("squeeze",R),n.removeEventListener("squeezestart",R),n.removeEventListener("squeezeend",R),n.removeEventListener("end",P),n.removeEventListener("inputsourceschange",I);for(let t=0;t<g.length;t++){const e=v[t];null!==e&&(v[t]=null,g[t].disconnect(e))}C=null,L=null,t.setRenderTarget(m),u=null,h=null,c=null,n=null,f=null,U.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function I(t){for(let e=0;e<t.removed.length;e++){const i=t.removed[e],n=v.indexOf(i);n>=0&&(v[n]=null,g[n].dispatchEvent({type:"disconnected",data:i}))}for(let e=0;e<t.added.length;e++){const i=t.added[e];let n=v.indexOf(i);if(-1===n){for(let t=0;t<g.length;t++){if(t>=v.length){v.push(i),n=t;break}if(null===v[t]){v[t]=i,n=t;break}}if(-1===n)break}const r=g[n];r&&r.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=g[t];return void 0===e&&(e=new Ws,g[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=g[t];return void 0===e&&(e=new Ws,g[t]=e),e.getGripSpace()},this.getHand=function(t){let e=g[t];return void 0===e&&(e=new Ws,g[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){r=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){a=t,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o||s},this.setReferenceSpace=function(t){o=t},this.getBaseLayer=function(){return null!==h?h:u},this.getBinding=function(){return c},this.getFrame=function(){return d},this.getSession=function(){return n},this.setSession=async function(l){if(n=l,null!==n){if(m=t.getRenderTarget(),n.addEventListener("select",R),n.addEventListener("selectstart",R),n.addEventListener("selectend",R),n.addEventListener("squeeze",R),n.addEventListener("squeezestart",R),n.addEventListener("squeezeend",R),n.addEventListener("end",P),n.addEventListener("inputsourceschange",I),!0!==p.xrCompatible&&await e.makeXRCompatible(),void 0===n.renderState.layers||!1===t.capabilities.isWebGL2){const i={antialias:void 0!==n.renderState.layers||p.antialias,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};u=new XRWebGLLayer(n,e,i),n.updateRenderState({baseLayer:u}),f=new Qt(u.framebufferWidth,u.framebufferHeight,{format:w,type:x,encoding:t.outputEncoding,stencilBuffer:p.stencil})}else{let i=null,s=null,a=null;p.depth&&(a=p.stencil?35056:33190,i=p.stencil?A:T,s=p.stencil?S:y);const o={colorFormat:32856,depthFormat:a,scaleFactor:r};c=new XRWebGLBinding(n,e),h=c.createProjectionLayer(o),n.updateRenderState({layers:[h]}),f=new Qt(h.textureWidth,h.textureHeight,{format:w,type:x,depthTexture:new js(h.textureWidth,h.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,i),stencilBuffer:p.stencil,encoding:t.outputEncoding,samples:p.antialias?4:0});t.properties.get(f).__ignoreDepthValues=h.ignoreDepthValues}f.isXRRenderTarget=!0,this.setFoveation(1),o=null,s=await n.requestReferenceSpace(a),U.setContext(n),U.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};const D=new ne,N=new ne;function O(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===n)return;E.near=M.near=_.near=t.near,E.far=M.far=_.far=t.far,C===E.near&&L===E.far||(n.updateRenderState({depthNear:E.near,depthFar:E.far}),C=E.near,L=E.far);const e=t.parent,i=E.cameras;O(E,e);for(let t=0;t<i.length;t++)O(i[t],e);E.matrixWorld.decompose(E.position,E.quaternion,E.scale),t.matrix.copy(E.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale);const r=t.children;for(let t=0,e=r.length;t<e;t++)r[t].updateMatrixWorld(!0);2===i.length?function(t,e,i){D.setFromMatrixPosition(e.matrixWorld),N.setFromMatrixPosition(i.matrixWorld);const n=D.distanceTo(N),r=e.projectionMatrix.elements,s=i.projectionMatrix.elements,a=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=a*h,p=a*u,m=n/(-h+u),f=m*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(f),t.translateZ(m),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=a+m,v=o+m,x=d-f,_=p+(n-f),y=l*o/v*g,M=c*o/v*g;t.projectionMatrix.makePerspective(x,_,y,M,g,v)}(E,_,M):E.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return E},this.getFoveation=function(){return null!==h?h.fixedFoveation:null!==u?u.fixedFoveation:void 0},this.setFoveation=function(t){null!==h&&(h.fixedFoveation=t),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=t)};let z=null;const U=new xn;U.setAnimationLoop((function(e,i){if(l=i.getViewerPose(o||s),d=i,null!==l){const e=l.views;null!==u&&(t.setRenderTargetFramebuffer(f,u.framebuffer),t.setRenderTarget(f));let i=!1;e.length!==E.cameras.length&&(E.cameras.length=0,i=!0);for(let n=0;n<e.length;n++){const r=e[n];let s=null;if(null!==u)s=u.getViewport(r);else{const e=c.getViewSubImage(h,r);s=e.viewport,0===n&&(t.setRenderTargetTextures(f,e.colorTexture,h.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(f))}let a=b[n];void 0===a&&(a=new an,a.layers.enable(n),a.viewport=new $t,b[n]=a),a.matrix.fromArray(r.transform.matrix),a.projectionMatrix.fromArray(r.projectionMatrix),a.viewport.set(s.x,s.y,s.width,s.height),0===n&&E.matrix.copy(a.matrix),!0===i&&E.cameras.push(a)}}for(let t=0;t<g.length;t++){const e=v[t],n=g[t];null!==e&&void 0!==n&&n.update(e,i,o||s)}z&&z(e,i),d=null})),this.setAnimationLoop=function(t){z=t},this.dispose=function(){}}}function Xs(t,e){function i(i,n){i.opacity.value=n.opacity,n.color&&i.diffuse.value.copy(n.color),n.emissive&&i.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(i.map.value=n.map),n.alphaMap&&(i.alphaMap.value=n.alphaMap),n.bumpMap&&(i.bumpMap.value=n.bumpMap,i.bumpScale.value=n.bumpScale,1===n.side&&(i.bumpScale.value*=-1)),n.displacementMap&&(i.displacementMap.value=n.displacementMap,i.displacementScale.value=n.displacementScale,i.displacementBias.value=n.displacementBias),n.emissiveMap&&(i.emissiveMap.value=n.emissiveMap),n.normalMap&&(i.normalMap.value=n.normalMap,i.normalScale.value.copy(n.normalScale),1===n.side&&i.normalScale.value.negate()),n.specularMap&&(i.specularMap.value=n.specularMap),n.alphaTest>0&&(i.alphaTest.value=n.alphaTest);const r=e.get(n).envMap;if(r&&(i.envMap.value=r,i.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,i.reflectivity.value=n.reflectivity,i.ior.value=n.ior,i.refractionRatio.value=n.refractionRatio),n.lightMap){i.lightMap.value=n.lightMap;const e=!0!==t.physicallyCorrectLights?Math.PI:1;i.lightMapIntensity.value=n.lightMapIntensity*e}let s,a;n.aoMap&&(i.aoMap.value=n.aoMap,i.aoMapIntensity.value=n.aoMapIntensity),n.map?s=n.map:n.specularMap?s=n.specularMap:n.displacementMap?s=n.displacementMap:n.normalMap?s=n.normalMap:n.bumpMap?s=n.bumpMap:n.roughnessMap?s=n.roughnessMap:n.metalnessMap?s=n.metalnessMap:n.alphaMap?s=n.alphaMap:n.emissiveMap?s=n.emissiveMap:n.clearcoatMap?s=n.clearcoatMap:n.clearcoatNormalMap?s=n.clearcoatNormalMap:n.clearcoatRoughnessMap?s=n.clearcoatRoughnessMap:n.iridescenceMap?s=n.iridescenceMap:n.iridescenceThicknessMap?s=n.iridescenceThicknessMap:n.specularIntensityMap?s=n.specularIntensityMap:n.specularColorMap?s=n.specularColorMap:n.transmissionMap?s=n.transmissionMap:n.thicknessMap?s=n.thicknessMap:n.sheenColorMap?s=n.sheenColorMap:n.sheenRoughnessMap&&(s=n.sheenRoughnessMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),i.uvTransform.value.copy(s.matrix)),n.aoMap?a=n.aoMap:n.lightMap&&(a=n.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),i.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,n,r,s,a){n.isMeshBasicMaterial||n.isMeshLambertMaterial?i(t,n):n.isMeshToonMaterial?(i(t,n),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,n)):n.isMeshPhongMaterial?(i(t,n),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,n)):n.isMeshStandardMaterial?(i(t,n),function(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap);i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap);e.get(i).envMap&&(t.envMapIntensity.value=i.envMapIntensity)}(t,n),n.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()));e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap);e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap)}(t,n,a)):n.isMeshMatcapMaterial?(i(t,n),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,n)):n.isMeshDepthMaterial?i(t,n):n.isMeshDistanceMaterial?(i(t,n),function(t,e){t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,n)):n.isMeshNormalMaterial?i(t,n):n.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,n),n.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,n)):n.isPointsMaterial?function(t,e,i,n){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*n,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let r;e.map?r=e.map:e.alphaMap&&(r=e.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix))}(t,n,r,s):n.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map);e.alphaMap&&(t.alphaMap.value=e.alphaMap);e.alphaTest>0&&(t.alphaTest.value=e.alphaTest);let i;e.map?i=e.map:e.alphaMap&&(i=e.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,n):n.isShadowMaterial?(t.color.value.copy(n.color),t.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function Ys(t,e,i,n){let r={},s={},a=[];const o=i.isWebGL2?t.getParameter(35375):0;function l(t,e,i){const n=t.value;if(void 0===i[e])return i[e]="number"==typeof n?n:n.clone(),!0;if("number"==typeof n){if(i[e]!==n)return i[e]=n,!0}else{const t=i[e];if(!1===t.equals(n))return t.copy(n),!0}return!1}function c(t){const e=t.value,i={boundary:0,storage:0};return"number"==typeof e?(i.boundary=4,i.storage=4):e.isVector2?(i.boundary=8,i.storage=8):e.isVector3||e.isColor?(i.boundary=16,i.storage=12):e.isVector4?(i.boundary=16,i.storage=16):e.isMatrix3?(i.boundary=48,i.storage=48):e.isMatrix4?(i.boundary=64,i.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),i}function h(e){const i=e.target;i.removeEventListener("dispose",h);const n=a.indexOf(i.__bindingPointIndex);a.splice(n,1),t.deleteBuffer(r[i.id]),delete r[i.id],delete s[i.id]}return{bind:function(t,e){const i=e.program;n.uniformBlockBinding(t,i)},update:function(i,u){let d=r[i.id];void 0===d&&(!function(t){const e=t.uniforms;let i=0;const n=16;let r=0;for(let t=0,s=e.length;t<s;t++){const s=e[t],a=c(s);if(s.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),s.__offset=i,t>0){r=i%n;const t=n-r;0!==r&&t-a.boundary<0&&(i+=n-r,s.__offset=i)}i+=a.storage}r=i%n,r>0&&(i+=n-r);t.__size=i,t.__cache={}}(i),d=function(e){const i=function(){for(let t=0;t<o;t++)if(-1===a.indexOf(t))return a.push(t),t;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();e.__bindingPointIndex=i;const n=t.createBuffer(),r=e.__size,s=e.usage;return t.bindBuffer(35345,n),t.bufferData(35345,r,s),t.bindBuffer(35345,null),t.bindBufferBase(35345,i,n),n}(i),r[i.id]=d,i.addEventListener("dispose",h));const p=u.program;n.updateUBOMapping(i,p);const m=e.render.frame;s[i.id]!==m&&(!function(e){const i=r[e.id],n=e.uniforms,s=e.__cache;t.bindBuffer(35345,i);for(let e=0,i=n.length;e<i;e++){const i=n[e];if(!0===l(i,e,s)){const e=i.value,n=i.__offset;"number"==typeof e?(i.__data[0]=e,t.bufferSubData(35345,n,i.__data)):(i.value.isMatrix3?(i.__data[0]=i.value.elements[0],i.__data[1]=i.value.elements[1],i.__data[2]=i.value.elements[2],i.__data[3]=i.value.elements[0],i.__data[4]=i.value.elements[3],i.__data[5]=i.value.elements[4],i.__data[6]=i.value.elements[5],i.__data[7]=i.value.elements[0],i.__data[8]=i.value.elements[6],i.__data[9]=i.value.elements[7],i.__data[10]=i.value.elements[8],i.__data[11]=i.value.elements[0]):e.toArray(i.__data),t.bufferSubData(35345,n,i.__data))}}t.bindBuffer(35345,null)}(i),s[i.id]=m)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);a=[],r={},s={}}}}function Zs(t={}){this.isWebGLRenderer=!0;const e=void 0!==t.canvas?t.canvas:function(){const t=Nt("canvas");return t.style.display="block",t}(),i=void 0!==t.context?t.context:null,n=void 0===t.depth||t.depth,r=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,o=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,l=void 0!==t.powerPreference?t.powerPreference:"default",c=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let h;h=null!==i?i.getContextAttributes().alpha:void 0!==t.alpha&&t.alpha;let u=null,d=null;const p=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=at,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const f=this;let g=!1,_=0,y=0,S=null,T=-1,A=null;const E=new $t,C=new $t;let L=null,R=e.width,P=e.height,I=1,D=null,N=null;const O=new $t(0,0,R,P),z=new $t(0,0,R,P);let U=!1;const B=new vn;let F=!1,k=!1,G=null;const V=new Ne,H=new Lt,W=new ne,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function q(){return null===S?I:1}let X,Y,Z,J,K,$,Q,tt,et,it,nt,rt,st,ot,lt,ct,ht,ut,dt,pt,mt,ft,gt,vt,xt=i;function _t(t,i){for(let n=0;n<t.length;n++){const r=t[n],s=e.getContext(r,i);if(null!==s)return s}return null}try{const t={alpha:!0,depth:n,stencil:r,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r144"),e.addEventListener("webglcontextlost",bt,!1),e.addEventListener("webglcontextrestored",St,!1),e.addEventListener("webglcontextcreationerror",wt,!1),null===xt){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),xt=_t(e,t),null===xt)throw _t(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===xt.getShaderPrecisionFormat&&(xt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function yt(){X=new qn(xt),Y=new En(xt,X,t),X.init(Y),ft=new ks(xt,X,Y),Z=new Bs(xt,X,Y),J=new Zn,K=new ws,$=new Fs(xt,X,Z,K,Y,ft,J),Q=new Ln(f),tt=new jn(f),et=new _n(xt,Y),gt=new Tn(xt,X,et,Y),it=new Xn(xt,et,J,gt),nt=new Qn(xt,it,et,J),dt=new $n(xt,Y,$),ct=new Cn(K),rt=new Ss(f,Q,tt,X,Y,gt,ct),st=new Xs(f,K),ot=new Cs,lt=new Ns(X,Y),ut=new wn(f,Q,Z,nt,h,a),ht=new Us(f,nt,Y),vt=new Ys(xt,J,Y,Z),pt=new An(xt,X,J,Y),mt=new Yn(xt,X,J,Y),J.programs=rt.programs,f.capabilities=Y,f.extensions=X,f.properties=K,f.renderLists=ot,f.shadowMap=ht,f.state=Z,f.info=J}yt();const Mt=new qs(f,xt);function bt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function St(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const t=J.autoReset,e=ht.enabled,i=ht.autoUpdate,n=ht.needsUpdate,r=ht.type;yt(),J.autoReset=t,ht.enabled=e,ht.autoUpdate=i,ht.needsUpdate=n,ht.type=r}function wt(t){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",t.statusMessage)}function At(t){const e=t.target;e.removeEventListener("dispose",At),function(t){(function(t){const e=K.get(t).programs;void 0!==e&&(e.forEach((function(t){rt.releaseProgram(t)})),t.isShaderMaterial&&rt.releaseShaderCache(t))})(t),K.remove(t)}(e)}this.xr=Mt,this.getContext=function(){return xt},this.getContextAttributes=function(){return xt.getContextAttributes()},this.forceContextLoss=function(){const t=X.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=X.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(t){void 0!==t&&(I=t,this.setSize(R,P,!1))},this.getSize=function(t){return t.set(R,P)},this.setSize=function(t,i,n){Mt.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=t,P=i,e.width=Math.floor(t*I),e.height=Math.floor(i*I),!1!==n&&(e.style.width=t+"px",e.style.height=i+"px"),this.setViewport(0,0,t,i))},this.getDrawingBufferSize=function(t){return t.set(R*I,P*I).floor()},this.setDrawingBufferSize=function(t,i,n){R=t,P=i,I=n,e.width=Math.floor(t*n),e.height=Math.floor(i*n),this.setViewport(0,0,t,i)},this.getCurrentViewport=function(t){return t.copy(E)},this.getViewport=function(t){return t.copy(O)},this.setViewport=function(t,e,i,n){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,i,n),Z.viewport(E.copy(O).multiplyScalar(I).floor())},this.getScissor=function(t){return t.copy(z)},this.setScissor=function(t,e,i,n){t.isVector4?z.set(t.x,t.y,t.z,t.w):z.set(t,e,i,n),Z.scissor(C.copy(z).multiplyScalar(I).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(t){Z.setScissorTest(U=t)},this.setOpaqueSort=function(t){D=t},this.setTransparentSort=function(t){N=t},this.getClearColor=function(t){return t.copy(ut.getClearColor())},this.setClearColor=function(){ut.setClearColor.apply(ut,arguments)},this.getClearAlpha=function(){return ut.getClearAlpha()},this.setClearAlpha=function(){ut.setClearAlpha.apply(ut,arguments)},this.clear=function(t=!0,e=!0,i=!0){let n=0;t&&(n|=16384),e&&(n|=256),i&&(n|=1024),xt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",bt,!1),e.removeEventListener("webglcontextrestored",St,!1),e.removeEventListener("webglcontextcreationerror",wt,!1),ot.dispose(),lt.dispose(),K.dispose(),Q.dispose(),tt.dispose(),nt.dispose(),gt.dispose(),vt.dispose(),rt.dispose(),Mt.dispose(),Mt.removeEventListener("sessionstart",Ct),Mt.removeEventListener("sessionend",Rt),G&&(G.dispose(),G=null),Pt.stop()},this.renderBufferDirect=function(t,e,i,n,r,s){null===e&&(e=j);const a=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,i,n,r){!0!==e.isScene&&(e=j);$.resetTextureUnits();const s=e.fog,a=n.isMeshStandardMaterial?e.environment:null,o=null===S?f.outputEncoding:!0===S.isXRRenderTarget?S.texture.encoding:at,l=(n.isMeshStandardMaterial?tt:Q).get(n.envMap||a),c=!0===n.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,h=!!n.normalMap&&!!i.attributes.tangent,u=!!i.morphAttributes.position,p=!!i.morphAttributes.normal,m=!!i.morphAttributes.color,g=n.toneMapped?f.toneMapping:0,v=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,x=void 0!==v?v.length:0,_=K.get(n),y=d.state.lights;if(!0===F&&(!0===k||t!==A)){const e=t===A&&n.id===T;ct.setState(n,t,e)}let M=!1;n.version===_.__version?_.needsLights&&_.lightsStateVersion!==y.state.version||_.outputEncoding!==o||r.isInstancedMesh&&!1===_.instancing?M=!0:r.isInstancedMesh||!0!==_.instancing?r.isSkinnedMesh&&!1===_.skinning?M=!0:r.isSkinnedMesh||!0!==_.skinning?_.envMap!==l||!0===n.fog&&_.fog!==s?M=!0:void 0===_.numClippingPlanes||_.numClippingPlanes===ct.numPlanes&&_.numIntersection===ct.numIntersection?(_.vertexAlphas!==c||_.vertexTangents!==h||_.morphTargets!==u||_.morphNormals!==p||_.morphColors!==m||_.toneMapping!==g||!0===Y.isWebGL2&&_.morphTargetsCount!==x)&&(M=!0):M=!0:M=!0:M=!0:(M=!0,_.__version=n.version);let b=_.currentProgram;!0===M&&(b=Ut(n,e,r));let w=!1,E=!1,C=!1;const L=b.getUniforms(),R=_.uniforms;Z.useProgram(b.program)&&(w=!0,E=!0,C=!0);n.id!==T&&(T=n.id,E=!0);if(w||A!==t){if(L.setValue(xt,"projectionMatrix",t.projectionMatrix),Y.logarithmicDepthBuffer&&L.setValue(xt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),A!==t&&(A=t,E=!0,C=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=L.map.cameraPosition;void 0!==e&&e.setValue(xt,W.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&L.setValue(xt,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||r.isSkinnedMesh)&&L.setValue(xt,"viewMatrix",t.matrixWorldInverse)}if(r.isSkinnedMesh){L.setOptional(xt,r,"bindMatrix"),L.setOptional(xt,r,"bindMatrixInverse");const t=r.skeleton;t&&(Y.floatVertexTextures?(null===t.boneTexture&&t.computeBoneTexture(),L.setValue(xt,"boneTexture",t.boneTexture,$),L.setValue(xt,"boneTextureSize",t.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const D=i.morphAttributes;(void 0!==D.position||void 0!==D.normal||void 0!==D.color&&!0===Y.isWebGL2)&&dt.update(r,i,n,b);(E||_.receiveShadow!==r.receiveShadow)&&(_.receiveShadow=r.receiveShadow,L.setValue(xt,"receiveShadow",r.receiveShadow));n.isMeshGouraudMaterial&&null!==n.envMap&&(R.envMap.value=l,R.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);E&&(L.setValue(xt,"toneMappingExposure",f.toneMappingExposure),_.needsLights&&(O=C,(N=R).ambientLightColor.needsUpdate=O,N.lightProbe.needsUpdate=O,N.directionalLights.needsUpdate=O,N.directionalLightShadows.needsUpdate=O,N.pointLights.needsUpdate=O,N.pointLightShadows.needsUpdate=O,N.spotLights.needsUpdate=O,N.spotLightShadows.needsUpdate=O,N.rectAreaLights.needsUpdate=O,N.hemisphereLights.needsUpdate=O),s&&!0===n.fog&&st.refreshFogUniforms(R,s),st.refreshMaterialUniforms(R,n,I,P,G),ns.upload(xt,_.uniformsList,R,$));var N,O;n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ns.upload(xt,_.uniformsList,R,$),n.uniformsNeedUpdate=!1);n.isSpriteMaterial&&L.setValue(xt,"center",r.center);if(L.setValue(xt,"modelViewMatrix",r.modelViewMatrix),L.setValue(xt,"normalMatrix",r.normalMatrix),L.setValue(xt,"modelMatrix",r.matrixWorld),n.isShaderMaterial||n.isRawShaderMaterial){const t=n.uniformsGroups;for(let e=0,i=t.length;e<i;e++)if(Y.isWebGL2){const i=t[e];vt.update(i,b),vt.bind(i,b)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return b}(t,e,i,n,r);Z.setMaterial(n,a);let l=i.index;const c=i.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===n.wireframe&&(l=it.getWireframeAttribute(i),u=2),gt.setup(r,n,o,i,l);let p=pt;null!==l&&(h=et.get(l),p=mt,p.setIndex(h));const m=null!==l?l.count:c.count,g=i.drawRange.start*u,v=i.drawRange.count*u,x=null!==s?s.start*u:0,_=null!==s?s.count*u:1/0,y=Math.max(g,x),M=Math.min(m,g+v,x+_)-1,b=Math.max(0,M-y+1);if(0!==b){if(r.isMesh)!0===n.wireframe?(Z.setLineWidth(n.wireframeLinewidth*q()),p.setMode(1)):p.setMode(4);else if(r.isLine){let t=n.linewidth;void 0===t&&(t=1),Z.setLineWidth(t*q()),r.isLineSegments?p.setMode(1):r.isLineLoop?p.setMode(2):p.setMode(3)}else r.isPoints?p.setMode(0):r.isSprite&&p.setMode(4);if(r.isInstancedMesh)p.renderInstances(y,b,r.count);else if(i.isInstancedBufferGeometry){const t=Math.min(i.instanceCount,i._maxInstanceCount);p.renderInstances(y,b,t)}else p.render(y,b)}},this.compile=function(t,e){function i(t,e,i){!0===t.transparent&&2===t.side?(t.side=1,t.needsUpdate=!0,Ut(t,e,i),t.side=0,t.needsUpdate=!0,Ut(t,e,i),t.side=2):Ut(t,e,i)}d=lt.get(t),d.init(),m.push(d),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(d.pushLight(t),t.castShadow&&d.pushShadow(t))})),d.setupLights(f.physicallyCorrectLights),t.traverse((function(e){const n=e.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){i(n[r],t,e)}else i(n,t,e)})),m.pop(),d=null};let Et=null;function Ct(){Pt.stop()}function Rt(){Pt.start()}const Pt=new xn;function It(t,e,i,n){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)i=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||B.intersectsSprite(t)){n&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=nt.update(t),r=t.material;r.visible&&u.push(t,e,r,i,W.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==J.render.frame&&(t.skeleton.update(),t.skeleton.frame=J.render.frame),!t.frustumCulled||B.intersectsObject(t))){n&&W.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);const e=nt.update(t),r=t.material;if(Array.isArray(r)){const n=e.groups;for(let s=0,a=n.length;s<a;s++){const a=n[s],o=r[a.materialIndex];o&&o.visible&&u.push(t,e,o,i,W.z,a)}}else r.visible&&u.push(t,e,r,i,W.z,null)}const r=t.children;for(let t=0,s=r.length;t<s;t++)It(r[t],e,i,n)}function Dt(t,e,i,n){const r=t.opaque,a=t.transmissive,o=t.transparent;d.setupLightsView(i),a.length>0&&function(t,e,i){const n=Y.isWebGL2;null===G&&(G=new Qt(1,1,{generateMipmaps:!0,type:X.has("EXT_color_buffer_half_float")?b:x,minFilter:v,samples:n&&!0===s?4:0}));f.getDrawingBufferSize(H),n?G.setSize(H.x,H.y):G.setSize(Tt(H.x),Tt(H.y));const r=f.getRenderTarget();f.setRenderTarget(G),f.clear();const a=f.toneMapping;f.toneMapping=0,Ot(t,e,i),f.toneMapping=a,$.updateMultisampleRenderTarget(G),$.updateRenderTargetMipmap(G),f.setRenderTarget(r)}(r,e,i),n&&Z.viewport(E.copy(n)),r.length>0&&Ot(r,e,i),a.length>0&&Ot(a,e,i),o.length>0&&Ot(o,e,i),Z.buffers.depth.setTest(!0),Z.buffers.depth.setMask(!0),Z.buffers.color.setMask(!0),Z.setPolygonOffset(!1)}function Ot(t,e,i){const n=!0===e.isScene?e.overrideMaterial:null;for(let r=0,s=t.length;r<s;r++){const s=t[r],a=s.object,o=s.geometry,l=null===n?s.material:n,c=s.group;a.layers.test(i.layers)&&zt(a,e,i,o,l,c)}}function zt(t,e,i,n,r,s){t.onBeforeRender(f,e,i,n,r,s),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(f,e,i,n,t,s),!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,f.renderBufferDirect(i,e,n,r,t,s),r.side=0,r.needsUpdate=!0,f.renderBufferDirect(i,e,n,r,t,s),r.side=2):f.renderBufferDirect(i,e,n,r,t,s),t.onAfterRender(f,e,i,n,r,s)}function Ut(t,e,i){!0!==e.isScene&&(e=j);const n=K.get(t),r=d.state.lights,s=d.state.shadowsArray,a=r.state.version,o=rt.getParameters(t,r.state,s,e,i),l=rt.getProgramCacheKey(o);let c=n.programs;n.environment=t.isMeshStandardMaterial?e.environment:null,n.fog=e.fog,n.envMap=(t.isMeshStandardMaterial?tt:Q).get(t.envMap||n.environment),void 0===c&&(t.addEventListener("dispose",At),c=new Map,n.programs=c);let h=c.get(l);if(void 0!==h){if(n.currentProgram===h&&n.lightsStateVersion===a)return Bt(t,o),h}else o.uniforms=rt.getUniforms(t),t.onBuild(i,o,f),t.onBeforeCompile(o,f),h=rt.acquireProgram(o,l),c.set(l,h),n.uniforms=o.uniforms;const u=n.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Bt(t,o),n.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),n.lightsStateVersion=a,n.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=h.getUniforms(),m=ns.seqWithValue(p.seq,u);return n.currentProgram=h,n.uniformsList=m,h}function Bt(t,e){const i=K.get(t);i.outputEncoding=e.outputEncoding,i.instancing=e.instancing,i.skinning=e.skinning,i.morphTargets=e.morphTargets,i.morphNormals=e.morphNormals,i.morphColors=e.morphColors,i.morphTargetsCount=e.morphTargetsCount,i.numClippingPlanes=e.numClippingPlanes,i.numIntersection=e.numClipIntersection,i.vertexAlphas=e.vertexAlphas,i.vertexTangents=e.vertexTangents,i.toneMapping=e.toneMapping}Pt.setAnimationLoop((function(t){Et&&Et(t)})),"undefined"!=typeof self&&Pt.setContext(self),this.setAnimationLoop=function(t){Et=t,Mt.setAnimationLoop(t),null===t?Pt.stop():Pt.start()},Mt.addEventListener("sessionstart",Ct),Mt.addEventListener("sessionend",Rt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===g)return;!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Mt.enabled&&!0===Mt.isPresenting&&(!0===Mt.cameraAutoUpdate&&Mt.updateCamera(e),e=Mt.getCamera()),!0===t.isScene&&t.onBeforeRender(f,t,e,S),d=lt.get(t,m.length),d.init(),m.push(d),V.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),B.setFromProjectionMatrix(V),k=this.localClippingEnabled,F=ct.init(this.clippingPlanes,k,e),u=ot.get(t,p.length),u.init(),p.push(u),It(t,e,0,f.sortObjects),u.finish(),!0===f.sortObjects&&u.sort(D,N),!0===F&&ct.beginShadows();const i=d.state.shadowsArray;if(ht.render(i,t,e),!0===F&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),ut.render(u,t),d.setupLights(f.physicallyCorrectLights),e.isArrayCamera){const i=e.cameras;for(let e=0,n=i.length;e<n;e++){const n=i[e];Dt(u,t,n,n.viewport)}}else Dt(u,t,e);null!==S&&($.updateMultisampleRenderTarget(S),$.updateRenderTargetMipmap(S)),!0===t.isScene&&t.onAfterRender(f,t,e),gt.resetDefaultState(),T=-1,A=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),u=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return S},this.setRenderTargetTextures=function(t,e,i){K.get(t.texture).__webglTexture=e,K.get(t.depthTexture).__webglTexture=i;const n=K.get(t);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===i,n.__autoAllocateDepthBuffer||!0===X.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const i=K.get(t);i.__webglFramebuffer=e,i.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,i=0){S=t,_=e,y=i;let n=!0;if(t){const e=K.get(t);void 0!==e.__useDefaultFramebuffer?(Z.bindFramebuffer(36160,null),n=!1):void 0===e.__webglFramebuffer?$.setupRenderTarget(t):e.__hasExternalTextures&&$.rebindTextures(t,K.get(t.texture).__webglTexture,K.get(t.depthTexture).__webglTexture)}let r=null,s=!1,a=!1;if(t){const i=t.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(a=!0);const n=K.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=n[e],s=!0):r=Y.isWebGL2&&t.samples>0&&!1===$.useMultisampledRTT(t)?K.get(t).__webglMultisampledFramebuffer:n,E.copy(t.viewport),C.copy(t.scissor),L=t.scissorTest}else E.copy(O).multiplyScalar(I).floor(),C.copy(z).multiplyScalar(I).floor(),L=U;if(Z.bindFramebuffer(36160,r)&&Y.drawBuffers&&n&&Z.drawBuffers(t,r),Z.viewport(E),Z.scissor(C),Z.setScissorTest(L),s){const n=K.get(t.texture);xt.framebufferTexture2D(36160,36064,34069+e,n.__webglTexture,i)}else if(a){const n=K.get(t.texture),r=e||0;xt.framebufferTextureLayer(36160,36064,n.__webglTexture,i||0,r)}T=-1},this.readRenderTargetPixels=function(t,e,i,n,r,s,a){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=K.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==a&&(o=o[a]),o){Z.bindFramebuffer(36160,o);try{const a=t.texture,o=a.format,l=a.type;if(o!==w&&ft.convert(o)!==xt.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const c=l===b&&(X.has("EXT_color_buffer_half_float")||Y.isWebGL2&&X.has("EXT_color_buffer_float"));if(!(l===x||ft.convert(l)===xt.getParameter(35738)||l===M&&(Y.isWebGL2||X.has("OES_texture_float")||X.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&xt.readPixels(e,i,n,r,ft.convert(o),ft.convert(l),s)}finally{const t=null!==S?K.get(S).__webglFramebuffer:null;Z.bindFramebuffer(36160,t)}}},this.copyFramebufferToTexture=function(t,e,i=0){const n=Math.pow(2,-i),r=Math.floor(e.image.width*n),s=Math.floor(e.image.height*n);$.setTexture2D(e,0),xt.copyTexSubImage2D(3553,i,0,0,t.x,t.y,r,s),Z.unbindTexture()},this.copyTextureToTexture=function(t,e,i,n=0){const r=e.image.width,s=e.image.height,a=ft.convert(i.format),o=ft.convert(i.type);$.setTexture2D(i,0),xt.pixelStorei(37440,i.flipY),xt.pixelStorei(37441,i.premultiplyAlpha),xt.pixelStorei(3317,i.unpackAlignment),e.isDataTexture?xt.texSubImage2D(3553,n,t.x,t.y,r,s,a,o,e.image.data):e.isCompressedTexture?xt.compressedTexSubImage2D(3553,n,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,a,e.mipmaps[0].data):xt.texSubImage2D(3553,n,t.x,t.y,a,o,e.image),0===n&&i.generateMipmaps&&xt.generateMipmap(3553),Z.unbindTexture()},this.copyTextureToTexture3D=function(t,e,i,n,r=0){if(f.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const s=t.max.x-t.min.x+1,a=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=ft.convert(n.format),c=ft.convert(n.type);let h;if(n.isData3DTexture)$.setTexture3D(n,0),h=32879;else{if(!n.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");$.setTexture2DArray(n,0),h=35866}xt.pixelStorei(37440,n.flipY),xt.pixelStorei(37441,n.premultiplyAlpha),xt.pixelStorei(3317,n.unpackAlignment);const u=xt.getParameter(3314),d=xt.getParameter(32878),p=xt.getParameter(3316),m=xt.getParameter(3315),g=xt.getParameter(32877),v=i.isCompressedTexture?i.mipmaps[0]:i.image;xt.pixelStorei(3314,v.width),xt.pixelStorei(32878,v.height),xt.pixelStorei(3316,t.min.x),xt.pixelStorei(3315,t.min.y),xt.pixelStorei(32877,t.min.z),i.isDataTexture||i.isData3DTexture?xt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,v.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),xt.compressedTexSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,v.data)):xt.texSubImage3D(h,r,e.x,e.y,e.z,s,a,o,l,c,v),xt.pixelStorei(3314,u),xt.pixelStorei(32878,d),xt.pixelStorei(3316,p),xt.pixelStorei(3315,m),xt.pixelStorei(32877,g),0===r&&n.generateMipmaps&&xt.generateMipmap(h),Z.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?$.setTextureCube(t,0):t.isData3DTexture?$.setTexture3D(t,0):t.isDataArrayTexture?$.setTexture2DArray(t,0):$.setTexture2D(t,0),Z.unbindTexture()},this.resetState=function(){_=0,y=0,S=null,Z.reset(),gt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Js extends Zs{}Js.prototype.isWebGL1Renderer=!0;class Ks{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new jt(t),this.density=e}clone(){return new Ks(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class $s{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new jt(t),this.near=e,this.far=i}clone(){return new $s(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Qs extends si{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(t){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=t}}class ta{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=ut,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=_t()}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_t()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=_t()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ea=new ne;class ia{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)ea.fromBufferAttribute(this,e),ea.applyMatrix4(t),this.setXYZ(e,ea.x,ea.y,ea.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)ea.fromBufferAttribute(this,e),ea.applyNormalMatrix(t),this.setXYZ(e,ea.x,ea.y,ea.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)ea.fromBufferAttribute(this,e),ea.transformDirection(t),this.setXYZ(e,ea.x,ea.y,ea.z);return this}setX(t,e){return this.normalized&&(e=Et(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Et(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Et(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Et(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=At(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=At(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=At(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=At(e,this.array)),e}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array),n=Et(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.normalized&&(e=Et(e,this.array),i=Et(i,this.array),n=Et(n,this.array),r=Et(r,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}clone(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return new bi(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new ia(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const i=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[i+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class na extends xi{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new jt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let ra;const sa=new ne,aa=new ne,oa=new ne,la=new Lt,ca=new Lt,ha=new Ne,ua=new ne,da=new ne,pa=new ne,ma=new Lt,fa=new Lt,ga=new Lt;class va extends si{constructor(t){if(super(),this.isSprite=!0,this.type="Sprite",void 0===ra){ra=new Di;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),e=new ta(t,5);ra.setIndex([0,1,2,0,2,3]),ra.setAttribute("position",new ia(e,3,0,!1)),ra.setAttribute("uv",new ia(e,2,3,!1))}this.geometry=ra,this.material=void 0!==t?t:new na,this.center=new Lt(.5,.5)}raycast(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),aa.setFromMatrixScale(this.matrixWorld),ha.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),oa.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&aa.multiplyScalar(-oa.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const s=this.center;xa(ua.set(-.5,-.5,0),oa,s,aa,n,r),xa(da.set(.5,-.5,0),oa,s,aa,n,r),xa(pa.set(.5,.5,0),oa,s,aa,n,r),ma.set(0,0),fa.set(1,0),ga.set(1,1);let a=t.ray.intersectTriangle(ua,da,pa,!1,sa);if(null===a&&(xa(da.set(-.5,.5,0),oa,s,aa,n,r),fa.set(0,1),a=t.ray.intersectTriangle(ua,pa,da,!1,sa),null===a))return;const o=t.ray.origin.distanceTo(sa);o<t.near||o>t.far||e.push({distance:o,point:sa.clone(),uv:gi.getUV(sa,ua,da,pa,ma,fa,ga,new Lt),face:null,object:this})}copy(t,e){return super.copy(t,e),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}}function xa(t,e,i,n,r,s){la.subVectors(t,i).addScalar(.5).multiply(n),void 0!==r?(ca.x=s*la.x-r*la.y,ca.y=r*la.x+s*la.y):ca.copy(la),t.copy(e),t.x+=ca.x,t.y+=ca.y,t.applyMatrix4(ha)}const _a=new ne,ya=new ne;class Ma extends si{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let t=0,i=e.length;t<i;t++){const i=e[t];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0){e=Math.abs(e);const i=this.levels;let n;for(n=0;n<i.length&&!(e<i[n].distance);n++);return i.splice(n,0,{distance:e,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object}return null}raycast(t,e){if(this.levels.length>0){_a.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(_a);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){_a.setFromMatrixPosition(t.matrixWorld),ya.setFromMatrixPosition(this.matrixWorld);const i=_a.distanceTo(ya)/t.zoom;let n,r;for(e[0].object.visible=!0,n=1,r=e.length;n<r&&i>=e[n].distance;n++)e[n-1].object.visible=!1,e[n].object.visible=!0;for(this._currentLevel=n-1;n<r;n++)e[n].object.visible=!1}}toJSON(t){const e=super.toJSON(t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const i=this.levels;for(let t=0,n=i.length;t<n;t++){const n=i[t];e.object.levels.push({object:n.object.uuid,distance:n.distance})}return e}}const ba=new ne,Sa=new $t,wa=new $t,Ta=new ne,Aa=new Ne;class Ea extends Ki{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ne,this.bindMatrixInverse=new Ne}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this}bind(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new $t,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.fromBufferAttribute(e,i);const n=1/t.manhattanLength();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(t,e){const i=this.skeleton,n=this.geometry;Sa.fromBufferAttribute(n.attributes.skinIndex,t),wa.fromBufferAttribute(n.attributes.skinWeight,t),ba.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const n=wa.getComponent(t);if(0!==n){const r=Sa.getComponent(t);Aa.multiplyMatrices(i.bones[r].matrixWorld,i.boneInverses[r]),e.addScaledVector(Ta.copy(ba).applyMatrix4(Aa),n)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Ca extends si{constructor(){super(),this.isBone=!0,this.type="Bone"}}class La extends Kt{constructor(t=null,e=1,i=1,n,r,s,a,o,l=1003,c=1003,h,u){super(null,s,a,o,l,c,n,r,h,u),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ra=new Ne,Pa=new Ne;class Ia{constructor(t=[],e=[]){this.uuid=_t(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Ne)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Ne;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}}update(){const t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=t.length;n<r;n++){const r=t[n]?t[n].matrixWorld:Pa;Ra.multiplyMatrices(r,e[n]),Ra.toArray(i,16*n)}null!==n&&(n.needsUpdate=!0)}clone(){return new Ia(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(4*this.bones.length);t=wt(t),t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const i=new La(e,t,t,w,M);return i.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=i,this.boneTextureSize=t,this}getBoneByName(t){for(let e=0,i=this.bones.length;e<i;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const n=t.bones[i];let r=e[n];void 0===r&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),r=new Ca),this.bones.push(r),this.boneInverses.push((new Ne).fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,i=this.boneInverses;for(let n=0,r=e.length;n<r;n++){const r=e[n];t.bones.push(r.uuid);const s=i[n];t.boneInverses.push(s.toArray())}return t}}class Da extends bi{constructor(t,e,i,n=1){super(t,e,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Na=new Ne,Oa=new Ne,za=[],Ua=new Ki;class Ba extends Ki{constructor(t,e,i){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Da(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),null!==t.instanceColor&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this}getColorAt(t,e){e.fromArray(this.instanceColor.array,3*t)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,16*t)}raycast(t,e){const i=this.matrixWorld,n=this.count;if(Ua.geometry=this.geometry,Ua.material=this.material,void 0!==Ua.material)for(let r=0;r<n;r++){this.getMatrixAt(r,Na),Oa.multiplyMatrices(i,Na),Ua.matrixWorld=Oa,Ua.raycast(t,za);for(let t=0,i=za.length;t<i;t++){const i=za[t];i.instanceId=r,i.object=this,e.push(i)}za.length=0}}setColorAt(t,e){null===this.instanceColor&&(this.instanceColor=new Da(new Float32Array(3*this.instanceMatrix.count),3)),e.toArray(this.instanceColor.array,3*t)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,16*t)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Fa extends xi{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new jt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const ka=new ne,Ga=new ne,Va=new Ne,Ha=new De,Wa=new Te;class ja extends si{constructor(t=new Di,e=new Fa){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[0];for(let t=1,n=e.count;t<n;t++)ka.fromBufferAttribute(e,t-1),Ga.fromBufferAttribute(e,t),i[t]=i[t-1],i[t]+=ka.distanceTo(Ga);t.setAttribute("lineDistance",new Ti(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Line.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Wa.copy(i.boundingSphere),Wa.applyMatrix4(n),Wa.radius+=r,!1===t.ray.intersectsSphere(Wa))return;Va.copy(n).invert(),Ha.copy(t.ray).applyMatrix4(Va);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=new ne,c=new ne,h=new ne,u=new ne,d=this.isLineSegments?2:1,p=i.index,m=i.attributes.position;if(null!==p){for(let i=Math.max(0,s.start),n=Math.min(p.count,s.start+s.count)-1;i<n;i+=d){const n=p.getX(i),r=p.getX(i+1);l.fromBufferAttribute(m,n),c.fromBufferAttribute(m,r);if(Ha.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const s=t.ray.origin.distanceTo(u);s<t.near||s>t.far||e.push({distance:s,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else{for(let i=Math.max(0,s.start),n=Math.min(m.count,s.start+s.count)-1;i<n;i+=d){l.fromBufferAttribute(m,i),c.fromBufferAttribute(m,i+1);if(Ha.distanceSqToSegment(l,c,u,h)>o)continue;u.applyMatrix4(this.matrixWorld);const n=t.ray.origin.distanceTo(u);n<t.near||n>t.far||e.push({distance:n,point:h.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}const qa=new ne,Xa=new ne;class Ya extends ja{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(null===t.index){const e=t.attributes.position,i=[];for(let t=0,n=e.count;t<n;t+=2)qa.fromBufferAttribute(e,t),Xa.fromBufferAttribute(e,t+1),i[t]=0===t?0:i[t-1],i[t+1]=i[t]+qa.distanceTo(Xa);t.setAttribute("lineDistance",new Ti(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Za extends ja{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Ja extends xi{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new jt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Ka=new Ne,$a=new De,Qa=new Te,to=new ne;class eo extends si{constructor(t=new Di,e=new Ja){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,r=t.params.Points.threshold,s=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),Qa.copy(i.boundingSphere),Qa.applyMatrix4(n),Qa.radius+=r,!1===t.ray.intersectsSphere(Qa))return;Ka.copy(n).invert(),$a.copy(t.ray).applyMatrix4(Ka);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a,l=i.index,c=i.attributes.position;if(null!==l){for(let i=Math.max(0,s.start),r=Math.min(l.count,s.start+s.count);i<r;i++){const r=l.getX(i);to.fromBufferAttribute(c,r),io(to,r,o,n,t,e,this)}}else{for(let i=Math.max(0,s.start),r=Math.min(c.count,s.start+s.count);i<r;i++)to.fromBufferAttribute(c,i),io(to,i,o,n,t,e,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const i=t[e[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=i.length;t<e;t++){const e=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}}function io(t,e,i,n,r,s,a){const o=$a.distanceSqToPoint(t);if(o<i){const i=new ne;$a.closestPointToPoint(t,i),i.applyMatrix4(n);const l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(o),point:i,index:e,face:null,object:a})}}class no extends Kt{constructor(t,e,i,n,r,s,a,o,l,c,h,u){super(null,s,a,o,l,c,n,r,h,u),this.isCompressedTexture=!0,this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class ro{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)i=this.getPoint(s/t),r+=i.distanceTo(n),e.push(r),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const r=i.length;let s;s=e||t*i[r-1];let a,o=0,l=r-1;for(;o<=l;)if(n=Math.floor(o+(l-o)/2),a=i[n]-s,a<0)o=n+1;else{if(!(a>0)){l=n;break}l=n-1}if(n=l,i[n]===s)return n/(r-1);const c=i[n];return(n+(s-c)/(i[n+1]-c))/(r-1)}getTangent(t,e){const i=1e-4;let n=t-i,r=t+i;n<0&&(n=0),r>1&&(r=1);const s=this.getPoint(n),a=this.getPoint(r),o=e||(s.isVector2?new Lt:new ne);return o.copy(a).sub(s).normalize(),o}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new ne,n=[],r=[],s=[],a=new ne,o=new Ne;for(let e=0;e<=t;e++){const i=e/t;n[e]=this.getTangentAt(i,new ne)}r[0]=new ne,s[0]=new ne;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),h=Math.abs(n[0].y),u=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),u<=l&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],a),s[0].crossVectors(n[0],r[0]);for(let e=1;e<=t;e++){if(r[e]=r[e-1].clone(),s[e]=s[e-1].clone(),a.crossVectors(n[e-1],n[e]),a.length()>Number.EPSILON){a.normalize();const t=Math.acos(yt(n[e-1].dot(n[e]),-1,1));r[e].applyMatrix4(o.makeRotationAxis(a,t))}s[e].crossVectors(n[e],r[e])}if(!0===e){let e=Math.acos(yt(r[0].dot(r[t]),-1,1));e/=t,n[0].dot(a.crossVectors(r[0],r[t]))>0&&(e=-e);for(let i=1;i<=t;i++)r[i].applyMatrix4(o.makeRotationAxis(n[i],e*i)),s[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:s}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class so extends ro{constructor(t=0,e=0,i=1,n=1,r=0,s=2*Math.PI,a=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=r,this.aEndAngle=s,this.aClockwise=a,this.aRotation=o}getPoint(t,e){const i=e||new Lt,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);const a=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),i=o-this.aX,n=l-this.aY;o=i*t-n*e+this.aX,l=i*e+n*t+this.aY}return i.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class ao extends so{constructor(t,e,i,n,r,s){super(t,e,i,i,n,r,s),this.isArcCurve=!0,this.type="ArcCurve"}}function oo(){let t=0,e=0,i=0,n=0;function r(r,s,a,o){t=r,e=a,i=-3*r+3*s-2*a-o,n=2*r-2*s+a+o}return{initCatmullRom:function(t,e,i,n,s){r(e,i,s*(i-t),s*(n-e))},initNonuniformCatmullRom:function(t,e,i,n,s,a,o){let l=(e-t)/s-(i-t)/(s+a)+(i-e)/a,c=(i-e)/a-(n-e)/(a+o)+(n-i)/o;l*=a,c*=a,r(e,i,l,c)},calc:function(r){const s=r*r;return t+e*r+i*s+n*(s*r)}}}const lo=new ne,co=new oo,ho=new oo,uo=new oo;class po extends ro{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new ne){const i=e,n=this.points,r=n.length,s=(r-(this.closed?0:1))*t;let a,o,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?a=n[(l-1)%r]:(lo.subVectors(n[0],n[1]).add(n[0]),a=lo);const h=n[l%r],u=n[(l+1)%r];if(this.closed||l+2<r?o=n[(l+2)%r]:(lo.subVectors(n[r-1],n[r-2]).add(n[r-1]),o=lo),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(a.distanceToSquared(h),t),i=Math.pow(h.distanceToSquared(u),t),n=Math.pow(u.distanceToSquared(o),t);i<1e-4&&(i=1),e<1e-4&&(e=i),n<1e-4&&(n=i),co.initNonuniformCatmullRom(a.x,h.x,u.x,o.x,e,i,n),ho.initNonuniformCatmullRom(a.y,h.y,u.y,o.y,e,i,n),uo.initNonuniformCatmullRom(a.z,h.z,u.z,o.z,e,i,n)}else"catmullrom"===this.curveType&&(co.initCatmullRom(a.x,h.x,u.x,o.x,this.tension),ho.initCatmullRom(a.y,h.y,u.y,o.y,this.tension),uo.initCatmullRom(a.z,h.z,u.z,o.z,this.tension));return i.set(co.calc(c),ho.calc(c),uo.calc(c)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new ne).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function mo(t,e,i,n,r){const s=.5*(n-e),a=.5*(r-i),o=t*t;return(2*i-2*n+s+a)*(t*o)+(-3*i+3*n-2*s-a)*o+s*t+i}function fo(t,e,i,n){return function(t,e){const i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function go(t,e,i,n,r){return function(t,e){const i=1-t;return i*i*i*e}(t,e)+function(t,e){const i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}class vo extends ro{constructor(t=new Lt,e=new Lt,i=new Lt,n=new Lt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new Lt){const i=e,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(go(t,n.x,r.x,s.x,a.x),go(t,n.y,r.y,s.y,a.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class xo extends ro{constructor(t=new ne,e=new ne,i=new ne,n=new ne){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new ne){const i=e,n=this.v0,r=this.v1,s=this.v2,a=this.v3;return i.set(go(t,n.x,r.x,s.x,a.x),go(t,n.y,r.y,s.y,a.y),go(t,n.z,r.z,s.z,a.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class _o extends ro{constructor(t=new Lt,e=new Lt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Lt){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e){const i=e||new Lt;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class yo extends ro{constructor(t=new ne,e=new ne){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new ne){const i=e;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Mo extends ro{constructor(t=new Lt,e=new Lt,i=new Lt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Lt){const i=e,n=this.v0,r=this.v1,s=this.v2;return i.set(fo(t,n.x,r.x,s.x),fo(t,n.y,r.y,s.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class bo extends ro{constructor(t=new ne,e=new ne,i=new ne){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new ne){const i=e,n=this.v0,r=this.v1,s=this.v2;return i.set(fo(t,n.x,r.x,s.x),fo(t,n.y,r.y,s.y),fo(t,n.z,r.z,s.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class So extends ro{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Lt){const i=e,n=this.points,r=(n.length-1)*t,s=Math.floor(r),a=r-s,o=n[0===s?s:s-1],l=n[s],c=n[s>n.length-2?n.length-1:s+1],h=n[s>n.length-3?n.length-1:s+2];return i.set(mo(a,o.x,l.x,c.x,h.x),mo(a,o.y,l.y,c.y,h.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const i=t.points[e];this.points.push((new Lt).fromArray(i))}return this}}var wo=Object.freeze({__proto__:null,ArcCurve:ao,CatmullRomCurve3:po,CubicBezierCurve:vo,CubicBezierCurve3:xo,EllipseCurve:so,LineCurve:_o,LineCurve3:yo,QuadraticBezierCurve:Mo,QuadraticBezierCurve3:bo,SplineCurve:So});class To extends ro{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new _o(e,t))}getPoint(t,e){const i=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=i){const t=n[r]-i,s=this.curves[r],a=s.getLength(),o=0===a?0:1-t/a;return s.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const s=r[n],a=s.isEllipseCurve?2*t:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?t*s.points.length:t,o=s.getPoints(a);for(let t=0;t<o.length;t++){const n=o[t];i&&i.equals(n)||(e.push(n),i=n)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const i=t.curves[e];this.curves.push((new wo[i.type]).fromJSON(i))}return this}}class Ao extends To{constructor(t){super(),this.type="Path",this.currentPoint=new Lt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new _o(this.currentPoint.clone(),new Lt(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const r=new Mo(this.currentPoint.clone(),new Lt(t,e),new Lt(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,r,s){const a=new vo(this.currentPoint.clone(),new Lt(t,e),new Lt(i,n),new Lt(r,s));return this.curves.push(a),this.currentPoint.set(r,s),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new So(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,r,s){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,i,n,r,s),this}absarc(t,e,i,n,r,s){return this.absellipse(t,e,i,i,n,r,s),this}ellipse(t,e,i,n,r,s,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,n,r,s,a,o),this}absellipse(t,e,i,n,r,s,a,o){const l=new so(t,e,i,n,r,s,a,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Eo extends Di{constructor(t=[new Lt(0,-.5),new Lt(.5,0),new Lt(0,.5)],e=12,i=0,n=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e),n=yt(n,0,2*Math.PI);const r=[],s=[],a=[],o=[],l=[],c=1/e,h=new ne,u=new Lt,d=new ne,p=new ne,m=new ne;let f=0,g=0;for(let e=0;e<=t.length-1;e++)switch(e){case 0:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,m.copy(d),d.normalize(),o.push(d.x,d.y,d.z);break;case t.length-1:o.push(m.x,m.y,m.z);break;default:f=t[e+1].x-t[e].x,g=t[e+1].y-t[e].y,d.x=1*g,d.y=-f,d.z=0*g,p.copy(d),d.x+=m.x,d.y+=m.y,d.z+=m.z,d.normalize(),o.push(d.x,d.y,d.z),m.copy(p)}for(let r=0;r<=e;r++){const d=i+r*c*n,p=Math.sin(d),m=Math.cos(d);for(let i=0;i<=t.length-1;i++){h.x=t[i].x*p,h.y=t[i].y,h.z=t[i].x*m,s.push(h.x,h.y,h.z),u.x=r/e,u.y=i/(t.length-1),a.push(u.x,u.y);const n=o[3*i+0]*p,c=o[3*i+1],d=o[3*i+0]*m;l.push(n,c,d)}}for(let i=0;i<e;i++)for(let e=0;e<t.length-1;e++){const n=e+i*t.length,s=n,a=n+t.length,o=n+t.length+1,l=n+1;r.push(s,a,l),r.push(o,l,a)}this.setIndex(r),this.setAttribute("position",new Ti(s,3)),this.setAttribute("uv",new Ti(a,2)),this.setAttribute("normal",new Ti(l,3))}static fromJSON(t){return new Eo(t.points,t.segments,t.phiStart,t.phiLength)}}class Co extends Eo{constructor(t=1,e=1,i=4,n=8){const r=new Ao;r.absarc(0,-e/2,t,1.5*Math.PI,0),r.absarc(0,e/2,t,0,.5*Math.PI),super(r.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:i,radialSegments:n}}static fromJSON(t){return new Co(t.radius,t.length,t.capSegments,t.radialSegments)}}class Lo extends Di{constructor(t=1,e=8,i=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},e=Math.max(3,e);const r=[],s=[],a=[],o=[],l=new ne,c=new Lt;s.push(0,0,0),a.push(0,0,1),o.push(.5,.5);for(let r=0,h=3;r<=e;r++,h+=3){const u=i+r/e*n;l.x=t*Math.cos(u),l.y=t*Math.sin(u),s.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(s[h]/t+1)/2,c.y=(s[h+1]/t+1)/2,o.push(c.x,c.y)}for(let t=1;t<=e;t++)r.push(t,t+1,0);this.setIndex(r),this.setAttribute("position",new Ti(s,3)),this.setAttribute("normal",new Ti(a,3)),this.setAttribute("uv",new Ti(o,2))}static fromJSON(t){return new Lo(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ro extends Di{constructor(t=1,e=1,i=1,n=8,r=1,s=!1,a=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:a,thetaLength:o};const l=this;n=Math.floor(n),r=Math.floor(r);const c=[],h=[],u=[],d=[];let p=0;const m=[],f=i/2;let g=0;function v(i){const r=p,s=new Lt,m=new ne;let v=0;const x=!0===i?t:e,_=!0===i?1:-1;for(let t=1;t<=n;t++)h.push(0,f*_,0),u.push(0,_,0),d.push(.5,.5),p++;const y=p;for(let t=0;t<=n;t++){const e=t/n*o+a,i=Math.cos(e),r=Math.sin(e);m.x=x*r,m.y=f*_,m.z=x*i,h.push(m.x,m.y,m.z),u.push(0,_,0),s.x=.5*i+.5,s.y=.5*r*_+.5,d.push(s.x,s.y),p++}for(let t=0;t<n;t++){const e=r+t,n=y+t;!0===i?c.push(n,n+1,e):c.push(n+1,n,e),v+=3}l.addGroup(g,v,!0===i?1:2),g+=v}!function(){const s=new ne,v=new ne;let x=0;const _=(e-t)/i;for(let l=0;l<=r;l++){const c=[],g=l/r,x=g*(e-t)+t;for(let t=0;t<=n;t++){const e=t/n,r=e*o+a,l=Math.sin(r),m=Math.cos(r);v.x=x*l,v.y=-g*i+f,v.z=x*m,h.push(v.x,v.y,v.z),s.set(l,_,m).normalize(),u.push(s.x,s.y,s.z),d.push(e,1-g),c.push(p++)}m.push(c)}for(let t=0;t<n;t++)for(let e=0;e<r;e++){const i=m[e][t],n=m[e+1][t],r=m[e+1][t+1],s=m[e][t+1];c.push(i,n,s),c.push(n,r,s),x+=6}l.addGroup(g,x,0),g+=x}(),!1===s&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new Ti(h,3)),this.setAttribute("normal",new Ti(u,3)),this.setAttribute("uv",new Ti(d,2))}static fromJSON(t){return new Ro(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Po extends Ro{constructor(t=1,e=1,i=8,n=1,r=!1,s=0,a=2*Math.PI){super(0,t,e,i,n,r,s,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:a}}static fromJSON(t){return new Po(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Io extends Di{constructor(t=[],e=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n};const r=[],s=[];function a(t,e,i,n){const r=n+1,s=[];for(let n=0;n<=r;n++){s[n]=[];const a=t.clone().lerp(i,n/r),o=e.clone().lerp(i,n/r),l=r-n;for(let t=0;t<=l;t++)s[n][t]=0===t&&n===r?a:a.clone().lerp(o,t/l)}for(let t=0;t<r;t++)for(let e=0;e<2*(r-t)-1;e++){const i=Math.floor(e/2);e%2==0?(o(s[t][i+1]),o(s[t+1][i]),o(s[t][i])):(o(s[t][i+1]),o(s[t+1][i+1]),o(s[t+1][i]))}}function o(t){r.push(t.x,t.y,t.z)}function l(e,i){const n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function c(t,e,i,n){n<0&&1===t.x&&(s[e]=t.x-1),0===i.x&&0===i.z&&(s[e]=n/2/Math.PI+.5)}function h(t){return Math.atan2(t.z,-t.x)}!function(t){const i=new ne,n=new ne,r=new ne;for(let s=0;s<e.length;s+=3)l(e[s+0],i),l(e[s+1],n),l(e[s+2],r),a(i,n,r,t)}(n),function(t){const e=new ne;for(let i=0;i<r.length;i+=3)e.x=r[i+0],e.y=r[i+1],e.z=r[i+2],e.normalize().multiplyScalar(t),r[i+0]=e.x,r[i+1]=e.y,r[i+2]=e.z}(i),function(){const t=new ne;for(let i=0;i<r.length;i+=3){t.x=r[i+0],t.y=r[i+1],t.z=r[i+2];const n=h(t)/2/Math.PI+.5,a=(e=t,Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5);s.push(n,1-a)}var e;(function(){const t=new ne,e=new ne,i=new ne,n=new ne,a=new Lt,o=new Lt,l=new Lt;for(let u=0,d=0;u<r.length;u+=9,d+=6){t.set(r[u+0],r[u+1],r[u+2]),e.set(r[u+3],r[u+4],r[u+5]),i.set(r[u+6],r[u+7],r[u+8]),a.set(s[d+0],s[d+1]),o.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),n.copy(t).add(e).add(i).divideScalar(3);const p=h(n);c(a,d+0,t,p),c(o,d+2,e,p),c(l,d+4,i,p)}})(),function(){for(let t=0;t<s.length;t+=6){const e=s[t+0],i=s[t+2],n=s[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);r>.9&&a<.1&&(e<.2&&(s[t+0]+=1),i<.2&&(s[t+2]+=1),n<.2&&(s[t+4]+=1))}}()}(),this.setAttribute("position",new Ti(r,3)),this.setAttribute("normal",new Ti(r.slice(),3)),this.setAttribute("uv",new Ti(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(t){return new Io(t.vertices,t.indices,t.radius,t.details)}}class Do extends Io{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Do(t.radius,t.detail)}}const No=new ne,Oo=new ne,zo=new ne,Uo=new gi;class Bo extends Di{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},null!==t){const i=4,n=Math.pow(10,i),r=Math.cos(vt*e),s=t.getIndex(),a=t.getAttribute("position"),o=s?s.count:a.count,l=[0,0,0],c=["a","b","c"],h=new Array(3),u={},d=[];for(let t=0;t<o;t+=3){s?(l[0]=s.getX(t),l[1]=s.getX(t+1),l[2]=s.getX(t+2)):(l[0]=t,l[1]=t+1,l[2]=t+2);const{a:e,b:i,c:o}=Uo;if(e.fromBufferAttribute(a,l[0]),i.fromBufferAttribute(a,l[1]),o.fromBufferAttribute(a,l[2]),Uo.getNormal(zo),h[0]=`${Math.round(e.x*n)},${Math.round(e.y*n)},${Math.round(e.z*n)}`,h[1]=`${Math.round(i.x*n)},${Math.round(i.y*n)},${Math.round(i.z*n)}`,h[2]=`${Math.round(o.x*n)},${Math.round(o.y*n)},${Math.round(o.z*n)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let t=0;t<3;t++){const e=(t+1)%3,i=h[t],n=h[e],s=Uo[c[t]],a=Uo[c[e]],o=`${i}_${n}`,p=`${n}_${i}`;p in u&&u[p]?(zo.dot(u[p].normal)<=r&&(d.push(s.x,s.y,s.z),d.push(a.x,a.y,a.z)),u[p]=null):o in u||(u[o]={index0:l[t],index1:l[e],normal:zo.clone()})}}for(const t in u)if(u[t]){const{index0:e,index1:i}=u[t];No.fromBufferAttribute(a,e),Oo.fromBufferAttribute(a,i),d.push(No.x,No.y,No.z),d.push(Oo.x,Oo.y,Oo.z)}this.setAttribute("position",new Ti(d,3))}}}class Fo extends Ao{constructor(t){super(t),this.uuid=_t(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const i=t.holes[e];this.holes.push((new Ao).fromJSON(i))}return this}}const ko=function(t,e,i=2){const n=e&&e.length,r=n?e[0]*i:t.length;let s=Go(t,0,r,i,!0);const a=[];if(!s||s.next===s.prev)return a;let o,l,c,h,u,d,p;if(n&&(s=function(t,e,i,n){const r=[];let s,a,o,l,c;for(s=0,a=e.length;s<a;s++)o=e[s]*n,l=s<a-1?e[s+1]*n:t.length,c=Go(t,o,l,n,!1),c===c.next&&(c.steiner=!0),r.push($o(c));for(r.sort(Yo),s=0;s<r.length;s++)Zo(r[s],i),i=Vo(i,i.next);return i}(t,e,s,i)),t.length>80*i){o=c=t[0],l=h=t[1];for(let e=i;e<r;e+=i)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?1/p:0}return Ho(s,a,i,o,l,p),a};function Go(t,e,i,n,r){let s,a;if(r===function(t,e,i,n){let r=0;for(let s=e,a=i-n;s<i;s+=n)r+=(t[a]-t[s])*(t[s+1]+t[a+1]),a=s;return r}(t,e,i,n)>0)for(s=e;s<i;s+=n)a=ll(s,t[s],t[s+1],a);else for(s=i-n;s>=e;s-=n)a=ll(s,t[s],t[s+1],a);return a&&il(a,a.next)&&(cl(a),a=a.next),a}function Vo(t,e){if(!t)return t;e||(e=t);let i,n=t;do{if(i=!1,n.steiner||!il(n,n.next)&&0!==el(n.prev,n,n.next))n=n.next;else{if(cl(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function Ho(t,e,i,n,r,s,a){if(!t)return;!a&&s&&function(t,e,i,n){let r=t;do{null===r.z&&(r.z=Ko(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,i,n,r,s,a,o,l,c=1;do{for(i=t,t=null,s=null,a=0;i;){for(a++,n=i,o=0,e=0;e<c&&(o++,n=n.nextZ,n);e++);for(l=c;o>0||l>0&&n;)0!==o&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,o--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;i=n}s.nextZ=null,c*=2}while(a>1)}(r)}(t,n,r,s);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,s?jo(t,n,r,s):Wo(t))e.push(o.i/i),e.push(t.i/i),e.push(l.i/i),cl(t),t=l.next,c=l.next;else if((t=l)===c){a?1===a?Ho(t=qo(Vo(t),e,i),e,i,n,r,s,2):2===a&&Xo(t,e,i,n,r,s):Ho(Vo(t),e,i,n,r,s,1);break}}function Wo(t){const e=t.prev,i=t,n=t.next;if(el(e,i,n)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Qo(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&el(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function jo(t,e,i,n){const r=t.prev,s=t,a=t.next;if(el(r,s,a)>=0)return!1;const o=r.x<s.x?r.x<a.x?r.x:a.x:s.x<a.x?s.x:a.x,l=r.y<s.y?r.y<a.y?r.y:a.y:s.y<a.y?s.y:a.y,c=r.x>s.x?r.x>a.x?r.x:a.x:s.x>a.x?s.x:a.x,h=r.y>s.y?r.y>a.y?r.y:a.y:s.y>a.y?s.y:a.y,u=Ko(o,l,e,i,n),d=Ko(c,h,e,i,n);let p=t.prevZ,m=t.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==t.prev&&p!==t.next&&Qo(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&el(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==t.prev&&m!==t.next&&Qo(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&el(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==t.prev&&p!==t.next&&Qo(r.x,r.y,s.x,s.y,a.x,a.y,p.x,p.y)&&el(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==t.prev&&m!==t.next&&Qo(r.x,r.y,s.x,s.y,a.x,a.y,m.x,m.y)&&el(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function qo(t,e,i){let n=t;do{const r=n.prev,s=n.next.next;!il(r,s)&&nl(r,n,n.next,s)&&al(r,s)&&al(s,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(s.i/i),cl(n),cl(n.next),n=t=s),n=n.next}while(n!==t);return Vo(n)}function Xo(t,e,i,n,r,s){let a=t;do{let t=a.next.next;for(;t!==a.prev;){if(a.i!==t.i&&tl(a,t)){let o=ol(a,t);return a=Vo(a,a.next),o=Vo(o,o.next),Ho(a,e,i,n,r,s),void Ho(o,e,i,n,r,s)}t=t.next}a=a.next}while(a!==t)}function Yo(t,e){return t.x-e.x}function Zo(t,e){if(e=function(t,e){let i=e;const n=t.x,r=t.y;let s,a=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const t=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>a){if(a=t,t===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!s)return null;if(n===a)return s;const o=s,l=s.x,c=s.y;let h,u=1/0;i=s;do{n>=i.x&&i.x>=l&&n!==i.x&&Qo(r<c?n:a,r,l,c,r<c?a:n,r,i.x,i.y)&&(h=Math.abs(r-i.y)/(n-i.x),al(i,t)&&(h<u||h===u&&(i.x>s.x||i.x===s.x&&Jo(s,i)))&&(s=i,u=h)),i=i.next}while(i!==o);return s}(t,e),e){const i=ol(e,t);Vo(e,e.next),Vo(i,i.next)}}function Jo(t,e){return el(t.prev,t,e.prev)<0&&el(e.next,t,t.next)<0}function Ko(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function $o(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function Qo(t,e,i,n,r,s,a,o){return(r-a)*(e-o)-(t-a)*(s-o)>=0&&(t-a)*(n-o)-(i-a)*(e-o)>=0&&(i-a)*(s-o)-(r-a)*(n-o)>=0}function tl(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&nl(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(al(t,e)&&al(e,t)&&function(t,e){let i=t,n=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)&&(el(t.prev,t,e.prev)||el(t,e.prev,e))||il(t,e)&&el(t.prev,t,t.next)>0&&el(e.prev,e,e.next)>0)}function el(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function il(t,e){return t.x===e.x&&t.y===e.y}function nl(t,e,i,n){const r=sl(el(t,e,i)),s=sl(el(t,e,n)),a=sl(el(i,n,t)),o=sl(el(i,n,e));return r!==s&&a!==o||(!(0!==r||!rl(t,i,e))||(!(0!==s||!rl(t,n,e))||(!(0!==a||!rl(i,t,n))||!(0!==o||!rl(i,e,n)))))}function rl(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function sl(t){return t>0?1:t<0?-1:0}function al(t,e){return el(t.prev,t,t.next)<0?el(t,e,t.next)>=0&&el(t,t.prev,e)>=0:el(t,e,t.prev)<0||el(t,t.next,e)<0}function ol(t,e){const i=new hl(t.i,t.x,t.y),n=new hl(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function ll(t,e,i,n){const r=new hl(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function cl(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function hl(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class ul{static area(t){const e=t.length;let i=0;for(let n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i}static isClockWise(t){return ul.area(t)<0}static triangulateShape(t,e){const i=[],n=[],r=[];dl(t),pl(i,t);let s=t.length;e.forEach(dl);for(let t=0;t<e.length;t++)n.push(s),s+=e[t].length,pl(i,e[t]);const a=ko(i,n);for(let t=0;t<a.length;t+=3)r.push(a.slice(t,t+3));return r}}function dl(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function pl(t,e){for(let i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}class ml extends Di{constructor(t=new Fo([new Lt(.5,.5),new Lt(-.5,.5),new Lt(-.5,-.5),new Lt(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,n=[],r=[];for(let e=0,i=t.length;e<i;e++){s(t[e])}function s(t){const s=[],a=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const m=e.extrudePath,f=void 0!==e.UVGenerator?e.UVGenerator:fl;let g,v,x,_,y,M=!1;m&&(g=m.getSpacedPoints(o),M=!0,c=!1,v=m.computeFrenetFrames(o,!1),x=new ne,_=new ne,y=new ne),c||(p=0,h=0,u=0,d=0);const b=t.extractPoints(a);let S=b.shape;const w=b.holes;if(!ul.isClockWise(S)){S=S.reverse();for(let t=0,e=w.length;t<e;t++){const e=w[t];ul.isClockWise(e)&&(w[t]=e.reverse())}}const T=ul.triangulateShape(S,w),A=S;for(let t=0,e=w.length;t<e;t++){const e=w[t];S=S.concat(e)}function E(t,e,i){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(i).add(t)}const C=S.length,L=T.length;function R(t,e,i){let n,r,s;const a=t.x-e.x,o=t.y-e.y,l=i.x-t.x,c=i.y-t.y,h=a*a+o*o,u=a*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=e.x-o/u,m=e.y+a/u,f=((i.x-c/d-p)*c-(i.y+l/d-m)*l)/(a*c-o*l);n=p+a*f-t.x,r=m+o*f-t.y;const g=n*n+r*r;if(g<=2)return new Lt(n,r);s=Math.sqrt(g/2)}else{let t=!1;a>Number.EPSILON?l>Number.EPSILON&&(t=!0):a<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(n=-o,r=a,s=Math.sqrt(h)):(n=a,r=o,s=Math.sqrt(h/2))}return new Lt(n/s,r/s)}const P=[];for(let t=0,e=A.length,i=e-1,n=t+1;t<e;t++,i++,n++)i===e&&(i=0),n===e&&(n=0),P[t]=R(A[t],A[i],A[n]);const I=[];let D,N=P.concat();for(let t=0,e=w.length;t<e;t++){const e=w[t];D=[];for(let t=0,i=e.length,n=i-1,r=t+1;t<i;t++,n++,r++)n===i&&(n=0),r===i&&(r=0),D[t]=R(e[t],e[n],e[r]);I.push(D),N=N.concat(D)}for(let t=0;t<p;t++){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=A.length;t<e;t++){const e=E(A[t],P[t],n);U(e.x,e.y,-i)}for(let t=0,e=w.length;t<e;t++){const e=w[t];D=I[t];for(let t=0,r=e.length;t<r;t++){const r=E(e[t],D[t],n);U(r.x,r.y,-i)}}}const O=u+d;for(let t=0;t<C;t++){const e=c?E(S[t],N[t],O):S[t];M?(_.copy(v.normals[0]).multiplyScalar(e.x),x.copy(v.binormals[0]).multiplyScalar(e.y),y.copy(g[0]).add(_).add(x),U(y.x,y.y,y.z)):U(e.x,e.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<C;e++){const i=c?E(S[e],N[e],O):S[e];M?(_.copy(v.normals[t]).multiplyScalar(i.x),x.copy(v.binormals[t]).multiplyScalar(i.y),y.copy(g[t]).add(_).add(x),U(y.x,y.y,y.z)):U(i.x,i.y,l/o*t)}for(let t=p-1;t>=0;t--){const e=t/p,i=h*Math.cos(e*Math.PI/2),n=u*Math.sin(e*Math.PI/2)+d;for(let t=0,e=A.length;t<e;t++){const e=E(A[t],P[t],n);U(e.x,e.y,l+i)}for(let t=0,e=w.length;t<e;t++){const e=w[t];D=I[t];for(let t=0,r=e.length;t<r;t++){const r=E(e[t],D[t],n);M?U(r.x,r.y+g[o-1].y,g[o-1].x+i):U(r.x,r.y,l+i)}}}function z(t,e){let i=t.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=t.length-1);for(let t=0,i=o+2*p;t<i;t++){const i=C*t,s=C*(t+1);F(e+n+i,e+r+i,e+r+s,e+n+s)}}}function U(t,e,i){s.push(t),s.push(e),s.push(i)}function B(t,e,r){k(t),k(e),k(r);const s=n.length/3,a=f.generateTopUV(i,n,s-3,s-2,s-1);G(a[0]),G(a[1]),G(a[2])}function F(t,e,r,s){k(t),k(e),k(s),k(e),k(r),k(s);const a=n.length/3,o=f.generateSideWallUV(i,n,a-6,a-3,a-2,a-1);G(o[0]),G(o[1]),G(o[3]),G(o[1]),G(o[2]),G(o[3])}function k(t){n.push(s[3*t+0]),n.push(s[3*t+1]),n.push(s[3*t+2])}function G(t){r.push(t.x),r.push(t.y)}!function(){const t=n.length/3;if(c){let t=0,e=C*t;for(let t=0;t<L;t++){const i=T[t];B(i[2]+e,i[1]+e,i[0]+e)}t=o+2*p,e=C*t;for(let t=0;t<L;t++){const i=T[t];B(i[0]+e,i[1]+e,i[2]+e)}}else{for(let t=0;t<L;t++){const e=T[t];B(e[2],e[1],e[0])}for(let t=0;t<L;t++){const e=T[t];B(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}i.addGroup(t,n.length/3-t,0)}(),function(){const t=n.length/3;let e=0;z(A,e),e+=A.length;for(let t=0,i=w.length;t<i;t++){const i=w[t];z(i,e),e+=i.length}i.addGroup(t,n.length/3-t,1)}()}this.setAttribute("position",new Ti(n,3)),this.setAttribute("uv",new Ti(r,2)),this.computeVertexNormals()}toJSON(){const t=super.toJSON();return function(t,e,i){if(i.shapes=[],Array.isArray(t))for(let e=0,n=t.length;e<n;e++){const n=t[e];i.shapes.push(n.uuid)}else i.shapes.push(t.uuid);i.options=Object.assign({},e),void 0!==e.extrudePath&&(i.options.extrudePath=e.extrudePath.toJSON());return i}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const i=[];for(let n=0,r=t.shapes.length;n<r;n++){const r=e[t.shapes[n]];i.push(r)}const n=t.options.extrudePath;return void 0!==n&&(t.options.extrudePath=(new wo[n.type]).fromJSON(n)),new ml(i,t.options)}}const fl={generateTopUV:function(t,e,i,n,r){const s=e[3*i],a=e[3*i+1],o=e[3*n],l=e[3*n+1],c=e[3*r],h=e[3*r+1];return[new Lt(s,a),new Lt(o,l),new Lt(c,h)]},generateSideWallUV:function(t,e,i,n,r,s){const a=e[3*i],o=e[3*i+1],l=e[3*i+2],c=e[3*n],h=e[3*n+1],u=e[3*n+2],d=e[3*r],p=e[3*r+1],m=e[3*r+2],f=e[3*s],g=e[3*s+1],v=e[3*s+2];return Math.abs(o-h)<Math.abs(a-c)?[new Lt(a,1-l),new Lt(c,1-u),new Lt(d,1-m),new Lt(f,1-v)]:[new Lt(o,1-l),new Lt(h,1-u),new Lt(p,1-m),new Lt(g,1-v)]}};class gl extends Io{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new gl(t.radius,t.detail)}}class vl extends Io{constructor(t=1,e=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new vl(t.radius,t.detail)}}class xl extends Di{constructor(t=.5,e=1,i=8,n=1,r=0,s=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},i=Math.max(3,i);const a=[],o=[],l=[],c=[];let h=t;const u=(e-t)/(n=Math.max(1,n)),d=new ne,p=new Lt;for(let t=0;t<=n;t++){for(let t=0;t<=i;t++){const n=r+t/i*s;d.x=h*Math.cos(n),d.y=h*Math.sin(n),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y)}h+=u}for(let t=0;t<n;t++){const e=t*(i+1);for(let t=0;t<i;t++){const n=t+e,r=n,s=n+i+1,o=n+i+2,l=n+1;a.push(r,s,l),a.push(s,o,l)}}this.setIndex(a),this.setAttribute("position",new Ti(o,3)),this.setAttribute("normal",new Ti(l,3)),this.setAttribute("uv",new Ti(c,2))}static fromJSON(t){return new xl(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class _l extends Di{constructor(t=new Fo([new Lt(0,.5),new Lt(-.5,-.5),new Lt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],r=[],s=[];let a=0,o=0;if(!1===Array.isArray(t))l(t);else for(let e=0;e<t.length;e++)l(t[e]),this.addGroup(a,o,e),a+=o,o=0;function l(t){const a=n.length/3,l=t.extractPoints(e);let c=l.shape;const h=l.holes;!1===ul.isClockWise(c)&&(c=c.reverse());for(let t=0,e=h.length;t<e;t++){const e=h[t];!0===ul.isClockWise(e)&&(h[t]=e.reverse())}const u=ul.triangulateShape(c,h);for(let t=0,e=h.length;t<e;t++){const e=h[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];n.push(e.x,e.y,0),r.push(0,0,1),s.push(e.x,e.y)}for(let t=0,e=u.length;t<e;t++){const e=u[t],n=e[0]+a,r=e[1]+a,s=e[2]+a;i.push(n,r,s),o+=3}}this.setIndex(i),this.setAttribute("position",new Ti(n,3)),this.setAttribute("normal",new Ti(r,3)),this.setAttribute("uv",new Ti(s,2))}toJSON(){const t=super.toJSON();return function(t,e){if(e.shapes=[],Array.isArray(t))for(let i=0,n=t.length;i<n;i++){const n=t[i];e.shapes.push(n.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}static fromJSON(t,e){const i=[];for(let n=0,r=t.shapes.length;n<r;n++){const r=e[t.shapes[n]];i.push(r)}return new _l(i,t.curveSegments)}}class yl extends Di{constructor(t=1,e=32,i=16,n=0,r=2*Math.PI,s=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const o=Math.min(s+a,Math.PI);let l=0;const c=[],h=new ne,u=new ne,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],v=d/i;let x=0;0==d&&0==s?x=.5/e:d==i&&o==Math.PI&&(x=-.5/e);for(let i=0;i<=e;i++){const o=i/e;h.x=-t*Math.cos(n+o*r)*Math.sin(s+v*a),h.y=t*Math.cos(s+v*a),h.z=t*Math.sin(n+o*r)*Math.sin(s+v*a),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(o+x,1-v),g.push(l++)}c.push(g)}for(let t=0;t<i;t++)for(let n=0;n<e;n++){const e=c[t][n+1],r=c[t][n],a=c[t+1][n],l=c[t+1][n+1];(0!==t||s>0)&&d.push(e,r,l),(t!==i-1||o<Math.PI)&&d.push(r,a,l)}this.setIndex(d),this.setAttribute("position",new Ti(p,3)),this.setAttribute("normal",new Ti(m,3)),this.setAttribute("uv",new Ti(f,2))}static fromJSON(t){return new yl(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Ml extends Io{constructor(t=1,e=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ml(t.radius,t.detail)}}class bl extends Di{constructor(t=1,e=.4,i=8,n=6,r=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},i=Math.floor(i),n=Math.floor(n);const s=[],a=[],o=[],l=[],c=new ne,h=new ne,u=new ne;for(let s=0;s<=i;s++)for(let d=0;d<=n;d++){const p=d/n*r,m=s/i*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(p),h.y=(t+e*Math.cos(m))*Math.sin(p),h.z=e*Math.sin(m),a.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(d/n),l.push(s/i)}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*t+e-1,r=(n+1)*(t-1)+e-1,a=(n+1)*(t-1)+e,o=(n+1)*t+e;s.push(i,r,o),s.push(r,a,o)}this.setIndex(s),this.setAttribute("position",new Ti(a,3)),this.setAttribute("normal",new Ti(o,3)),this.setAttribute("uv",new Ti(l,2))}static fromJSON(t){return new bl(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Sl extends Di{constructor(t=1,e=.4,i=64,n=8,r=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:s},i=Math.floor(i),n=Math.floor(n);const a=[],o=[],l=[],c=[],h=new ne,u=new ne,d=new ne,p=new ne,m=new ne,f=new ne,g=new ne;for(let a=0;a<=i;++a){const x=a/i*r*Math.PI*2;v(x,r,s,t,d),v(x+.01,r,s,t,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let t=0;t<=n;++t){const r=t/n*Math.PI*2,s=-e*Math.cos(r),p=e*Math.sin(r);h.x=d.x+(s*g.x+p*m.x),h.y=d.y+(s*g.y+p*m.y),h.z=d.z+(s*g.z+p*m.z),o.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(a/i),c.push(t/n)}}for(let t=1;t<=i;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),r=(n+1)*t+(e-1),s=(n+1)*t+e,o=(n+1)*(t-1)+e;a.push(i,r,o),a.push(r,s,o)}function v(t,e,i,n,r){const s=Math.cos(t),a=Math.sin(t),o=i/e*t,l=Math.cos(o);r.x=n*(2+l)*.5*s,r.y=n*(2+l)*a*.5,r.z=n*Math.sin(o)*.5}this.setIndex(a),this.setAttribute("position",new Ti(o,3)),this.setAttribute("normal",new Ti(l,3)),this.setAttribute("uv",new Ti(c,2))}static fromJSON(t){return new Sl(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class wl extends Di{constructor(t=new bo(new ne(-1,-1,0),new ne(-1,1,0),new ne(1,1,0)),e=64,i=1,n=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r};const s=t.computeFrenetFrames(e,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const a=new ne,o=new ne,l=new Lt;let c=new ne;const h=[],u=[],d=[],p=[];function m(r){c=t.getPointAt(r/e,c);const l=s.normals[r],d=s.binormals[r];for(let t=0;t<=n;t++){const e=t/n*Math.PI*2,r=Math.sin(e),s=-Math.cos(e);o.x=s*l.x+r*d.x,o.y=s*l.y+r*d.y,o.z=s*l.z+r*d.z,o.normalize(),u.push(o.x,o.y,o.z),a.x=c.x+i*o.x,a.y=c.y+i*o.y,a.z=c.z+i*o.z,h.push(a.x,a.y,a.z)}}!function(){for(let t=0;t<e;t++)m(t);m(!1===r?e:0),function(){for(let t=0;t<=e;t++)for(let i=0;i<=n;i++)l.x=t/e,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let t=1;t<=e;t++)for(let e=1;e<=n;e++){const i=(n+1)*(t-1)+(e-1),r=(n+1)*t+(e-1),s=(n+1)*t+e,a=(n+1)*(t-1)+e;p.push(i,r,a),p.push(r,s,a)}}()}(),this.setIndex(p),this.setAttribute("position",new Ti(h,3)),this.setAttribute("normal",new Ti(u,3)),this.setAttribute("uv",new Ti(d,2))}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new wl((new wo[t.path.type]).fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Tl extends Di{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},null!==t){const e=[],i=new Set,n=new ne,r=new ne;if(null!==t.index){const s=t.attributes.position,a=t.index;let o=t.groups;0===o.length&&(o=[{start:0,count:a.count,materialIndex:0}]);for(let t=0,l=o.length;t<l;++t){const l=o[t],c=l.start;for(let t=c,o=c+l.count;t<o;t+=3)for(let o=0;o<3;o++){const l=a.getX(t+o),c=a.getX(t+(o+1)%3);n.fromBufferAttribute(s,l),r.fromBufferAttribute(s,c),!0===Al(n,r,i)&&(e.push(n.x,n.y,n.z),e.push(r.x,r.y,r.z))}}}else{const s=t.attributes.position;for(let t=0,a=s.count/3;t<a;t++)for(let a=0;a<3;a++){const o=3*t+a,l=3*t+(a+1)%3;n.fromBufferAttribute(s,o),r.fromBufferAttribute(s,l),!0===Al(n,r,i)&&(e.push(n.x,n.y,n.z),e.push(r.x,r.y,r.z))}}this.setAttribute("position",new Ti(e,3))}}}function Al(t,e,i){const n=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`,r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`;return!0!==i.has(n)&&!0!==i.has(r)&&(i.add(n),i.add(r),!0)}var El=Object.freeze({__proto__:null,BoxGeometry:Qi,CapsuleGeometry:Co,CircleGeometry:Lo,ConeGeometry:Po,CylinderGeometry:Ro,DodecahedronGeometry:Do,EdgesGeometry:Bo,ExtrudeGeometry:ml,IcosahedronGeometry:gl,LatheGeometry:Eo,OctahedronGeometry:vl,PlaneGeometry:yn,PolyhedronGeometry:Io,RingGeometry:xl,ShapeGeometry:_l,SphereGeometry:yl,TetrahedronGeometry:Ml,TorusGeometry:bl,TorusKnotGeometry:Sl,TubeGeometry:wl,WireframeGeometry:Tl});class Cl extends xi{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new jt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Ll extends rn{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Rl extends xi{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new jt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Pl extends Rl{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Lt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new jt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new jt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new jt(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class Il extends xi{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new jt(16777215),this.specular=new jt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Dl extends xi{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new jt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Nl extends xi{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Ol extends xi{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new jt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new jt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class zl extends xi{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new jt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Lt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Ul extends Fa{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Bl(t,e,i){return kl(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)}function Fl(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)}function kl(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)}function Gl(t){const e=t.length,i=new Array(e);for(let t=0;t!==e;++t)i[t]=t;return i.sort((function(e,i){return t[e]-t[i]})),i}function Vl(t,e,i){const n=t.length,r=new t.constructor(n);for(let s=0,a=0;a!==n;++s){const n=i[s]*e;for(let i=0;i!==e;++i)r[a++]=t[n+i]}return r}function Hl(t,e,i,n){let r=1,s=t[0];for(;void 0!==s&&void 0===s[n];)s=t[r++];if(void 0===s)return;let a=s[n];if(void 0!==a)if(Array.isArray(a))do{a=s[n],void 0!==a&&(e.push(s.time),i.push.apply(i,a)),s=t[r++]}while(void 0!==s);else if(void 0!==a.toArray)do{a=s[n],void 0!==a&&(e.push(s.time),a.toArray(i,i.length)),s=t[r++]}while(void 0!==s);else do{a=s[n],void 0!==a&&(e.push(s.time),i.push(a)),s=t[r++]}while(void 0!==s)}var Wl=Object.freeze({__proto__:null,arraySlice:Bl,convertArray:Fl,isTypedArray:kl,getKeyframeOrder:Gl,sortedArray:Vl,flattenJSON:Hl,subclip:function(t,e,i,n,r=30){const s=t.clone();s.name=e;const a=[];for(let t=0;t<s.tracks.length;++t){const e=s.tracks[t],o=e.getValueSize(),l=[],c=[];for(let t=0;t<e.times.length;++t){const s=e.times[t]*r;if(!(s<i||s>=n)){l.push(e.times[t]);for(let i=0;i<o;++i)c.push(e.values[t*o+i])}}0!==l.length&&(e.times=Fl(l,e.times.constructor),e.values=Fl(c,e.values.constructor),a.push(e))}s.tracks=a;let o=1/0;for(let t=0;t<s.tracks.length;++t)o>s.tracks[t].times[0]&&(o=s.tracks[t].times[0]);for(let t=0;t<s.tracks.length;++t)s.tracks[t].shift(-1*o);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,i=t,n=30){n<=0&&(n=30);const r=i.tracks.length,s=e/n;for(let e=0;e<r;++e){const n=i.tracks[e],r=n.ValueTypeName;if("bool"===r||"string"===r)continue;const a=t.tracks.find((function(t){return t.name===n.name&&t.ValueTypeName===r}));if(void 0===a)continue;let o=0;const l=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=l/3);let c=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=n.times.length-1;let d;if(s<=n.times[0]){const t=o,e=l-o;d=Bl(n.values,t,e)}else if(s>=n.times[u]){const t=u*l+o,e=t+l-o;d=Bl(n.values,t,e)}else{const t=n.createInterpolant(),e=o,i=l-o;t.evaluate(s),d=Bl(t.resultBuffer,e,i)}if("quaternion"===r){(new ie).fromArray(d).normalize().conjugate().toArray(d)}const p=a.times.length;for(let t=0;t<p;++t){const e=t*h+c;if("quaternion"===r)ie.multiplyQuaternionsFlat(a.values,e,d,0,a.values,e);else{const t=h-2*c;for(let i=0;i<t;++i)a.values[e+i]-=d[i]}}}return t.blendMode=st,t}});class jl{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{let s;i:{n:if(!(t<n)){for(let s=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===s)break;if(r=n,n=e[++i],t<n)break e}s=e.length;break i}if(t>=r)break t;{const a=e[1];t<a&&(i=2,r=a);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(i===s)break;if(n=r,r=e[--i-1],t>=r)break e}s=i,i=0}}for(;i<s;){const n=i+s>>>1;t<e[n]?s=n:i=n+1}if(n=e[i],r=e[i-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===n)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n;for(let t=0;t!==n;++t)e[t]=i[r+t];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ql extends jl{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:et,endingEnd:et}}intervalChanged_(t,e,i){const n=this.parameterPositions;let r=t-2,s=t+1,a=n[r],o=n[s];if(void 0===a)switch(this.getSettings_().endingStart){case it:r=t,a=2*e-i;break;case nt:r=n.length-2,a=e+n[r]-n[r+1];break;default:r=t,a=i}if(void 0===o)switch(this.getSettings_().endingEnd){case it:s=t,o=2*i-e;break;case nt:s=1,o=i+n[1]-n[0];break;default:s=t-1,o=e}const l=.5*(i-e),c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-i),this._offsetPrev=r*c,this._offsetNext=s*c}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-e)/(n-e),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,x=(-1-d)*f+(1.5+d)*m+.5*p,_=d*f-d*m;for(let t=0;t!==a;++t)r[t]=g*s[c+t]+v*s[l+t]+x*s[o+t]+_*s[h+t];return r}}class Xl extends jl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(i-e)/(n-e),h=1-c;for(let t=0;t!==a;++t)r[t]=s[l+t]*h+s[o+t]*c;return r}}class Yl extends jl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class Zl{constructor(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Fl(e,this.TimeBufferType),this.values=Fl(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:Fl(t.times,Array),values:Fl(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(i.interpolation=e)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new Yl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Xl(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ql(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case $:e=this.InterpolantFactoryMethodDiscrete;break;case Q:e=this.InterpolantFactoryMethodLinear;break;case tt:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return $;case this.InterpolantFactoryMethodLinear:return Q;case this.InterpolantFactoryMethodSmooth:return tt}}getValueSize(){return this.values.length/this.times.length}shift(t){if(0!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(1!==t){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<t;)++r;for(;-1!==s&&i[s]>e;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const t=this.getValueSize();this.times=Bl(i,r,s),this.values=Bl(this.values,r*t,s*t)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let e=0;e!==r;e++){const n=i[e];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,s),t=!1;break}s=n}if(void 0!==n&&kl(n))for(let e=0,i=n.length;e!==i;++e){const i=n[e];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,i),t=!1;break}}return t}optimize(){const t=Bl(this.times),e=Bl(this.values),i=this.getValueSize(),n=this.getInterpolation()===tt,r=t.length-1;let s=1;for(let a=1;a<r;++a){let r=!1;const o=t[a];if(o!==t[a+1]&&(1!==a||o!==t[0]))if(n)r=!0;else{const t=a*i,n=t-i,s=t+i;for(let a=0;a!==i;++a){const i=e[t+a];if(i!==e[n+a]||i!==e[s+a]){r=!0;break}}}if(r){if(a!==s){t[s]=t[a];const n=a*i,r=s*i;for(let t=0;t!==i;++t)e[r+t]=e[n+t]}++s}}if(r>0){t[s]=t[r];for(let t=r*i,n=s*i,a=0;a!==i;++a)e[n+a]=e[t+a];++s}return s!==t.length?(this.times=Bl(t,0,s),this.values=Bl(e,0,s*i)):(this.times=t,this.values=e),this}clone(){const t=Bl(this.times,0),e=Bl(this.values,0),i=new(0,this.constructor)(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}Zl.prototype.TimeBufferType=Float32Array,Zl.prototype.ValueBufferType=Float32Array,Zl.prototype.DefaultInterpolation=Q;class Jl extends Zl{}Jl.prototype.ValueTypeName="bool",Jl.prototype.ValueBufferType=Array,Jl.prototype.DefaultInterpolation=$,Jl.prototype.InterpolantFactoryMethodLinear=void 0,Jl.prototype.InterpolantFactoryMethodSmooth=void 0;class Kl extends Zl{}Kl.prototype.ValueTypeName="color";class $l extends Zl{}$l.prototype.ValueTypeName="number";class Ql extends jl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const r=this.resultBuffer,s=this.sampleValues,a=this.valueSize,o=(i-e)/(n-e);let l=t*a;for(let t=l+a;l!==t;l+=4)ie.slerpFlat(r,0,s,l-a,s,l,o);return r}}class tc extends Zl{InterpolantFactoryMethodLinear(t){return new Ql(this.times,this.values,this.getValueSize(),t)}}tc.prototype.ValueTypeName="quaternion",tc.prototype.DefaultInterpolation=Q,tc.prototype.InterpolantFactoryMethodSmooth=void 0;class ec extends Zl{}ec.prototype.ValueTypeName="string",ec.prototype.ValueBufferType=Array,ec.prototype.DefaultInterpolation=$,ec.prototype.InterpolantFactoryMethodLinear=void 0,ec.prototype.InterpolantFactoryMethodSmooth=void 0;class ic extends Zl{}ic.prototype.ValueTypeName="vector";class nc{constructor(t,e=-1,i,n=2500){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=_t(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let t=0,r=i.length;t!==r;++t)e.push(rc(i[t]).scale(n));const r=new this(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,n=i.length;t!==n;++t)e.push(Zl.toJSON(i[t]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const r=e.length,s=[];for(let t=0;t<r;t++){let a=[],o=[];a.push((t+r-1)%r,t,(t+1)%r),o.push(0,1,0);const l=Gl(a);a=Vl(a,1,l),o=Vl(o,1,l),n||0!==a[0]||(a.push(r),o.push(o[0])),s.push(new $l(".morphTargetInfluences["+e[t].name+"]",a,o).scale(1/i))}return new this(t,-1,s)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const e=t;i=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<i.length;t++)if(i[t].name===e)return i[t];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let e=0,i=t.length;e<i;e++){const i=t[e],s=i.name.match(r);if(s&&s.length>1){const t=s[1];let e=n[t];e||(n[t]=e=[]),e.push(i)}}const s=[];for(const t in n)s.push(this.CreateFromMorphTargetSequence(t,n[t],e,i));return s}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(t,e,i,n,r){if(0!==i.length){const s=[],a=[];Hl(i,s,a,n),0!==s.length&&r.push(new t(e,s,a))}},n=[],r=t.name||"default",s=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let t=0;t<l.length;t++){const r=l[t].keys;if(r&&0!==r.length)if(r[0].morphTargets){const t={};let e;for(e=0;e<r.length;e++)if(r[e].morphTargets)for(let i=0;i<r[e].morphTargets.length;i++)t[r[e].morphTargets[i]]=-1;for(const i in t){const t=[],s=[];for(let n=0;n!==r[e].morphTargets.length;++n){const n=r[e];t.push(n.time),s.push(n.morphTarget===i?1:0)}n.push(new $l(".morphTargetInfluence["+i+"]",t,s))}o=t.length*s}else{const s=".bones["+e[t].name+"]";i(ic,s+".position",r,"pos",n),i(tc,s+".quaternion",r,"rot",n),i(ic,s+".scale",r,"scl",n)}}if(0===n.length)return null;return new this(r,o,n,a)}resetDuration(){let t=0;for(let e=0,i=this.tracks.length;e!==i;++e){const i=this.tracks[e];t=Math.max(t,i.times[i.times.length-1])}return this.duration=t,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function rc(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return $l;case"vector":case"vector2":case"vector3":case"vector4":return ic;case"color":return Kl;case"quaternion":return tc;case"bool":case"boolean":return Jl;case"string":return ec}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],i=[];Hl(t.keys,e,i,"value"),t.times=e,t.values=i}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const sc={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class ac{constructor(t,e,i){const n=this;let r,s=!1,a=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===s&&void 0!==n.onStart&&n.onStart(t,a,o),s=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,i=l.length;e<i;e+=2){const i=l[e],n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(t))return n}return null}}}const oc=new ac;class lc{constructor(t){this.manager=void 0!==t?t:oc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise((function(n,r){i.load(t,n,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}const cc={};class hc extends Error{constructor(t,e){super(t),this.response=e}}class uc extends lc{constructor(t){super(t)}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=sc.get(t);if(void 0!==r)return this.manager.itemStart(t),setTimeout((()=>{e&&e(r),this.manager.itemEnd(t)}),0),r;if(void 0!==cc[t])return void cc[t].push({onLoad:e,onProgress:i,onError:n});cc[t]=[],cc[t].push({onLoad:e,onProgress:i,onError:n});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,o=this.responseType;fetch(s).then((e=>{if(200===e.status||0===e.status){if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const i=cc[t],n=e.body.getReader(),r=e.headers.get("Content-Length"),s=r?parseInt(r):0,a=0!==s;let o=0;const l=new ReadableStream({start(t){!function e(){n.read().then((({done:n,value:r})=>{if(n)t.close();else{o+=r.byteLength;const n=new ProgressEvent("progress",{lengthComputable:a,loaded:o,total:s});for(let t=0,e=i.length;t<e;t++){const e=i[t];e.onProgress&&e.onProgress(n)}t.enqueue(r),e()}}))}()}});return new Response(l)}throw new hc(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,a)));case"json":return t.json();default:if(void 0===a)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(a),i=e&&e[1]?e[1].toLowerCase():void 0,n=new TextDecoder(i);return t.arrayBuffer().then((t=>n.decode(t)))}}})).then((e=>{sc.add(t,e);const i=cc[t];delete cc[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onLoad&&n.onLoad(e)}})).catch((e=>{const i=cc[t];if(void 0===i)throw this.manager.itemError(t),e;delete cc[t];for(let t=0,n=i.length;t<n;t++){const n=i[t];n.onError&&n.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class dc extends lc{constructor(t){super(t)}load(t,e,i,n){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=sc.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a=Nt("img");function o(){c(),sc.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){c(),n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)}function c(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),r.manager.itemStart(t),a.src=t,a}}class pc extends si{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new jt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}class mc extends pc{constructor(t,e,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(si.DefaultUp),this.updateMatrix(),this.groundColor=new jt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const fc=new Ne,gc=new ne,vc=new ne;class xc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Lt(512,512),this.map=null,this.mapPass=null,this.matrix=new Ne,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vn,this._frameExtents=new Lt(1,1),this._viewportCount=1,this._viewports=[new $t(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;gc.setFromMatrixPosition(t.matrixWorld),e.position.copy(gc),vc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(vc),e.updateMatrixWorld(),fc.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fc),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(e.projectionMatrix),i.multiply(e.matrixWorldInverse)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class _c extends xc{constructor(){super(new an(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,i=2*xt*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class yc extends pc{constructor(t,e,i=0,n=Math.PI/3,r=0,s=1){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(si.DefaultUp),this.updateMatrix(),this.target=new si,this.distance=i,this.angle=n,this.penumbra=r,this.decay=s,this.map=null,this.shadow=new _c}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Mc=new Ne,bc=new ne,Sc=new ne;class wc extends xc{constructor(){super(new an(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Lt(4,2),this._viewportCount=6,this._viewports=[new $t(2,1,1,1),new $t(0,1,1,1),new $t(3,1,1,1),new $t(1,1,1,1),new $t(3,0,1,1),new $t(1,0,1,1)],this._cubeDirections=[new ne(1,0,0),new ne(-1,0,0),new ne(0,0,1),new ne(0,0,-1),new ne(0,1,0),new ne(0,-1,0)],this._cubeUps=[new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,1,0),new ne(0,0,1),new ne(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,r=t.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix()),bc.setFromMatrixPosition(t.matrixWorld),i.position.copy(bc),Sc.copy(i.position),Sc.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(Sc),i.updateMatrixWorld(),n.makeTranslation(-bc.x,-bc.y,-bc.z),Mc.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Mc)}}class Tc extends pc{constructor(t,e,i=0,n=1){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new wc}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Ac extends xc{constructor(){super(new Rn(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ec extends pc{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(si.DefaultUp),this.updateMatrix(),this.target=new si,this.shadow=new Ac}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Cc extends pc{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Lc extends pc{constructor(t,e,i=10,n=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Rc{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ne)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.282095),e.addScaledVector(s[1],.488603*n),e.addScaledVector(s[2],.488603*r),e.addScaledVector(s[3],.488603*i),e.addScaledVector(s[4],i*n*1.092548),e.addScaledVector(s[5],n*r*1.092548),e.addScaledVector(s[6],.315392*(3*r*r-1)),e.addScaledVector(s[7],i*r*1.092548),e.addScaledVector(s[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,r=t.z,s=this.coefficients;return e.copy(s[0]).multiplyScalar(.886227),e.addScaledVector(s[1],1.023328*n),e.addScaledVector(s[2],1.023328*r),e.addScaledVector(s[3],1.023328*i),e.addScaledVector(s[4],.858086*i*n),e.addScaledVector(s[5],.858086*n*r),e.addScaledVector(s[6],.743125*r*r-.247708),e.addScaledVector(s[7],.858086*i*r),e.addScaledVector(s[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+3*n);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+3*n);return t}static getBasisAt(t,e){const i=t.x,n=t.y,r=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*r,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*i*r,e[8]=.546274*(i*i-n*n)}}class Pc extends pc{constructor(t=new Rc,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Ic extends lc{constructor(t){super(t),this.textures={}}load(t,e,i,n){const r=this,s=new uc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e=this.textures;function i(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const n=Ic.createMaterialFromType(t.type);if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&void 0!==n.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=t.sheen),void 0!==t.sheenColor&&(n.sheenColor=(new jt).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(n.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==n.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==n.specular&&n.specular.setHex(t.specular),void 0!==t.specularIntensity&&(n.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.iridescence&&(n.iridescence=t.iridescence),void 0!==t.iridescenceIOR&&(n.iridescenceIOR=t.iridescenceIOR),void 0!==t.iridescenceThicknessRange&&(n.iridescenceThicknessRange=t.iridescenceThicknessRange),void 0!==t.transmission&&(n.transmission=t.transmission),void 0!==t.thickness&&(n.thickness=t.thickness),void 0!==t.attenuationDistance&&(n.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.shadowSide&&(n.shadowSide=t.shadowSide),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.alphaToCoverage&&(n.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(n.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?n.vertexColors=t.vertexColors>0:n.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const r=t.uniforms[e];switch(n.uniforms[e]={},r.type){case"t":n.uniforms[e].value=i(r.value);break;case"c":n.uniforms[e].value=(new jt).setHex(r.value);break;case"v2":n.uniforms[e].value=(new Lt).fromArray(r.value);break;case"v3":n.uniforms[e].value=(new ne).fromArray(r.value);break;case"v4":n.uniforms[e].value=(new $t).fromArray(r.value);break;case"m3":n.uniforms[e].value=(new Rt).fromArray(r.value);break;case"m4":n.uniforms[e].value=(new Ne).fromArray(r.value);break;default:n.uniforms[e].value=r.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.glslVersion&&(n.glslVersion=t.glslVersion),void 0!==t.extensions)for(const e in t.extensions)n.extensions[e]=t.extensions[e];if(void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=i(t.map)),void 0!==t.matcap&&(n.matcap=i(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=i(t.alphaMap)),void 0!==t.bumpMap&&(n.bumpMap=i(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=i(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),n.normalScale=(new Lt).fromArray(e)}return void 0!==t.displacementMap&&(n.displacementMap=i(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=i(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=i(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=i(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=i(t.specularMap)),void 0!==t.specularIntensityMap&&(n.specularIntensityMap=i(t.specularIntensityMap)),void 0!==t.specularColorMap&&(n.specularColorMap=i(t.specularColorMap)),void 0!==t.envMap&&(n.envMap=i(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=i(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=i(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=i(t.gradientMap)),void 0!==t.clearcoatMap&&(n.clearcoatMap=i(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Lt).fromArray(t.clearcoatNormalScale)),void 0!==t.iridescenceMap&&(n.iridescenceMap=i(t.iridescenceMap)),void 0!==t.iridescenceThicknessMap&&(n.iridescenceThicknessMap=i(t.iridescenceThicknessMap)),void 0!==t.transmissionMap&&(n.transmissionMap=i(t.transmissionMap)),void 0!==t.thicknessMap&&(n.thicknessMap=i(t.thicknessMap)),void 0!==t.sheenColorMap&&(n.sheenColorMap=i(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(n.sheenRoughnessMap=i(t.sheenRoughnessMap)),n}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){return new{ShadowMaterial:Cl,SpriteMaterial:na,RawShaderMaterial:Ll,ShaderMaterial:rn,PointsMaterial:Ja,MeshPhysicalMaterial:Pl,MeshStandardMaterial:Rl,MeshPhongMaterial:Il,MeshToonMaterial:Dl,MeshNormalMaterial:Nl,MeshLambertMaterial:Ol,MeshDepthMaterial:Os,MeshDistanceMaterial:zs,MeshBasicMaterial:_i,MeshMatcapMaterial:zl,LineDashedMaterial:Ul,LineBasicMaterial:Fa,Material:xi}[t]}}class Dc{static decodeText(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);let e="";for(let i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch(t){return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return-1===e?"./":t.slice(0,e+1)}static resolveURL(t,e){return"string"!=typeof t||""===t?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Nc extends Di{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const t=super.toJSON(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Oc extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=new uc(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e={},i={};function n(t,n){if(void 0!==e[n])return e[n];const r=t.interleavedBuffers[n],s=function(t,e){if(void 0!==i[e])return i[e];const n=t.arrayBuffers[e],r=new Uint32Array(n).buffer;return i[e]=r,r}(t,r.buffer),a=Dt(r.type,s),o=new ta(a,r.stride);return o.uuid=r.uuid,e[n]=o,o}const r=t.isInstancedBufferGeometry?new Nc:new Di,s=t.data.index;if(void 0!==s){const t=Dt(s.type,s.array);r.setIndex(new bi(t,1))}const a=t.data.attributes;for(const e in a){const i=a[e];let s;if(i.isInterleavedBufferAttribute){const e=n(t.data,i.data);s=new ia(e,i.itemSize,i.offset,i.normalized)}else{const t=Dt(i.type,i.array);s=new(i.isInstancedBufferAttribute?Da:bi)(t,i.itemSize,i.normalized)}void 0!==i.name&&(s.name=i.name),void 0!==i.usage&&s.setUsage(i.usage),void 0!==i.updateRange&&(s.updateRange.offset=i.updateRange.offset,s.updateRange.count=i.updateRange.count),r.setAttribute(e,s)}const o=t.data.morphAttributes;if(o)for(const e in o){const i=o[e],s=[];for(let e=0,r=i.length;e<r;e++){const r=i[e];let a;if(r.isInterleavedBufferAttribute){const e=n(t.data,r.data);a=new ia(e,r.itemSize,r.offset,r.normalized)}else{const t=Dt(r.type,r.array);a=new bi(t,r.itemSize,r.normalized)}void 0!==r.name&&(a.name=r.name),s.push(a)}r.morphAttributes[e]=s}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==l)for(let t=0,e=l.length;t!==e;++t){const e=l[t];r.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new ne;void 0!==c.center&&t.fromArray(c.center),r.boundingSphere=new Te(t,c.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}}const zc={UVMapping:n,CubeReflectionMapping:r,CubeRefractionMapping:s,EquirectangularReflectionMapping:a,EquirectangularRefractionMapping:o,CubeUVReflectionMapping:l},Uc={RepeatWrapping:c,ClampToEdgeWrapping:h,MirroredRepeatWrapping:u},Bc={NearestFilter:d,NearestMipmapNearestFilter:p,NearestMipmapLinearFilter:m,LinearFilter:f,LinearMipmapNearestFilter:g,LinearMipmapLinearFilter:v};let Fc;const kc={getContext:function(){return void 0===Fc&&(Fc=new(window.AudioContext||window.webkitAudioContext)),Fc},setContext:function(t){Fc=t}};const Gc=new Ne,Vc=new Ne,Hc=new Ne;class Wc{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=jc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=jc();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function jc(){return("undefined"==typeof performance?Date:performance).now()}const qc=new ne,Xc=new ie,Yc=new ne,Zc=new ne;class Jc extends si{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const Kc=new ne,$c=new ie,Qc=new ne,th=new ne;class eh{constructor(t,e,i){let n,r,s;switch(this.binding=t,this.valueSize=i,e){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,r=t*n+n;let s=this.cumulativeWeight;if(0===s){for(let t=0;t!==n;++t)i[r+t]=i[t];s=e}else{s+=e;const t=e/s;this._mixBufferRegion(i,r,0,t,n)}this.cumulativeWeight=s}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const t=e*this._origIndex;this._mixBufferRegion(i,n,t,1-r,e)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let t=e,r=e+e;t!==r;++t)if(i[t]!==i[t+e]){a.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let t=i,r=n;t!==r;++t)e[t]=e[n+t%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,r){if(n>=.5)for(let n=0;n!==r;++n)t[e+n]=t[i+n]}_slerp(t,e,i,n){ie.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,r){const s=this._workIndex*r;ie.multiplyQuaternionsFlat(t,s,t,e,t,i),ie.slerpFlat(t,e,t,e,t,s,n)}_lerp(t,e,i,n,r){const s=1-n;for(let a=0;a!==r;++a){const r=e+a;t[r]=t[r]*s+t[i+a]*n}}_lerpAdditive(t,e,i,n,r){for(let s=0;s!==r;++s){const r=e+s;t[r]=t[r]+t[i+s]*n}}}const ih="\\[\\]\\.:\\/",nh=new RegExp("[\\[\\]\\.:\\/]","g"),rh="[^\\[\\]\\.:\\/]",sh="[^"+ih.replace("\\.","")+"]",ah=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",rh)+/(WCOD+)?/.source.replace("WCOD",sh)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",rh)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",rh)+"$"),oh=["material","materials","bones","map"];class lh{constructor(t,e,i){this.path=e,this.parsedPath=i||lh.parseTrackName(e),this.node=lh.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new lh.Composite(t,e,i):new lh(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(nh,"")}static parseTrackName(t){const e=ah.exec(t);if(null===e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const t=i.nodeName.substring(n+1);-1!==oh.indexOf(t)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=t)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(void 0===e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(void 0!==i)return i}if(t.children){const i=function(t){for(let n=0;n<t.length;n++){const r=t[n];if(r.name===e||r.uuid===e)return r;const s=i(r.children);if(s)return s}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let r=e.propertyIndex;if(t||(t=lh.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=e.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===n){n=e;break}break;case"map":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==n){if(void 0===t[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[n]}}const s=t[n];if(void 0===s){const i=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",t)}let a=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?a=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[r]&&(r=t.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(o=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}lh.Composite=class{constructor(t,e,i){const n=i||lh.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},lh.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},lh.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},lh.prototype.GetterByBindingType=[lh.prototype._getValue_direct,lh.prototype._getValue_array,lh.prototype._getValue_arrayElement,lh.prototype._getValue_toArray],lh.prototype.SetterByBindingTypeAndVersioning=[[lh.prototype._setValue_direct,lh.prototype._setValue_direct_setNeedsUpdate,lh.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[lh.prototype._setValue_array,lh.prototype._setValue_array_setNeedsUpdate,lh.prototype._setValue_array_setMatrixWorldNeedsUpdate],[lh.prototype._setValue_arrayElement,lh.prototype._setValue_arrayElement_setNeedsUpdate,lh.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[lh.prototype._setValue_fromArray,lh.prototype._setValue_fromArray_setNeedsUpdate,lh.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ch{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const r=e.tracks,s=r.length,a=new Array(s),o={endingStart:et,endingEnd:et};for(let t=0;t!==s;++t){const e=r[t].createInterpolant(null);a[t]=e,e.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const i=this._clip.duration,n=t._clip.duration,r=n/i,s=i/n;t.warp(1,r,e),this.warp(s,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,r=n.time,s=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+i,l[0]=t/s,l[1]=e/s,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled)return void this._updateWeight(t);const r=this._startTime;if(null!==r){const n=(t-r)*i;n<0||0===i?e=0:(this._startTime=null,e=i*n)}e*=this._updateTimeScale(t);const s=this._updateTime(e),a=this._updateWeight(t);if(a>0){const t=this._interpolants,e=this._propertyBindings;if(this.blendMode===st)for(let i=0,n=t.length;i!==n;++i)t[i].evaluate(s),e[i].accumulateAdditive(a);else for(let i=0,r=t.length;i!==r;++i)t[i].evaluate(s),e[i].accumulate(n,a)}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,r=this._loopCount;const s=2202===i;if(0===t)return-1===r?n:s&&1==(1&r)?e-n:n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else{if(!(n<0)){this.time=n;break t}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=e||n<0){const i=Math.floor(n/e);n-=e*i,r+=Math.abs(i);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===a){const e=t<0;this._setEndings(e,!e,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(s&&1==(1&r))return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=it,n.endingEnd=it):(n.endingStart=t?this.zeroSlopeAtStart?it:et:nt,n.endingEnd=e?this.zeroSlopeAtEnd?it:et:nt)}_scheduleFading(t,e,i){const n=this._mixer,r=n.time;let s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);const a=s.parameterPositions,o=s.sampleValues;return a[0]=r,o[0]=e,a[1]=r+t,o[1]=i,this}}const hh=new Float32Array(1);class uh{constructor(t){this.value=t}clone(){return new uh(void 0===this.value.clone?this.value:this.value.clone())}}let dh=0;function ph(t,e){return t.distance-e.distance}function mh(t,e,i,n){if(t.layers.test(e.layers)&&t.raycast(e,i),!0===n){const n=t.children;for(let t=0,r=n.length;t<r;t++)mh(n[t],e,i,!0)}}const fh=new Lt;const gh=new ne,vh=new ne;const xh=new ne;const _h=new ne,yh=new Ne,Mh=new Ne;function bh(t){const e=[];!0===t.isBone&&e.push(t);for(let i=0;i<t.children.length;i++)e.push.apply(e,bh(t.children[i]));return e}const Sh=new ne,wh=new jt,Th=new jt;const Ah=new ne,Eh=new ne,Ch=new ne;const Lh=new ne,Rh=new sn;function Ph(t,e,i,n,r,s,a){Lh.set(r,s,a).unproject(n);const o=e[t];if(void 0!==o){const t=i.getAttribute("position");for(let e=0,i=o.length;e<i;e++)t.setXYZ(o[e],Lh.x,Lh.y,Lh.z)}}const Ih=new ae;const Dh=new ne;let Nh,Oh;const zh=Uh();function Uh(){const t=new ArrayBuffer(4),e=new Float32Array(t),i=new Uint32Array(t),n=new Uint32Array(512),r=new Uint32Array(512);for(let t=0;t<256;++t){const e=t-127;e<-27?(n[t]=0,n[256|t]=32768,r[t]=24,r[256|t]=24):e<-14?(n[t]=1024>>-e-14,n[256|t]=1024>>-e-14|32768,r[t]=-e-1,r[256|t]=-e-1):e<=15?(n[t]=e+15<<10,n[256|t]=e+15<<10|32768,r[t]=13,r[256|t]=13):e<128?(n[t]=31744,n[256|t]=64512,r[t]=24,r[256|t]=24):(n[t]=31744,n[256|t]=64512,r[t]=13,r[256|t]=13)}const s=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let t=1;t<1024;++t){let e=t<<13,i=0;for(;0==(8388608&e);)e<<=1,i-=8388608;e&=-8388609,i+=947912704,s[t]=e|i}for(let t=1024;t<2048;++t)s[t]=939524096+(t-1024<<13);for(let t=1;t<31;++t)a[t]=t<<23;a[31]=1199570944,a[32]=2147483648;for(let t=33;t<63;++t)a[t]=2147483648+(t-32<<23);a[63]=3347054592;for(let t=1;t<64;++t)32!==t&&(o[t]=1024);return{floatView:e,uint32View:i,baseTable:n,shiftTable:r,mantissaTable:s,exponentTable:a,offsetTable:o}}var Bh=Object.freeze({__proto__:null,toHalfFloat:function(t){Math.abs(t)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),t=yt(t,-65504,65504),zh.floatView[0]=t;const e=zh.uint32View[0],i=e>>23&511;return zh.baseTable[i]+((8388607&e)>>zh.shiftTable[i])},fromHalfFloat:function(t){const e=t>>10;return zh.uint32View[0]=zh.mantissaTable[zh.offsetTable[e]+(1023&t)]+zh.exponentTable[e],zh.floatView[0]}});"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:e}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=e),t.ACESFilmicToneMapping=4,t.AddEquation=i,t.AddOperation=2,t.AdditiveAnimationBlendMode=st,t.AdditiveBlending=2,t.AlphaFormat=1021,t.AlwaysDepth=1,t.AlwaysStencilFunc=519,t.AmbientLight=Cc,t.AmbientLightProbe=class extends Pc{constructor(t,e=1){super(void 0,e),this.isAmbientLightProbe=!0;const i=(new jt).set(t);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}},t.AnimationClip=nc,t.AnimationLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=new uc(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(i){try{e(r.parse(JSON.parse(i)))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}parse(t){const e=[];for(let i=0;i<t.length;i++){const n=nc.parse(t[i]);e.push(n)}return e}},t.AnimationMixer=class extends mt{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,s=t._propertyBindings,a=t._interpolants,o=i.uuid,l=this._bindingsByRootAndName;let c=l[o];void 0===c&&(c={},l[o]=c);for(let t=0;t!==r;++t){const r=n[t],l=r.name;let h=c[l];if(void 0!==h)++h.referenceCount,s[t]=h;else{if(h=s[t],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,o,l));continue}const n=e&&e._propertyBindings[t].binding.parsedPath;h=new eh(lh.create(i,l,n),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,o,l),s[t]=h}a[t].resultBuffer=h.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,r=this._actionsByClip;let s=r[e];if(void 0===s)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const e=s.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=n.length,n.push(t),s.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,a=s[r],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;delete a.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete s[r],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let t=0,i=e.length;t!==i;++t){const i=e[t];0==--i.referenceCount&&this._removeInactiveBinding(i)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,r=this._bindings;let s=n[e];void 0===s&&(s={},n[e]=s),s[i]=t,t._cacheIndex=r.length,r.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,a=s[n],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[r],0===Object.keys(a).length&&delete s[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return void 0===i&&(i=new Xl(new Float32Array(2),new Float32Array(2),1,hh),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r}clipAction(t,e,i){const n=e||this._root,r=n.uuid;let s="string"==typeof t?nc.findByName(n,t):t;const a=null!==s?s.uuid:t,o=this._actionsByClip[a];let l=null;if(void 0===i&&(i=null!==s?s.blendMode:rt),void 0!==o){const t=o.actionByRoot[r];if(void 0!==t&&t.blendMode===i)return t;l=o.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new ch(this,s,e,i);return this._bindAction(c,l),this._addInactiveAction(c,a,r),c}existingAction(t,e){const i=e||this._root,n=i.uuid,r="string"==typeof t?nc.findByName(i,t):t,s=r?r.uuid:t,a=this._actionsByClip[s];return void 0!==a&&a.actionByRoot[n]||null}stopAllAction(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let a=0;a!==i;++a){e[a]._update(n,t,r,s)}const a=this._bindings,o=this._nActiveBindings;for(let t=0;t!==o;++t)a[t].apply(s);return this}setTime(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const t=r.knownActions;for(let i=0,n=t.length;i!==n;++i){const n=t[i];this._deactivateAction(n);const r=n._cacheIndex,s=e[e.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,s._cacheIndex=r,e[r]=s,e.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const t in i){const n=i[t].actionByRoot[e];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[e];if(void 0!==n)for(const t in n){const e=n[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(t,e){const i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}},t.AnimationObjectGroup=class{constructor(){this.isAnimationObjectGroup=!0,this.uuid=_t(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,s=r.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=e[u];if(void 0===d){d=o++,e[u]=d,t.push(h);for(let t=0,e=s;t!==e;++t)r[t].push(new lh(h,i[t],n[t]))}else if(d<l){a=t[d];const o=--l,c=t[o];e[c.uuid]=d,t[d]=c,e[u]=o,t[o]=h;for(let t=0,e=s;t!==e;++t){const e=r[t],s=e[o];let a=e[d];e[d]=s,void 0===a&&(a=new lh(h,i[t],n[t])),e[o]=a}}else t[d]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s],o=a.uuid,l=e[o];if(void 0!==l&&l>=r){const s=r++,c=t[s];e[c.uuid]=l,t[l]=c,e[o]=s,t[s]=a;for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[s],r=e[l];e[l]=n,e[s]=r}}}this.nCachedObjects_=r}uncache(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,s=t.length;for(let a=0,o=arguments.length;a!==o;++a){const o=arguments[a].uuid,l=e[o];if(void 0!==l)if(delete e[o],l<r){const a=--r,o=t[a],c=--s,h=t[c];e[o.uuid]=l,t[l]=o,e[h.uuid]=a,t[a]=h,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t],n=e[a],r=e[c];e[l]=n,e[a]=r,e.pop()}}else{const r=--s,a=t[r];r>0&&(e[a.uuid]=l),t[l]=a,t.pop();for(let t=0,e=n;t!==e;++t){const e=i[t];e[l]=e[r],e.pop()}}}this.nCachedObjects_=r}subscribe_(t,e){const i=this._bindingsIndicesByPath;let n=i[t];const r=this._bindings;if(void 0!==n)return r[n];const s=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);n=r.length,i[t]=n,s.push(t),a.push(e),r.push(h);for(let i=c,n=o.length;i!==n;++i){const n=o[i];h[i]=new lh(n,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){const n=this._paths,r=this._parsedPaths,s=this._bindings,a=s.length-1,o=s[a];e[t[a]]=i,s[i]=o,s.pop(),r[i]=r[a],r.pop(),n[i]=n[a],n.pop()}}},t.AnimationUtils=Wl,t.ArcCurve=ao,t.ArrayCamera=Gs,t.ArrowHelper=class extends si{constructor(t=new ne(0,0,1),e=new ne(0,0,0),i=1,n=16776960,r=.2*i,s=.2*r){super(),this.type="ArrowHelper",void 0===Nh&&(Nh=new Di,Nh.setAttribute("position",new Ti([0,0,0,0,1,0],3)),Oh=new Ro(0,.5,1,5,1),Oh.translate(0,-.5,0)),this.position.copy(e),this.line=new ja(Nh,new Fa({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ki(Oh,new _i({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,s)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Dh.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Dh,e)}}setLength(t,e=.2*t,i=.2*e){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}},t.Audio=Jc,t.AudioAnalyser=class{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let i=0;i<e.length;i++)t+=e[i];return t/e.length}},t.AudioContext=kc,t.AudioListener=class extends si{constructor(){super(),this.type="AudioListener",this.context=kc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Wc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(qc,Xc,Yc),Zc.set(0,0,-1).applyQuaternion(Xc),e.positionX){const t=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(qc.x,t),e.positionY.linearRampToValueAtTime(qc.y,t),e.positionZ.linearRampToValueAtTime(qc.z,t),e.forwardX.linearRampToValueAtTime(Zc.x,t),e.forwardY.linearRampToValueAtTime(Zc.y,t),e.forwardZ.linearRampToValueAtTime(Zc.z,t),e.upX.linearRampToValueAtTime(i.x,t),e.upY.linearRampToValueAtTime(i.y,t),e.upZ.linearRampToValueAtTime(i.z,t)}else e.setPosition(qc.x,qc.y,qc.z),e.setOrientation(Zc.x,Zc.y,Zc.z,i.x,i.y,i.z)}},t.AudioLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=new uc(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(t,(function(i){try{const t=i.slice(0);kc.getContext().decodeAudioData(t,(function(t){e(t)}))}catch(e){n?n(e):console.error(e),r.manager.itemError(t)}}),i,n)}},t.AxesHelper=class extends Ya{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new Di;i.setAttribute("position",new Ti(e,3)),i.setAttribute("color",new Ti([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(i,new Fa({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(t,e,i){const n=new jt,r=this.geometry.attributes.color.array;return n.set(t),n.toArray(r,0),n.toArray(r,3),n.set(e),n.toArray(r,6),n.toArray(r,9),n.set(i),n.toArray(r,12),n.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}},t.BackSide=1,t.BasicDepthPacking=3200,t.BasicShadowMap=0,t.Bone=Ca,t.BooleanKeyframeTrack=Jl,t.Box2=class{constructor(t=new Lt(1/0,1/0),e=new Lt(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=fh.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return fh.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},t.Box3=ae,t.Box3Helper=class extends Ya{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Di;n.setIndex(new bi(i,1)),n.setAttribute("position",new Ti([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new Fa({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}},t.BoxBufferGeometry=class extends Qi{constructor(t,e,i,n,r,s){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(t,e,i,n,r,s)}},t.BoxGeometry=Qi,t.BoxHelper=class extends Ya{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new Di;r.setIndex(new bi(i,1)),r.setAttribute("position",new bi(n,3)),super(r,new Fa({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(void 0!==t&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Ih.setFromObject(this.object),Ih.isEmpty())return;const e=Ih.min,i=Ih.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=e.x,r[4]=i.y,r[5]=i.z,r[6]=e.x,r[7]=e.y,r[8]=i.z,r[9]=i.x,r[10]=e.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=e.z,r[15]=e.x,r[16]=i.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=i.x,r[22]=e.y,r[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}},t.BufferAttribute=bi,t.BufferGeometry=Di,t.BufferGeometryLoader=Oc,t.ByteType=1010,t.Cache=sc,t.Camera=sn,t.CameraHelper=class extends Ya{constructor(t){const e=new Di,i=new Fa({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={};function a(t,e){o(t),o(e)}function o(t){n.push(0,0,0),r.push(0,0,0),void 0===s[t]&&(s[t]=[]),s[t].push(n.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),e.setAttribute("position",new Ti(n,3)),e.setAttribute("color",new Ti(r,3)),super(e,i),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update();const l=new jt(16755200),c=new jt(16711680),h=new jt(43775),u=new jt(16777215),d=new jt(3355443);this.setColors(l,c,h,u,d)}setColors(t,e,i,n,r){const s=this.geometry.getAttribute("color");s.setXYZ(0,t.r,t.g,t.b),s.setXYZ(1,t.r,t.g,t.b),s.setXYZ(2,t.r,t.g,t.b),s.setXYZ(3,t.r,t.g,t.b),s.setXYZ(4,t.r,t.g,t.b),s.setXYZ(5,t.r,t.g,t.b),s.setXYZ(6,t.r,t.g,t.b),s.setXYZ(7,t.r,t.g,t.b),s.setXYZ(8,t.r,t.g,t.b),s.setXYZ(9,t.r,t.g,t.b),s.setXYZ(10,t.r,t.g,t.b),s.setXYZ(11,t.r,t.g,t.b),s.setXYZ(12,t.r,t.g,t.b),s.setXYZ(13,t.r,t.g,t.b),s.setXYZ(14,t.r,t.g,t.b),s.setXYZ(15,t.r,t.g,t.b),s.setXYZ(16,t.r,t.g,t.b),s.setXYZ(17,t.r,t.g,t.b),s.setXYZ(18,t.r,t.g,t.b),s.setXYZ(19,t.r,t.g,t.b),s.setXYZ(20,t.r,t.g,t.b),s.setXYZ(21,t.r,t.g,t.b),s.setXYZ(22,t.r,t.g,t.b),s.setXYZ(23,t.r,t.g,t.b),s.setXYZ(24,e.r,e.g,e.b),s.setXYZ(25,e.r,e.g,e.b),s.setXYZ(26,e.r,e.g,e.b),s.setXYZ(27,e.r,e.g,e.b),s.setXYZ(28,e.r,e.g,e.b),s.setXYZ(29,e.r,e.g,e.b),s.setXYZ(30,e.r,e.g,e.b),s.setXYZ(31,e.r,e.g,e.b),s.setXYZ(32,i.r,i.g,i.b),s.setXYZ(33,i.r,i.g,i.b),s.setXYZ(34,i.r,i.g,i.b),s.setXYZ(35,i.r,i.g,i.b),s.setXYZ(36,i.r,i.g,i.b),s.setXYZ(37,i.r,i.g,i.b),s.setXYZ(38,n.r,n.g,n.b),s.setXYZ(39,n.r,n.g,n.b),s.setXYZ(40,r.r,r.g,r.b),s.setXYZ(41,r.r,r.g,r.b),s.setXYZ(42,r.r,r.g,r.b),s.setXYZ(43,r.r,r.g,r.b),s.setXYZ(44,r.r,r.g,r.b),s.setXYZ(45,r.r,r.g,r.b),s.setXYZ(46,r.r,r.g,r.b),s.setXYZ(47,r.r,r.g,r.b),s.setXYZ(48,r.r,r.g,r.b),s.setXYZ(49,r.r,r.g,r.b),s.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap;Rh.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Ph("c",e,t,Rh,0,0,-1),Ph("t",e,t,Rh,0,0,1),Ph("n1",e,t,Rh,-1,-1,-1),Ph("n2",e,t,Rh,1,-1,-1),Ph("n3",e,t,Rh,-1,1,-1),Ph("n4",e,t,Rh,1,1,-1),Ph("f1",e,t,Rh,-1,-1,1),Ph("f2",e,t,Rh,1,-1,1),Ph("f3",e,t,Rh,-1,1,1),Ph("f4",e,t,Rh,1,1,1),Ph("u1",e,t,Rh,.7,1.1,-1),Ph("u2",e,t,Rh,-.7,1.1,-1),Ph("u3",e,t,Rh,0,2,-1),Ph("cf1",e,t,Rh,-1,0,1),Ph("cf2",e,t,Rh,1,0,1),Ph("cf3",e,t,Rh,0,-1,1),Ph("cf4",e,t,Rh,0,1,1),Ph("cn1",e,t,Rh,-1,0,-1),Ph("cn2",e,t,Rh,1,0,-1),Ph("cn3",e,t,Rh,0,-1,-1),Ph("cn4",e,t,Rh,0,1,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},t.CanvasTexture=class extends Kt{constructor(t,e,i,n,r,s,a,o,l){super(t,e,i,n,r,s,a,o,l),this.isCanvasTexture=!0,this.needsUpdate=!0}},t.CapsuleBufferGeometry=class extends Co{constructor(t,e,i,n){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(t,e,i,n)}},t.CapsuleGeometry=Co,t.CatmullRomCurve3=po,t.CineonToneMapping=3,t.CircleBufferGeometry=class extends Lo{constructor(t,e,i,n){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(t,e,i,n)}},t.CircleGeometry=Lo,t.ClampToEdgeWrapping=h,t.Clock=Wc,t.Color=jt,t.ColorKeyframeTrack=Kl,t.ColorManagement=Bt,t.CompressedTexture=no,t.CompressedTextureLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=[],a=new no,o=new uc(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(r.withCredentials);let l=0;function c(c){o.load(t[c],(function(t){const i=r.parse(t,!0);s[c]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},l+=1,6===l&&(1===i.mipmapCount&&(a.minFilter=f),a.image=s,a.format=i.format,a.needsUpdate=!0,e&&e(a))}),i,n)}if(Array.isArray(t))for(let e=0,i=t.length;e<i;++e)c(e);else o.load(t,(function(t){const i=r.parse(t,!0);if(i.isCubemap){const t=i.mipmaps.length/i.mipmapCount;for(let e=0;e<t;e++){s[e]={mipmaps:[]};for(let t=0;t<i.mipmapCount;t++)s[e].mipmaps.push(i.mipmaps[e*i.mipmapCount+t]),s[e].format=i.format,s[e].width=i.width,s[e].height=i.height}a.image=s}else a.image.width=i.width,a.image.height=i.height,a.mipmaps=i.mipmaps;1===i.mipmapCount&&(a.minFilter=f),a.format=i.format,a.needsUpdate=!0,e&&e(a)}),i,n);return a}},t.ConeBufferGeometry=class extends Po{constructor(t,e,i,n,r,s,a){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(t,e,i,n,r,s,a)}},t.ConeGeometry=Po,t.CubeCamera=ln,t.CubeReflectionMapping=r,t.CubeRefractionMapping=s,t.CubeTexture=cn,t.CubeTextureLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=new cn,s=new dc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let a=0;function o(i){s.load(t[i],(function(t){r.images[i]=t,a++,6===a&&(r.needsUpdate=!0,e&&e(r))}),void 0,n)}for(let e=0;e<t.length;++e)o(e);return r}},t.CubeUVReflectionMapping=l,t.CubicBezierCurve=vo,t.CubicBezierCurve3=xo,t.CubicInterpolant=ql,t.CullFaceBack=1,t.CullFaceFront=2,t.CullFaceFrontBack=3,t.CullFaceNone=0,t.Curve=ro,t.CurvePath=To,t.CustomBlending=5,t.CustomToneMapping=5,t.CylinderBufferGeometry=class extends Ro{constructor(t,e,i,n,r,s,a,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(t,e,i,n,r,s,a,o)}},t.CylinderGeometry=Ro,t.Cylindrical=class{constructor(t=1,e=0,i=0){return this.radius=t,this.theta=e,this.y=i,this}set(t,e,i){return this.radius=t,this.theta=e,this.y=i,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}clone(){return(new this.constructor).copy(this)}},t.Data3DTexture=ee,t.DataArrayTexture=te,t.DataTexture=La,t.DataTexture2DArray=class extends te{constructor(t,e,i,n){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(t,e,i,n)}},t.DataTexture3D=class extends ee{constructor(t,e,i,n){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(t,e,i,n)}},t.DataTextureLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=new La,a=new uc(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(r.withCredentials),a.load(t,(function(t){const i=r.parse(t);i&&(void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:h,s.wrapT=void 0!==i.wrapT?i.wrapT:h,s.magFilter=void 0!==i.magFilter?i.magFilter:f,s.minFilter=void 0!==i.minFilter?i.minFilter:f,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(s.encoding=i.encoding),void 0!==i.flipY&&(s.flipY=i.flipY),void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=v),1===i.mipmapCount&&(s.minFilter=f),void 0!==i.generateMipmaps&&(s.generateMipmaps=i.generateMipmaps),s.needsUpdate=!0,e&&e(s,i))}),i,n),s}},t.DataUtils=Bh,t.DecrementStencilOp=7683,t.DecrementWrapStencilOp=34056,t.DefaultLoadingManager=oc,t.DepthFormat=T,t.DepthStencilFormat=A,t.DepthTexture=js,t.DirectionalLight=Ec,t.DirectionalLightHelper=class extends si{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);let n=new Di;n.setAttribute("position",new Ti([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const r=new Fa({fog:!1,toneMapped:!1});this.lightPlane=new ja(n,r),this.add(this.lightPlane),n=new Di,n.setAttribute("position",new Ti([0,0,0,0,0,1],3)),this.targetLine=new ja(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Ah.setFromMatrixPosition(this.light.matrixWorld),Eh.setFromMatrixPosition(this.light.target.matrixWorld),Ch.subVectors(Eh,Ah),this.lightPlane.lookAt(Eh),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Eh),this.targetLine.scale.z=Ch.length()}},t.DiscreteInterpolant=Yl,t.DodecahedronBufferGeometry=class extends Do{constructor(t,e){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(t,e)}},t.DodecahedronGeometry=Do,t.DoubleSide=2,t.DstAlphaFactor=206,t.DstColorFactor=208,t.DynamicCopyUsage=35050,t.DynamicDrawUsage=35048,t.DynamicReadUsage=35049,t.EdgesGeometry=Bo,t.EllipseCurve=so,t.EqualDepth=4,t.EqualStencilFunc=514,t.EquirectangularReflectionMapping=a,t.EquirectangularRefractionMapping=o,t.Euler=We,t.EventDispatcher=mt,t.ExtrudeBufferGeometry=class extends ml{constructor(t,e){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(t,e)}},t.ExtrudeGeometry=ml,t.FileLoader=uc,t.Float16BufferAttribute=class extends bi{constructor(t,e,i){super(new Uint16Array(t),e,i),this.isFloat16BufferAttribute=!0}},t.Float32BufferAttribute=Ti,t.Float64BufferAttribute=class extends bi{constructor(t,e,i){super(new Float64Array(t),e,i)}},t.FloatType=M,t.Fog=$s,t.FogExp2=Ks,t.FramebufferTexture=class extends Kt{constructor(t,e,i){super({width:t,height:e}),this.isFramebufferTexture=!0,this.format=i,this.magFilter=d,this.minFilter=d,this.generateMipmaps=!1,this.needsUpdate=!0}},t.FrontSide=0,t.Frustum=vn,t.GLBufferAttribute=class{constructor(t,e,i,n,r){this.isGLBufferAttribute=!0,this.buffer=t,this.type=e,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}set needsUpdate(t){!0===t&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}},t.GLSL1="100",t.GLSL3=dt,t.GreaterDepth=6,t.GreaterEqualDepth=5,t.GreaterEqualStencilFunc=518,t.GreaterStencilFunc=516,t.GridHelper=class extends Ya{constructor(t=10,e=10,i=4473924,n=8947848){i=new jt(i),n=new jt(n);const r=e/2,s=t/e,a=t/2,o=[],l=[];for(let t=0,c=0,h=-a;t<=e;t++,h+=s){o.push(-a,0,h,a,0,h),o.push(h,0,-a,h,0,a);const e=t===r?i:n;e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3,e.toArray(l,c),c+=3}const c=new Di;c.setAttribute("position",new Ti(o,3)),c.setAttribute("color",new Ti(l,3));super(c,new Fa({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}},t.Group=Vs,t.HalfFloatType=b,t.HemisphereLight=mc,t.HemisphereLightHelper=class extends si{constructor(t,e,i){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const n=new vl(e);n.rotateY(.5*Math.PI),this.material=new _i({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),s=new Float32Array(3*r.count);n.setAttribute("color",new bi(s,3)),this.add(new Ki(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");wh.copy(this.light.color),Th.copy(this.light.groundColor);for(let t=0,i=e.count;t<i;t++){const n=t<i/2?wh:Th;e.setXYZ(t,n.r,n.g,n.b)}e.needsUpdate=!0}t.lookAt(Sh.setFromMatrixPosition(this.light.matrixWorld).negate())}},t.HemisphereLightProbe=class extends Pc{constructor(t,e,i=1){super(void 0,i),this.isHemisphereLightProbe=!0;const n=(new jt).set(t),r=(new jt).set(e),s=new ne(n.r,n.g,n.b),a=new ne(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(s).sub(a).multiplyScalar(l)}},t.IcosahedronBufferGeometry=class extends gl{constructor(t,e){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(t,e)}},t.IcosahedronGeometry=gl,t.ImageBitmapLoader=class extends lc{constructor(t){super(t),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=sc.get(t);if(void 0!==s)return r.manager.itemStart(t),setTimeout((function(){e&&e(s),r.manager.itemEnd(t)}),0),s;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(t,a).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(i){sc.add(t,i),e&&e(i),r.manager.itemEnd(t)})).catch((function(e){n&&n(e),r.manager.itemError(t),r.manager.itemEnd(t)})),r.manager.itemStart(t)}},t.ImageLoader=dc,t.ImageUtils=Xt,t.ImmediateRenderObject=function(){console.error("THREE.ImmediateRenderObject has been removed.")},t.IncrementStencilOp=7682,t.IncrementWrapStencilOp=34055,t.InstancedBufferAttribute=Da,t.InstancedBufferGeometry=Nc,t.InstancedInterleavedBuffer=class extends ta{constructor(t,e,i=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}},t.InstancedMesh=Ba,t.Int16BufferAttribute=class extends bi{constructor(t,e,i){super(new Int16Array(t),e,i)}},t.Int32BufferAttribute=class extends bi{constructor(t,e,i){super(new Int32Array(t),e,i)}},t.Int8BufferAttribute=class extends bi{constructor(t,e,i){super(new Int8Array(t),e,i)}},t.IntType=1013,t.InterleavedBuffer=ta,t.InterleavedBufferAttribute=ia,t.Interpolant=jl,t.InterpolateDiscrete=$,t.InterpolateLinear=Q,t.InterpolateSmooth=tt,t.InvertStencilOp=5386,t.KeepStencilOp=ht,t.KeyframeTrack=Zl,t.LOD=Ma,t.LatheBufferGeometry=class extends Eo{constructor(t,e,i,n){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(t,e,i,n)}},t.LatheGeometry=Eo,t.Layers=je,t.LessDepth=2,t.LessEqualDepth=3,t.LessEqualStencilFunc=515,t.LessStencilFunc=513,t.Light=pc,t.LightProbe=Pc,t.Line=ja,t.Line3=class{constructor(t=new ne,e=new ne){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){gh.subVectors(t,this.start),vh.subVectors(this.end,this.start);const i=vh.dot(vh);let n=vh.dot(gh)/i;return e&&(n=yt(n,0,1)),n}closestPointToPoint(t,e,i){const n=this.closestPointToPointParameter(t,e);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}},t.LineBasicMaterial=Fa,t.LineCurve=_o,t.LineCurve3=yo,t.LineDashedMaterial=Ul,t.LineLoop=Za,t.LineSegments=Ya,t.LinearEncoding=at,t.LinearFilter=f,t.LinearInterpolant=Xl,t.LinearMipMapLinearFilter=1008,t.LinearMipMapNearestFilter=1007,t.LinearMipmapLinearFilter=v,t.LinearMipmapNearestFilter=g,t.LinearSRGBColorSpace=ct,t.LinearToneMapping=1,t.Loader=lc,t.LoaderUtils=Dc,t.LoadingManager=ac,t.LoopOnce=2200,t.LoopPingPong=2202,t.LoopRepeat=2201,t.LuminanceAlphaFormat=1025,t.LuminanceFormat=1024,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},t.Material=xi,t.MaterialLoader=Ic,t.MathUtils=Ct,t.Matrix3=Rt,t.Matrix4=Ne,t.MaxEquation=104,t.Mesh=Ki,t.MeshBasicMaterial=_i,t.MeshDepthMaterial=Os,t.MeshDistanceMaterial=zs,t.MeshLambertMaterial=Ol,t.MeshMatcapMaterial=zl,t.MeshNormalMaterial=Nl,t.MeshPhongMaterial=Il,t.MeshPhysicalMaterial=Pl,t.MeshStandardMaterial=Rl,t.MeshToonMaterial=Dl,t.MinEquation=103,t.MirroredRepeatWrapping=u,t.MixOperation=1,t.MultiplyBlending=4,t.MultiplyOperation=0,t.NearestFilter=d,t.NearestMipMapLinearFilter=1005,t.NearestMipMapNearestFilter=1004,t.NearestMipmapLinearFilter=m,t.NearestMipmapNearestFilter=p,t.NeverDepth=0,t.NeverStencilFunc=512,t.NoBlending=0,t.NoColorSpace="",t.NoToneMapping=0,t.NormalAnimationBlendMode=rt,t.NormalBlending=1,t.NotEqualDepth=7,t.NotEqualStencilFunc=517,t.NumberKeyframeTrack=$l,t.Object3D=si,t.ObjectLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=this,s=""===this.path?Dc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||s;const a=new uc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,(function(i){let s=null;try{s=JSON.parse(i)}catch(e){return void 0!==n&&n(e),void console.error("THREE:ObjectLoader: Can't parse "+t+".",e.message)}const a=s.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()?r.parse(s,e):console.error("THREE.ObjectLoader: Can't load "+t)}),i,n)}async loadAsync(t,e){const i=""===this.path?Dc.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const n=new uc(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);const r=await n.loadAsync(t,e),s=JSON.parse(r),a=s.metadata;if(void 0===a||void 0===a.type||"geometry"===a.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+t);return await this.parseAsync(s)}parse(t,e){const i=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),r=this.parseGeometries(t.geometries,n),s=this.parseImages(t.images,(function(){void 0!==e&&e(l)})),a=this.parseTextures(t.textures,s),o=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,r,o,a,i),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),void 0!==e){let t=!1;for(const e in s)if(s[e].data instanceof HTMLImageElement){t=!0;break}!1===t&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),n=this.parseGeometries(t.geometries,i),r=await this.parseImagesAsync(t.images),s=this.parseTextures(t.textures,r),a=this.parseMaterials(t.materials,s),o=this.parseObject(t.object,n,a,s,e),l=this.parseSkeletons(t.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(t){const e={};if(void 0!==t)for(let i=0,n=t.length;i<n;i++){const n=(new Fo).fromJSON(t[i]);e[n.uuid]=n}return e}parseSkeletons(t,e){const i={},n={};if(e.traverse((function(t){t.isBone&&(n[t.uuid]=t)})),void 0!==t)for(let e=0,r=t.length;e<r;e++){const r=(new Ia).fromJSON(t[e],n);i[r.uuid]=r}return i}parseGeometries(t,e){const i={};if(void 0!==t){const n=new Oc;for(let r=0,s=t.length;r<s;r++){let s;const a=t[r];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":s=n.parse(a);break;default:a.type in El?s=El[a.type].fromJSON(a,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),!0===s.isBufferGeometry&&void 0!==a.userData&&(s.userData=a.userData),i[a.uuid]=s}}return i}parseMaterials(t,e){const i={},n={};if(void 0!==t){const r=new Ic;r.setTextures(e);for(let e=0,s=t.length;e<s;e++){const s=t[e];void 0===i[s.uuid]&&(i[s.uuid]=r.parse(s)),n[s.uuid]=i[s.uuid]}}return n}parseAnimations(t){const e={};if(void 0!==t)for(let i=0;i<t.length;i++){const n=t[i],r=nc.parse(n);e[r.uuid]=r}return e}parseImages(t,e){const i=this,n={};let r;function s(t){if("string"==typeof t){const e=t;return function(t){return i.manager.itemStart(t),r.load(t,(function(){i.manager.itemEnd(t)}),void 0,(function(){i.manager.itemError(t),i.manager.itemEnd(t)}))}(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:i.resourcePath+e)}return t.data?{data:Dt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){const i=new ac(e);r=new dc(i),r.setCrossOrigin(this.crossOrigin);for(let e=0,i=t.length;e<i;e++){const i=t[e],r=i.url;if(Array.isArray(r)){const t=[];for(let e=0,i=r.length;e<i;e++){const i=s(r[e]);null!==i&&(i instanceof HTMLImageElement?t.push(i):t.push(new La(i.data,i.width,i.height)))}n[i.uuid]=new Yt(t)}else{const t=s(i.url);n[i.uuid]=new Yt(t)}}}return n}async parseImagesAsync(t){const e=this,i={};let n;async function r(t){if("string"==typeof t){const i=t,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:e.resourcePath+i;return await n.loadAsync(r)}return t.data?{data:Dt(t.type,t.data),width:t.width,height:t.height}:null}if(void 0!==t&&t.length>0){n=new dc(this.manager),n.setCrossOrigin(this.crossOrigin);for(let e=0,n=t.length;e<n;e++){const n=t[e],s=n.url;if(Array.isArray(s)){const t=[];for(let e=0,i=s.length;e<i;e++){const i=s[e],n=await r(i);null!==n&&(n instanceof HTMLImageElement?t.push(n):t.push(new La(n.data,n.width,n.height)))}i[n.uuid]=new Yt(t)}else{const t=await r(n.url);i[n.uuid]=new Yt(t)}}}return i}parseTextures(t,e){function i(t,e){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),e[t])}const n={};if(void 0!==t)for(let r=0,s=t.length;r<s;r++){const s=t[r];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===e[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);const a=e[s.image],o=a.data;let l;Array.isArray(o)?(l=new cn,6===o.length&&(l.needsUpdate=!0)):(l=o&&o.data?new La:new Kt,o&&(l.needsUpdate=!0)),l.source=a,l.uuid=s.uuid,void 0!==s.name&&(l.name=s.name),void 0!==s.mapping&&(l.mapping=i(s.mapping,zc)),void 0!==s.offset&&l.offset.fromArray(s.offset),void 0!==s.repeat&&l.repeat.fromArray(s.repeat),void 0!==s.center&&l.center.fromArray(s.center),void 0!==s.rotation&&(l.rotation=s.rotation),void 0!==s.wrap&&(l.wrapS=i(s.wrap[0],Uc),l.wrapT=i(s.wrap[1],Uc)),void 0!==s.format&&(l.format=s.format),void 0!==s.type&&(l.type=s.type),void 0!==s.encoding&&(l.encoding=s.encoding),void 0!==s.minFilter&&(l.minFilter=i(s.minFilter,Bc)),void 0!==s.magFilter&&(l.magFilter=i(s.magFilter,Bc)),void 0!==s.anisotropy&&(l.anisotropy=s.anisotropy),void 0!==s.flipY&&(l.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(l.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(l.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(l.userData=s.userData),n[s.uuid]=l}return n}parseObject(t,e,i,n,r){let s,a,o;function l(t){return void 0===e[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),e[t]}function c(t){if(void 0!==t){if(Array.isArray(t)){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];void 0===i[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),e.push(i[r])}return e}return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}}function h(t){return void 0===n[t]&&console.warn("THREE.ObjectLoader: Undefined texture",t),n[t]}switch(t.type){case"Scene":s=new Qs,void 0!==t.background&&(Number.isInteger(t.background)?s.background=new jt(t.background):s.background=h(t.background)),void 0!==t.environment&&(s.environment=h(t.environment)),void 0!==t.fog&&("Fog"===t.fog.type?s.fog=new $s(t.fog.color,t.fog.near,t.fog.far):"FogExp2"===t.fog.type&&(s.fog=new Ks(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":s=new an(t.fov,t.aspect,t.near,t.far),void 0!==t.focus&&(s.focus=t.focus),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.filmGauge&&(s.filmGauge=t.filmGauge),void 0!==t.filmOffset&&(s.filmOffset=t.filmOffset),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"OrthographicCamera":s=new Rn(t.left,t.right,t.top,t.bottom,t.near,t.far),void 0!==t.zoom&&(s.zoom=t.zoom),void 0!==t.view&&(s.view=Object.assign({},t.view));break;case"AmbientLight":s=new Cc(t.color,t.intensity);break;case"DirectionalLight":s=new Ec(t.color,t.intensity);break;case"PointLight":s=new Tc(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":s=new Lc(t.color,t.intensity,t.width,t.height);break;case"SpotLight":s=new yc(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":s=new mc(t.color,t.groundColor,t.intensity);break;case"LightProbe":s=(new Pc).fromJSON(t);break;case"SkinnedMesh":a=l(t.geometry),o=c(t.material),s=new Ea(a,o),void 0!==t.bindMode&&(s.bindMode=t.bindMode),void 0!==t.bindMatrix&&s.bindMatrix.fromArray(t.bindMatrix),void 0!==t.skeleton&&(s.skeleton=t.skeleton);break;case"Mesh":a=l(t.geometry),o=c(t.material),s=new Ki(a,o);break;case"InstancedMesh":a=l(t.geometry),o=c(t.material);const e=t.count,i=t.instanceMatrix,n=t.instanceColor;s=new Ba(a,o,e),s.instanceMatrix=new Da(new Float32Array(i.array),16),void 0!==n&&(s.instanceColor=new Da(new Float32Array(n.array),n.itemSize));break;case"LOD":s=new Ma;break;case"Line":s=new ja(l(t.geometry),c(t.material));break;case"LineLoop":s=new Za(l(t.geometry),c(t.material));break;case"LineSegments":s=new Ya(l(t.geometry),c(t.material));break;case"PointCloud":case"Points":s=new eo(l(t.geometry),c(t.material));break;case"Sprite":s=new va(c(t.material));break;case"Group":s=new Vs;break;case"Bone":s=new Ca;break;default:s=new si}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(s.matrix.fromArray(t.matrix),void 0!==t.matrixAutoUpdate&&(s.matrixAutoUpdate=t.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.quaternion&&s.quaternion.fromArray(t.quaternion),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),t.shadow&&(void 0!==t.shadow.bias&&(s.shadow.bias=t.shadow.bias),void 0!==t.shadow.normalBias&&(s.shadow.normalBias=t.shadow.normalBias),void 0!==t.shadow.radius&&(s.shadow.radius=t.shadow.radius),void 0!==t.shadow.mapSize&&s.shadow.mapSize.fromArray(t.shadow.mapSize),void 0!==t.shadow.camera&&(s.shadow.camera=this.parseObject(t.shadow.camera))),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.frustumCulled&&(s.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(s.renderOrder=t.renderOrder),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.layers&&(s.layers.mask=t.layers),void 0!==t.children){const a=t.children;for(let t=0;t<a.length;t++)s.add(this.parseObject(a[t],e,i,n,r))}if(void 0!==t.animations){const e=t.animations;for(let t=0;t<e.length;t++){const i=e[t];s.animations.push(r[i])}}if("LOD"===t.type){void 0!==t.autoUpdate&&(s.autoUpdate=t.autoUpdate);const e=t.levels;for(let t=0;t<e.length;t++){const i=e[t],n=s.getObjectByProperty("uuid",i.object);void 0!==n&&s.addLevel(n,i.distance)}}return s}bindSkeletons(t,e){0!==Object.keys(e).length&&t.traverse((function(t){if(!0===t.isSkinnedMesh&&void 0!==t.skeleton){const i=e[t.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",t.skeleton):t.bind(i,t.bindMatrix)}}))}},t.ObjectSpaceNormalMap=1,t.OctahedronBufferGeometry=class extends vl{constructor(t,e){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(t,e)}},t.OctahedronGeometry=vl,t.OneFactor=201,t.OneMinusDstAlphaFactor=207,t.OneMinusDstColorFactor=209,t.OneMinusSrcAlphaFactor=205,t.OneMinusSrcColorFactor=203,t.OrthographicCamera=Rn,t.PCFShadowMap=1,t.PCFSoftShadowMap=2,t.PMREMGenerator=Fn,t.Path=Ao,t.PerspectiveCamera=an,t.Plane=mn,t.PlaneBufferGeometry=class extends yn{constructor(t,e,i,n){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(t,e,i,n)}},t.PlaneGeometry=yn,t.PlaneHelper=class extends ja{constructor(t,e=1,i=16776960){const n=i,r=new Di;r.setAttribute("position",new Ti([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),r.computeBoundingSphere(),super(r,new Fa({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const s=new Di;s.setAttribute("position",new Ti([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),s.computeBoundingSphere(),this.add(new Ki(s,new _i({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}},t.PointLight=Tc,t.PointLightHelper=class extends Ki{constructor(t,e,i){super(new yl(e,4,2),new _i({wireframe:!0,fog:!1,toneMapped:!1})),this.light=t,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},t.Points=eo,t.PointsMaterial=Ja,t.PolarGridHelper=class extends Ya{constructor(t=10,e=16,i=8,n=64,r=4473924,s=8947848){r=new jt(r),s=new jt(s);const a=[],o=[];if(e>1)for(let i=0;i<e;i++){const n=i/e*(2*Math.PI),l=Math.sin(n)*t,c=Math.cos(n)*t;a.push(0,0,0),a.push(l,0,c);const h=1&i?r:s;o.push(h.r,h.g,h.b),o.push(h.r,h.g,h.b)}for(let e=0;e<i;e++){const l=1&e?r:s,c=t-t/i*e;for(let t=0;t<n;t++){let e=t/n*(2*Math.PI),i=Math.sin(e)*c,r=Math.cos(e)*c;a.push(i,0,r),o.push(l.r,l.g,l.b),e=(t+1)/n*(2*Math.PI),i=Math.sin(e)*c,r=Math.cos(e)*c,a.push(i,0,r),o.push(l.r,l.g,l.b)}}const l=new Di;l.setAttribute("position",new Ti(a,3)),l.setAttribute("color",new Ti(o,3));super(l,new Fa({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}},t.PolyhedronBufferGeometry=class extends Io{constructor(t,e,i,n){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(t,e,i,n)}},t.PolyhedronGeometry=Io,t.PositionalAudio=class extends Jc{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(Kc,$c,Qc),th.set(0,0,1).applyQuaternion($c);const e=this.panner;if(e.positionX){const t=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Kc.x,t),e.positionY.linearRampToValueAtTime(Kc.y,t),e.positionZ.linearRampToValueAtTime(Kc.z,t),e.orientationX.linearRampToValueAtTime(th.x,t),e.orientationY.linearRampToValueAtTime(th.y,t),e.orientationZ.linearRampToValueAtTime(th.z,t)}else e.setPosition(Kc.x,Kc.y,Kc.z),e.setOrientation(th.x,th.y,th.z)}},t.PropertyBinding=lh,t.PropertyMixer=eh,t.QuadraticBezierCurve=Mo,t.QuadraticBezierCurve3=bo,t.Quaternion=ie,t.QuaternionKeyframeTrack=tc,t.QuaternionLinearInterpolant=Ql,t.REVISION=e,t.RGBADepthPacking=3201,t.RGBAFormat=w,t.RGBAIntegerFormat=1033,t.RGBA_ASTC_10x10_Format=Y,t.RGBA_ASTC_10x5_Format=j,t.RGBA_ASTC_10x6_Format=q,t.RGBA_ASTC_10x8_Format=X,t.RGBA_ASTC_12x10_Format=Z,t.RGBA_ASTC_12x12_Format=J,t.RGBA_ASTC_4x4_Format=U,t.RGBA_ASTC_5x4_Format=B,t.RGBA_ASTC_5x5_Format=F,t.RGBA_ASTC_6x5_Format=k,t.RGBA_ASTC_6x6_Format=G,t.RGBA_ASTC_8x5_Format=V,t.RGBA_ASTC_8x6_Format=H,t.RGBA_ASTC_8x8_Format=W,t.RGBA_BPTC_Format=K,t.RGBA_ETC2_EAC_Format=z,t.RGBA_PVRTC_2BPPV1_Format=N,t.RGBA_PVRTC_4BPPV1_Format=D,t.RGBA_S3TC_DXT1_Format=C,t.RGBA_S3TC_DXT3_Format=L,t.RGBA_S3TC_DXT5_Format=R,t.RGBFormat=1022,t.RGB_ETC1_Format=36196,t.RGB_ETC2_Format=O,t.RGB_PVRTC_2BPPV1_Format=I,t.RGB_PVRTC_4BPPV1_Format=P,t.RGB_S3TC_DXT1_Format=E,t.RGFormat=1030,t.RGIntegerFormat=1031,t.RawShaderMaterial=Ll,t.Ray=De,t.Raycaster=class{constructor(t,e,i=0,n=1/0){this.ray=new De(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new je,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,i=[]){return mh(t,this,i,e),i.sort(ph),i}intersectObjects(t,e=!0,i=[]){for(let n=0,r=t.length;n<r;n++)mh(t[n],this,i,e);return i.sort(ph),i}},t.RectAreaLight=Lc,t.RedFormat=1028,t.RedIntegerFormat=1029,t.ReinhardToneMapping=2,t.RepeatWrapping=c,t.ReplaceStencilOp=7681,t.ReverseSubtractEquation=102,t.RingBufferGeometry=class extends xl{constructor(t,e,i,n,r,s){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(t,e,i,n,r,s)}},t.RingGeometry=xl,t.SRGBColorSpace=lt,t.Scene=Qs,t.ShaderChunk=Mn,t.ShaderLib=Sn,t.ShaderMaterial=rn,t.ShadowMaterial=Cl,t.Shape=Fo,t.ShapeBufferGeometry=class extends _l{constructor(t,e){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(t,e)}},t.ShapeGeometry=_l,t.ShapePath=class{constructor(){this.type="ShapePath",this.color=new jt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Ao,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this}bezierCurveTo(t,e,i,n,r,s){return this.currentPath.bezierCurveTo(t,e,i,n,r,s),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const i=e.length;let n=!1;for(let r=i-1,s=0;s<i;r=s++){let i=e[r],a=e[s],o=a.x-i.x,l=a.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=e[s],o=-o,a=e[r],l=-l),t.y<i.y||t.y>a.y)continue;if(t.y===i.y){if(t.x===i.x)return!0}else{const e=l*(t.x-i.x)-o*(t.y-i.y);if(0===e)return!0;if(e<0)continue;n=!n}}else{if(t.y!==i.y)continue;if(a.x<=t.x&&t.x<=i.x||i.x<=t.x&&t.x<=a.x)return!0}}return n}const i=ul.isClockWise,n=this.subPaths;if(0===n.length)return[];let r,s,a;const o=[];if(1===n.length)return s=n[0],a=new Fo,a.curves=s.curves,o.push(a),o;let l=!i(n[0].getPoints());l=t?!l:l;const c=[],h=[];let u,d,p=[],m=0;h[m]=void 0,p[m]=[];for(let e=0,a=n.length;e<a;e++)s=n[e],u=s.getPoints(),r=i(u),r=t?!r:r,r?(!l&&h[m]&&m++,h[m]={s:new Fo,p:u},h[m].s.curves=s.curves,l&&m++,p[m]=[]):p[m].push({h:s,p:u[0]});if(!h[0])return function(t){const e=[];for(let i=0,n=t.length;i<n;i++){const n=t[i],r=new Fo;r.curves=n.curves,e.push(r)}return e}(n);if(h.length>1){let t=!1,i=0;for(let t=0,e=h.length;t<e;t++)c[t]=[];for(let n=0,r=h.length;n<r;n++){const r=p[n];for(let s=0;s<r.length;s++){const a=r[s];let o=!0;for(let r=0;r<h.length;r++)e(a.p,h[r].p)&&(n!==r&&i++,o?(o=!1,c[r].push(a)):t=!0);o&&c[n].push(a)}}i>0&&!1===t&&(p=c)}for(let t=0,e=h.length;t<e;t++){a=h[t].s,o.push(a),d=p[t];for(let t=0,e=d.length;t<e;t++)a.holes.push(d[t].h)}return o}},t.ShapeUtils=ul,t.ShortType=1011,t.Skeleton=Ia,t.SkeletonHelper=class extends Ya{constructor(t){const e=bh(t),i=new Di,n=[],r=[],s=new jt(0,0,1),a=new jt(0,1,0);for(let t=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(a.r,a.g,a.b))}i.setAttribute("position",new Ti(n,3)),i.setAttribute("color",new Ti(r,3));super(i,new Fa({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,i=this.geometry,n=i.getAttribute("position");Mh.copy(this.root.matrixWorld).invert();for(let t=0,i=0;t<e.length;t++){const r=e[t];r.parent&&r.parent.isBone&&(yh.multiplyMatrices(Mh,r.matrixWorld),_h.setFromMatrixPosition(yh),n.setXYZ(i,_h.x,_h.y,_h.z),yh.multiplyMatrices(Mh,r.parent.matrixWorld),_h.setFromMatrixPosition(yh),n.setXYZ(i+1,_h.x,_h.y,_h.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}},t.SkinnedMesh=Ea,t.Source=Yt,t.Sphere=Te,t.SphereBufferGeometry=class extends yl{constructor(t,e,i,n,r,s,a){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(t,e,i,n,r,s,a)}},t.SphereGeometry=yl,t.Spherical=class{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){const t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(yt(e/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},t.SphericalHarmonics3=Rc,t.SplineCurve=So,t.SpotLight=yc,t.SpotLightHelper=class extends si{constructor(t,e){super(),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;const i=new Di,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let t=0,e=1,i=32;t<i;t++,e++){const r=t/i*Math.PI*2,s=e/i*Math.PI*2;n.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}i.setAttribute("position",new Ti(n,3));const r=new Fa({fog:!1,toneMapped:!1});this.cone=new Ya(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),xh.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(xh),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},t.Sprite=va,t.SpriteMaterial=na,t.SrcAlphaFactor=204,t.SrcAlphaSaturateFactor=210,t.SrcColorFactor=202,t.StaticCopyUsage=35046,t.StaticDrawUsage=ut,t.StaticReadUsage=35045,t.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new an,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new an,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Hc.copy(t.projectionMatrix);const i=e.eyeSep/2,n=i*e.near/e.focus,r=e.near*Math.tan(vt*e.fov*.5)/e.zoom;let s,a;Vc.elements[12]=-i,Gc.elements[12]=i,s=-r*e.aspect+n,a=r*e.aspect+n,Hc.elements[0]=2*e.near/(a-s),Hc.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(Hc),s=-r*e.aspect-n,a=r*e.aspect-n,Hc.elements[0]=2*e.near/(a-s),Hc.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(Hc)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Vc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Gc)}},t.StreamCopyUsage=35042,t.StreamDrawUsage=35040,t.StreamReadUsage=35041,t.StringKeyframeTrack=ec,t.SubtractEquation=101,t.SubtractiveBlending=3,t.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},t.TangentSpaceNormalMap=0,t.TetrahedronBufferGeometry=class extends Ml{constructor(t,e){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(t,e)}},t.TetrahedronGeometry=Ml,t.Texture=Kt,t.TextureLoader=class extends lc{constructor(t){super(t)}load(t,e,i,n){const r=new Kt,s=new dc(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),i,n),r}},t.TorusBufferGeometry=class extends bl{constructor(t,e,i,n,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(t,e,i,n,r)}},t.TorusGeometry=bl,t.TorusKnotBufferGeometry=class extends Sl{constructor(t,e,i,n,r,s){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(t,e,i,n,r,s)}},t.TorusKnotGeometry=Sl,t.Triangle=gi,t.TriangleFanDrawMode=2,t.TriangleStripDrawMode=1,t.TrianglesDrawMode=0,t.TubeBufferGeometry=class extends wl{constructor(t,e,i,n,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(t,e,i,n,r)}},t.TubeGeometry=wl,t.UVMapping=n,t.Uint16BufferAttribute=Si,t.Uint32BufferAttribute=wi,t.Uint8BufferAttribute=class extends bi{constructor(t,e,i){super(new Uint8Array(t),e,i)}},t.Uint8ClampedBufferAttribute=class extends bi{constructor(t,e,i){super(new Uint8ClampedArray(t),e,i)}},t.Uniform=uh,t.UniformsGroup=class extends mt{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:dh++}),this.name="",this.usage=ut,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return-1!==e&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let t=0,i=e.length;t<i;t++)this.uniforms.push(e[t].clone());return this}clone(){return(new this.constructor).copy(this)}},t.UniformsLib=bn,t.UniformsUtils=nn,t.UnsignedByteType=x,t.UnsignedInt248Type=S,t.UnsignedIntType=y,t.UnsignedShort4444Type=1017,t.UnsignedShort5551Type=1018,t.UnsignedShortType=_,t.VSMShadowMap=3,t.Vector2=Lt,t.Vector3=ne,t.Vector4=$t,t.VectorKeyframeTrack=ic,t.VideoTexture=class extends Kt{constructor(t,e,i,n,r,s,a,o,l){super(t,e,i,n,r,s,a,o,l),this.isVideoTexture=!0,this.minFilter=void 0!==s?s:f,this.magFilter=void 0!==r?r:f,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;!1==="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}},t.WebGL1Renderer=Js,t.WebGL3DRenderTarget=class extends Qt{constructor(t,e,i){super(t,e),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new ee(null,t,e,i),this.texture.isRenderTargetTexture=!0}},t.WebGLArrayRenderTarget=class extends Qt{constructor(t,e,i){super(t,e),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new te(null,t,e,i),this.texture.isRenderTargetTexture=!0}},t.WebGLCubeRenderTarget=hn,t.WebGLMultipleRenderTargets=class extends Qt{constructor(t,e,i,n={}){super(t,e,n),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let t=0;t<i;t++)this.texture[t]=r.clone(),this.texture[t].isRenderTargetTexture=!0}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,r=this.texture.length;n<r;n++)this.texture[n].image.width=t,this.texture[n].image.height=e,this.texture[n].image.depth=i;this.dispose()}return this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e),this}copy(t){this.dispose(),this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.texture.length=0;for(let e=0,i=t.texture.length;e<i;e++)this.texture[e]=t.texture[e].clone(),this.texture[e].isRenderTargetTexture=!0;return this}},t.WebGLMultisampleRenderTarget=class extends Qt{constructor(t,e,i){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(t,e,i),this.samples=4}},t.WebGLRenderTarget=Qt,t.WebGLRenderer=Zs,t.WebGLUtils=ks,t.WireframeGeometry=Tl,t.WrapAroundEnding=nt,t.ZeroCurvatureEnding=et,t.ZeroFactor=200,t.ZeroSlopeEnding=it,t.ZeroStencilOp=0,t._SRGBAFormat=pt,t.sRGBEncoding=ot,Object.defineProperty(t,"__esModule",{value:!0})}));</script><script>DEBUG_UPDATE_SOURCE="random",tokenHash=(new Date).getTime();const cameraType="perspective",cameraX=0,cameraY=0,cameraZ=45,cameraNear=.1,cameraFar=1e4,fieldOfView=75,cameraAspect=2,cameraDepth=1,orthographicCameraScale=40,rendererAntialias=!1,rendererWidth=1500,rendererHeight=1080,rendererToneMapping="LinearToneMapping",enableAnimation=!0,enableConeRotationZ=!1,animationFPS=130,enableShadows=!0;let enableFog=!1,fogColor="#ff8080";const fogNear=50,fogFar=51,enableWorldGradient=!0,worldGradientType="radial";let worldGradientColors=[[.2,"#333399"],[1,"#ff8080"]];const enableWorldGradientAnimation=!0,worldGradientAnimationSpeed=[1e-4,.001,1e-4],worldGradientAnimationScale=[0,3,.1];tiersStructure={royalty:[.55,.7,.85,1,1.15,1.3,1.45],contract:[.55,.7,.85,1,1.15,1.3,1.45],sends:[.55,.7,.85,1,1.15,1.3,1.45],approvals:[.55,.7,.85,1,1.15,1.3,1.45]},dynamicUpdateAnimationSpeeds={axisAngle:{speed:.001,curve:.3},axisExtremeAngle:{speed:5e-4,curve:.3},axisPosition:{speed:.01,curve:.3},objectRotationSpeed:{speed:.001,curve:.3},objectPosition:{speed:.01,curve:.4},gradientScale:{speed:.001,curve:.3},objectRotationSpeed2:{speed:[.005,.01,.01]},cameraPosition:{speed:.01,curve:.3},axisRotationDirection:{speed:.08,curve:.3},objectAppearAndDisappear:{speed:.001,curve:.3},axisAppearAndDisappear:{speed:.001,curve:.1},fog:{speed:.5}},spinningObjectsRange=[3,10,1],durationOfTimeBasedUpdates=1,materialTemplates={material1:["#FF0000",100,!1,!0,["simple"],"simple",!1,"#00FFFF",[0,0],0,[0,0],220,1,[64,64],[3,3],!1,0],splatterTransparent:["#ffff00",100,!1,!0,["splatter"],"simple",!0,"#00FF00",[.4,.5],180,[0,0],220,1,[64,64],[3,3],!1,0],splatterTransparent2:["#ffff00",100,!1,!0,["splatter"],"simple",!0,"#00FF00",[.4,.5],90,[0,0],220,1,[64,64],[3,3],!1,0],paper1squiggle1:["#ffff00",100,!1,!0,["squiggle1"],"simple",!1,"#00FF00",[1.5,1.5],45,[.5,.5],220,1,[64,64],[3,3],!1,0],paper1squiggle2:["#ffff00",100,!1,!0,["squiggle2"],"simple",!1,"#00FF00",[2,2],45,[.5,.5],220,1,[64,64],[3,3],!1,0],paper1splatter:["#ffff00",100,!1,!0,["splatter"],"simple",!1,"#00FF00",[1.5,1.5],180,[.5,1],220,1,[64,64],[3,3],!1,0],paper1arrow:["#ffff00",100,!1,!0,["arrow"],"simple",!1,"#00FF00",[2,2],180,[.5,.5],220,1,[64,64],[3,3],!1,0],paper1spraystroke:["#ffff00",100,!1,!0,["spraystroke"],"simple",!1,"#00FF00",[3,3],180,[0,0],220,1,[64,64],[3,3],!1,0],paper1splatterTransparent:["#ffff00",100,!1,!0,["splatter"],"simple",!0,"#00FF00",[.3,.3],0,[0,0],220,1,[64,64],[3,3],!1,0],paper1squiggle2Transparent:["#ffff00",100,!1,!0,["squiggle2"],"simple",!0,"#00FF00",[2.5,2.5],90,[50,50],220,1,[64,64],[3,3],!1,0],rectanglesquiggle1:["#ffff00",100,!1,!0,["squiggle1"],"simple",!1,"#00FF00",[.1,.1],70,[.6,.5],220,1,[64,64],[3,3],!1,0],rectanglesquiggle2:["#ffff00",100,!1,!0,["squiggle2"],"simple",!1,"#00FF00",[.15,.15],50,[.4,.6],220,1,[64,64],[3,3],!1,0],rectanglesplatter:["#ffff00",100,!1,!0,["splatter"],"simple",!1,"#00FF00",[.16,.16],90,[0,1],220,1,[64,64],[3,3],!1,0],rectanglecircle:["#ffff00",100,!1,!0,["circle"],"simple",!1,"#00FF00",[.135,.135],90,[.5,.5],220,1,[64,64],[3,3],!1,0],circle:["#ffff00",100,!1,!0,["circle"],"simple",!1,"#00FF00",[1,1],90,[.5,.5],220,1,[64,64],[3,3],!1,0],rectanglearrow:["#ffff00",100,!1,!0,["arrow"],"simple",!1,"#00FF00",[.13,.13],0,[0,1],220,1,[64,64],[3,3],!1,0],rectanglespraystroke:["#ffff00",100,!1,!0,["spraystroke"],"simple",!1,"#00FF00",[.14,.14],0,[.2,.5],220,1,[64,64],[3,3],!1,0],rectanglespraydrip:["#ffff00",100,!1,!0,["spraydrip"],"simple",!1,"#00FF00",[.1,.1],0,[.7,0],220,1,[64,64],[3,3],!1,0],transparentcircle:["#ffff00",100,!1,!0,["circle"],"simple",!0,"#00FF00",[2,2],90,[0,.5],220,1,[64,64],[3,3],!1,0],body1:["#ffff00",100,!1,!0,["body"],"simple",!1,"#00FF00",[.13,.13],90,[.5,.5,0],220,1,[64,64],[3,3],!1,0],bodytransparent:["#ffff00",100,!1,!0,["body"],"simple",!0,"#00FF00",[1.5,1.5],90,[.5,.5,0],220,1,[64,64],[3,3],!1,0],bump:["#ffff00",100,!1,!0,["simple"],"simple",!1,"#00FF00",[1,1],0,[0,0],220,1,[240,240],[10,10],!0,1],conematerial1:["#00FF00",100,!0,!1,[],"simple",!1,"#00FFFF",[0,0],0,[0,0],220,1,[64,64],[3,3],!1,0],conematerial2:["#FF0000",100,!1,!1,[],"simple",!1,"#00FFFF",[0,0],0,[0,0],220,1,[64,64],[3,3],!1,0],conematerial3:["#0000FF",100,!1,!1,[],"simple",!1,"#00FFFF",[0,0],0,[0,0],220,1,[64,64],[3,3],!1,0],conematerial2Transparent:["#000000",100,!1,!0,["spraystroke","splatter","spraydrip"],"simple",!0,"#00FF00",[.5,.5],0,[0,0],220,1,[64,64],[3,3],!1,0],conematerial3Transparent:["#0000FF",100,!1,!0,["spraystroke","splatter","spraydrip"],"simple",!0,"#00FF00",[0,0],0,[0,0],220,1,[64,64],[3,3],!1,0]},extraShapes={terrain:{material:[[1,"bump"]],axis:[1],probability:1,numberOfShapes:[2,3],worldSizeX:30,worldSizeY:20,heightScale:[.01,.3,.01],scale:[.001,.002,.001],rotationX:[0,0,0],rotationY:[0,0,0],rotationZ:[0,0,0],positionX:[0,0,.1],positionY:[-5,0,.1],positionZ:[0,0,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1]},paper1:{material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bodytransparent"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"],[.1,"paper1arrow"],[.1,"paper1spraystroke"],[.1,"paper1splatterTransparent"],[.1,"paper1squiggle2Transparent"]],axis:[2],probability:1,numberOfShapes:[2,10],scale:[33,33,33],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-10,5,.1],positionY:[0,5,.1],positionZ:[-10,5,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1]},stone2:{material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bodytransparent"],[.1,"bump"],[.1,"splatterTransparent2"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"],[.1,"paper1arrow"]],axis:[3],probability:.3,numberOfShapes:[5,10],scale:[1,1,1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-30,30,.1],positionY:[-10,10,.1],positionZ:[-20,20,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1],width:[2,2,1],height:[4,4,1],thickness:[.5,.5,1],depth:[1,1,1]},rectangle:{material:[[.1,"rectanglecircle"],[.1,"body1"],[.1,"rectanglesquiggle1"],[.1,"rectanglesquiggle2"],[.16,"rectanglesplatter"],[.16,"rectanglearrow"],[.1,"rectanglespraystroke"],[.1,"rectanglespraydrip"]],axis:[1],probability:.3,numberOfShapes:[2,4],scale:[.5,.7,.1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[0,10,.1],positionY:[0,10,.1],positionZ:[0,10,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1],width:[2,2,1],height:[4,4,1],depth:[.03,.15,.01]},knot:{material:[[1,"material1"]],axis:[1],probability:.5,numberOfShapes:[10,20],scale:[.1,5,.1],rotationX:[0,0,1],rotationY:[0,0,1],rotationZ:[0,0,1],positionX:[-2,2,.1],positionY:[-2,2,.1],positionZ:[-7,7,.1],scaleX:[0,0,1],scaleY:[0,0,1],scaleZ:[0,0,1],radius:[.1,5,.1],tube:[.03,.1,.001],tubularSegments:[3,7,1],radialSegments:[5,5,1],p:[.1,1,.1],q:[1,5,.1]},recycle:{material:[[.1,"circle"],[.1,"material1"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"]],axis:[5],probability:.2,numberOfShapes:[5,10],scale:[.2,.4,.1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-30,30,.1],positionY:[10,0,.1],positionZ:[-30,30,.1],scaleX:[.1,.1,.1],scaleY:[.1,.1,.1],scaleZ:[.1,.1,.1],width:[1,1,1],height:[2,2,1],thickness:[.2,.2,1],depth:[.1,.1,1]},grass1:{material:[[.1,"circle"],[.1,"bump"],[.1,"paper1squiggle2"]],axis:[2],probability:1,numberOfShapes:[5,10],scale:[.1,.5,.1],rotationX:[90,90,10],rotationY:[0,0,10],rotationZ:[0,0,0],positionX:[-20,20,.1],positionY:[0,10,.1],positionZ:[-20,30,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1]},flower1:{material:[[.1,"material1"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"]],axis:[3],probability:.5,color:"#002db3",secondColor:"#00FF00",numberOfShapes:[5,10],scale:[5,10,1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-20,20,.1],positionY:[0,10,.1],positionZ:[-20,20,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1],width:[2,2,1],height:[4,4,1],thickness:[.5,.5,1],depth:[1,1,1]},heart:{material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bodytransparent"],[.1,"bump"],[.1,"splatterTransparent"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle1"]],axis:[4],probability:.2,numberOfShapes:[5,10],scale:[.01,.02,.01],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-30,30,.1],positionY:[-10,-10,.1],positionZ:[-20,20,.1],scaleX:[.1,.1,.1],scaleY:[.1,.1,.1],scaleZ:[.1,.1,.1],width:[1,1,1],height:[2,2,1],thickness:[.2,.2,1],depth:[.1,.1,1]},pointer:{material:[[.1,"circle"],[.1,"material1"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle2"]],axis:[5],probability:1,color:"#ffff99",numberOfShapes:[5,10],scale:[.01,.02,.01],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-30,30,.1],positionY:[0,10,.1],positionZ:[-20,20,.1],scaleX:[.1,.1,.1],scaleY:[.1,.1,.1],scaleZ:[.1,.1,.1],width:[1,1,1],height:[2,2,1],thickness:[.2,.2,1],depth:[.1,.1,1]},speech:{material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bodytransparent"],[.1,"bump"],[.1,"splatterTransparent"],[.1,"paper1squiggle2Transparent"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"]],axis:[3],probability:.3,numberOfShapes:[2,5],scale:[.5,.5,.1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[-30,30,.1],positionY:[-10,10,.1],positionZ:[-20,20,.1],scaleX:[.1,.1,.1],scaleY:[.1,.1,.1],scaleZ:[.1,.1,.1]},stone4:{material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bump"],[.1,"paper1squiggle1"],[.1,"paper1squiggle2"],[.1,"paper1splatter"]],axis:[2],probability:.5,numberOfShapes:[1,3],scale:[1,1,1],rotationX:[0,180,10],rotationY:[0,180,10],rotationZ:[90,90,0],positionX:[0,10,.1],positionY:[0,10,.1],positionZ:[0,10,.1],scaleX:[1,1,1],scaleY:[1,1,1],scaleZ:[1,1,1],width:[2,2,1],height:[4,4,1],depth:[.03,.15,.01]},cone1:{cone:!0,material:[[.1,"circle"],[.1,"transparentcircle"],[.3,"bodytransparent"],[.3,"bump"],[.3,"splatterTransparent"],[.3,"paper1squiggle2Transparent"],[.2,"paper1squiggle1"],[.2,"paper1squiggle2"],[.2,"paper1splatter"]],wireframeProbability:.2,axis:[1,2,5,6,7],probability:.9,numberOfShapes:[20,40],numberOfRadialSegments:20,numberOfHeightSegments:20,radius:[.2,1,.1],height:[1,5,.1],openEnded:!1,scale:[.5,1,.1],rotationX:[0,0,0],rotationY:[0,0,0],rotationZ:[0,0,0],positionX:[0,5,.1],positionY:[-5,5,.1],positionZ:[0,5,.1],scaleX:[.3,1.2,.3],scaleY:[.1,2,.3],scaleZ:[1,2,.3],types:[{defaultCone:1,probability:1},{curveBaseCone:1,probability:0,baseCurveFactor:.1},{slantCone:1,probability:0},{hookCone:1,probability:0,hookPosFactor:2,hookFactor:.9},{sideBaseCutCone:1,probability:0,sideBaseCutFactor:8.5},{bendCone:1,probability:0,bendFactor:3},{extremeSlantCone:1,probability:0,slantConeExtremeFactor:1.01},{bulgyCone:1,probability:0,bulgyFactorX:.3,bulgyFactorZ:.5,bulgyFactorY:.96},{specialCone1:1,probability:0},{specialCone2:1,probability:0}]},cone2:{cone:!0,material:[[.1,"circle"],[.1,"transparentcircle"],[.2,"bodytransparent"],[.2,"paper1squiggle2Transparent"],[.2,"bump"],[.2,"paper1squiggle1"],[.2,"paper1squiggle2"],[.2,"paper1splatter"],[.2,"paper1arrow"]],wireframeProbability:.2,axis:[2,3,4,6,7],probability:.6,numberOfShapes:[30,60],numberOfRadialSegments:20,numberOfHeightSegments:20,radius:[.1,1,.01],height:[.3,1,.1],openEnded:!1,scale:[.1,1,.1],rotationX:[0,45,5],rotationY:[0,180,20],rotationZ:[0,180,20],positionX:[-10,0,.1],positionY:[-5,2,.1],positionZ:[-1,1,.1],scaleX:[1,1.5,.3],scaleY:[.5,1.5,.3],scaleZ:[1,1.5,.3],types:[{defaultCone:1,probability:1},{curveBaseCone:1,probability:0,baseCurveFactor:.1},{slantCone:1,probability:0},{hookCone:1,probability:0,hookPosFactor:2,hookFactor:.9},{sideBaseCutCone:1,probability:0,sideBaseCutFactor:8.5},{bendCone:1,probability:0,bendFactor:3},{extremeSlantCone:1,probability:0,slantConeExtremeFactor:1.01},{bulgyCone:1,probability:0,bulgyFactorX:.3,bulgyFactorZ:.5,bulgyFactorY:.96},{specialCone1:1,probability:0},{specialCone2:1,probability:0}]},cone3:{cone:!0,material:[[.1,"circle"],[.1,"transparentcircle"],[.2,"bodytransparent"],[.2,"paper1squiggle2Transparent"],[.2,"bump"],[.2,"paper1squiggle1"],[.2,"paper1squiggle2"],[.2,"paper1splatter"],[.2,"paper1arrow"]],wireframeProbability:.2,axis:[1,4,5,6,7],probability:.5,numberOfShapes:[20,40],numberOfRadialSegments:20,numberOfHeightSegments:20,radius:[.1,1,.01],height:[.3,1,.1],openEnded:!1,scale:[.1,1,.1],rotationX:[0,0,0],rotationY:[0,0,0],rotationZ:[0,0,0],positionX:[5,15,.1],positionY:[-10,0,.1],positionZ:[-5,5,.1],scaleX:[.5,1,.5],scaleY:[.5,1.5,.5],scaleZ:[.5,1.5,.5],types:[{defaultCone:1,probability:1},{curveBaseCone:1,probability:0,baseCurveFactor:.1},{slantCone:1,probability:0},{hookCone:1,probability:0,hookPosFactor:2,hookFactor:.9},{sideBaseCutCone:1,probability:0,sideBaseCutFactor:8.5},{bendCone:1,probability:0,bendFactor:3},{extremeSlantCone:1,probability:0,slantConeExtremeFactor:1.01},{bulgyCone:1,probability:0,bulgyFactorX:.3,bulgyFactorZ:.5,bulgyFactorY:.96},{specialCone1:1,probability:0},{specialCone2:1,probability:0}]},cone4:{cone:!0,material:[[.1,"circle"],[.3,"transparentcircle"],[.3,"bump"],[.3,"bodytransparent"],[.3,"paper1squiggle2Transparent"],[.3,"splatterTransparent"],[.2,"paper1squiggle1"],[.2,"paper1squiggle2"],[.2,"paper1splatter"]],wireframeProbability:0,axis:[1,3,5,6,7],probability:.9,numberOfShapes:[10,25],numberOfRadialSegments:20,numberOfHeightSegments:20,radius:[.2,1,.1],height:[1,5,.3],openEnded:!1,scale:[.5,1,.1],rotationX:[180,180,0],rotationY:[0,0,0],rotationZ:[0,0,0],positionX:[0,5,.1],positionY:[-5,5,.1],positionZ:[0,5,.1],scaleX:[.3,1.2,.1],scaleY:[.1,2,.3],scaleZ:[1,2,.3],types:[{defaultCone:1,probability:1},{curveBaseCone:1,probability:0,baseCurveFactor:.1},{slantCone:1,probability:0},{hookCone:1,probability:0,hookPosFactor:2,hookFactor:.9},{sideBaseCutCone:1,probability:0,sideBaseCutFactor:8.5},{bendCone:1,probability:0,bendFactor:3},{extremeSlantCone:1,probability:0,slantConeExtremeFactor:1.01},{bulgyCone:1,probability:0,bulgyFactorX:.3,bulgyFactorZ:.5,bulgyFactorY:.96},{specialCone1:1,probability:0},{specialCone2:1,probability:0}]},cone5:{cone:!0,material:[[.1,"circle"],[.1,"transparentcircle"],[.1,"bump"],[.1,"bodytransparent"],[.1,"paper1squiggle2Transparent"],[.1,"splatterTransparent"],[.1,"paper1squiggle2"],[.1,"paper1splatter"]],wireframeProbability:0,axis:[2,3,4,6,7],probability:.5,numberOfShapes:[10,25],numberOfRadialSegments:20,numberOfHeightSegments:20,radius:[.2,.8,.1],height:[.2,1,.1],openEnded:!1,scale:[.5,1,.1],rotationX:[90,90,0],rotationY:[0,0,0],rotationZ:[0,0,0],positionX:[-10,10,.1],positionY:[0,10,.1],positionZ:[0,5,.1],scaleX:[.1,1,.1],scaleY:[.1,1,.1],scaleZ:[.1,1,.1],types:[{defaultCone:1,probability:0},{curveBaseCone:1,probability:1,baseCurveFactor:.1},{slantCone:1,probability:0},{hookCone:1,probability:0,hookPosFactor:2,hookFactor:.9},{sideBaseCutCone:1,probability:0,sideBaseCutFactor:8.5},{bendCone:1,probability:0,bendFactor:3},{extremeSlantCone:1,probability:0,slantConeExtremeFactor:1.01},{bulgyCone:1,probability:0,bulgyFactorX:.3,bulgyFactorZ:.5,bulgyFactorY:.96},{specialCone1:1,probability:0},{specialCone2:1,probability:0}]}};let Axis=[{enabled:!0,name:"major",growShapes:{onStartup:!1,speed:.12},axisAngle:[10,10,1],axisX:[0,10,1],axisY:[-15,-19,1],axisZ:[0,0,0],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:1,scaleEllipseModePowerOfY:1,scaleEllipseModePowerOfZ:1,scaleEllipseModeBaseX:20,scaleEllipseModeBaseY:20,scaleEllipseModeBaseZ:20,scaleEllipseModeMultiplierX:.05,scaleEllipseModeMultiplierY:.05,scaleEllipseModeMultiplierZ:.05,coneRotationSpeed:[1,2,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[10,10,1],centralRodColor:"#ff0000",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!0,name:"minor_1",growShapes:{onStartup:!1,speed:.11},axisAngle:[10,10,1],axisX:[10,10,1],axisY:[0,-10,1],axisZ:[-10,0,1],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!1,scaleEllipseModePowerOfX:2,scaleEllipseModePowerOfY:2,scaleEllipseModePowerOfZ:2,scaleEllipseModeBaseX:10,scaleEllipseModeBaseY:10,scaleEllipseModeBaseZ:10,scaleEllipseModeMultiplierX:.01,scaleEllipseModeMultiplierY:.02,scaleEllipseModeMultiplierZ:.01,coneRotationSpeed:[1,2,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[0,60,5],centralRodColor:"#ffff00",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!0,name:"minor_2",growShapes:{onStartup:!1,speed:.09},axisAngle:[10,10,1],axisX:[10,10,1],axisY:[1,1,1],axisZ:[-10,-20,1],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:2,scaleEllipseModePowerOfY:2,scaleEllipseModePowerOfZ:2,scaleEllipseModeBaseX:10,scaleEllipseModeBaseY:10,scaleEllipseModeBaseZ:10,scaleEllipseModeMultiplierX:.01,scaleEllipseModeMultiplierY:.02,scaleEllipseModeMultiplierZ:.01,coneRotationSpeed:[1,2,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[300,360,5],centralRodColor:"#ffffff",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!0,name:"minor_3",growShapes:{onStartup:!1,speed:.1},axisAngle:[10,10,1],axisX:[0,0,1],axisY:[0,0,1],axisZ:[-5,-10,1],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:2,scaleEllipseModePowerOfY:2,scaleEllipseModePowerOfZ:2,scaleEllipseModeBaseX:10,scaleEllipseModeBaseY:10,scaleEllipseModeBaseZ:10,scaleEllipseModeMultiplierX:.01,scaleEllipseModeMultiplierY:.02,scaleEllipseModeMultiplierZ:.01,coneRotationSpeed:[1,4,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[300,360,5],centralRodColor:"#0066ff",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!0,name:"major_2",growShapes:{onStartup:!1,speed:.08},axisAngle:[10,10,1],axisX:[0,0,1],axisY:[5,15,1],axisZ:[0,0,0],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:1,scaleEllipseModePowerOfY:1,scaleEllipseModePowerOfZ:1,scaleEllipseModeBaseX:20,scaleEllipseModeBaseY:20,scaleEllipseModeBaseZ:20,scaleEllipseModeMultiplierX:.05,scaleEllipseModeMultiplierY:.05,scaleEllipseModeMultiplierZ:.05,coneRotationSpeed:[2,4,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[0,0,1],centralRodColor:"#FFF",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!1,name:"extra_1",growShapes:{onStartup:!1,speed:.08},axisAngle:[10,10,1],axisX:[0,0,1],axisY:[5,15,1],axisZ:[0,0,0],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:1,scaleEllipseModePowerOfY:1,scaleEllipseModePowerOfZ:1,scaleEllipseModeBaseX:20,scaleEllipseModeBaseY:20,scaleEllipseModeBaseZ:20,scaleEllipseModeMultiplierX:.05,scaleEllipseModeMultiplierY:.05,scaleEllipseModeMultiplierZ:.05,coneRotationSpeed:[2,4,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[0,0,1],centralRodColor:"#FFF",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]},{enabled:!1,name:"extra_2",growShapes:{onStartup:!1,speed:.08},axisAngle:[10,10,1],axisX:[0,0,1],axisY:[5,15,1],axisZ:[0,0,0],ellipseMode:!0,ellipseModePowerOf:1,ellipseModeMultiplier:.15,enableScaleEllipseMode:!0,scaleEllipseModePowerOfX:1,scaleEllipseModePowerOfY:1,scaleEllipseModePowerOfZ:1,scaleEllipseModeBaseX:20,scaleEllipseModeBaseY:20,scaleEllipseModeBaseZ:20,scaleEllipseModeMultiplierX:.05,scaleEllipseModeMultiplierY:.05,scaleEllipseModeMultiplierZ:.05,coneRotationSpeed:[2,4,.1],addCentralRod:!1,centralRodLength:50,centralRodWidth:.2,centralRodAngle:[0,0,1],centralRodColor:"#FFF",enableNegativeSpace:!1,negativeSpaceType:["triangle","rectangle","diamond"],negativeSpaceSizeX:[5,5,.1],negativeSpaceSizeY:[5,5,.1],negativeSpaceSizeZ:[1e3,1e3,1],negativeSpaceX:[0,0,1],negativeSpaceY:[0,0,.1],negativeSpaceZ:[20,20,1],enableNegativeSpaceAnimation:!1,negativeSpaceAnimationSpeedX:1,negativeSpaceAnimationSpeedY:1,negativeSpaceAnimationX:[-10,10,1],negativeSpaceAnimationY:[-10,10,1]}],Lights=[{type:"directional",color:16777215,power:.5,positionX:-20,positionY:-20,positionZ:30,rotationX:0,rotationY:0,rotationZ:0},{type:"point",color:16777215,power:.4,size:400,positionX:-20,positionY:-20,positionZ:30},{type:"point",color:16777215,power:1.5,size:20,positionX:0,positionY:0,positionZ:0},{type:"point",color:16777215,power:.5,size:300,positionX:20,positionY:20,positionZ:30},{type:"point",color:16777215,power:4,size:100,positionX:0,positionY:0,positionZ:-100},{type:"hemisphere",color1:16776960,color2:16777215,power:.2}];hashOverwrites={axisAngle:[-30,30,1],axisX:[-10,10,.1],axisY:[-10,10,.1],axisZ:[-2,2,.1]},palettes=[{probability:.1,gradient:["#000000","#ff0066",.3,1],colors:["#ffb3ff","#ffccff","#666666","#333333","#b30047"],special:{flower:["#000000","#ff0066"]}},{probability:.1,fog:["#0000b3"],gradient:["#0066ff","#000080",.2,1],colors:["#002966","#002966","#000000","#333333","#000080"],special:{flower:["#0066ff","#000080"]}},{probability:.1,fog:["#000066"],gradient:["#000066","#ffffff",.1,1],colors:["#ffcccc","#aa80ff","#b3ccff","#cc0052","#3333cc"],special:{flower:["#000066","#ffffff"]}},{probability:.1,gradient:["#000000","#ff6600",.2,1],colors:["#00ace6","#006080","#000000","#333333","#006699"],special:{flower:["#ff6600","#000000"]}},{probability:.1,gradient:["#000000","#ffffff",.1,1],colors:["#ffcccc","#aa80ff","#808080","#333333","#3333cc"],special:{flower:["#3333cc","#000000"]}},{probability:.1,fog:["#ffffff"],gradient:["#000000","#ffffff",.1,1],colors:["#ff6600","#000000","#808080","#333333","#000000"],special:{flower:["#ffffff","#ff6600"]}},{probability:.1,fog:["#ffffff"],gradient:["#000000","#ffffff",.2,1],colors:["#1a1a1a","#000000","#ffffff","#333333","#000000"],special:{flower:["#ffffff","#1a1a1a"]}},{probability:.1,fog:[],gradient:["#000066","#ffffff",.1,1],colors:["#ffcccc","#aa80ff","#b3ccff","#cc0052","#3333cc"],special:{flower:["#000066","#ffffff"]}},{probability:.1,fog:[],gradient:["#ffffff","#000000",.1,1],colors:["#000000","#000000","#99ccff","#000000","#000000"],special:{flower:["#ffffff","#99ccff"]}},{probability:.1,fog:[],gradient:["#000000","#ffffff",.1,1],colors:["#ff6600","#ff0066","#3366ff","#cc00cc","#3366ff"],special:{flower:["#ff0066","#3366ff"]}},{probability:.1,fog:[],gradient:["#000000","#ffffff",.1,1],colors:["#ffff1a","#595959","#808080","#333333","#000000"],special:{flower:["#595959","#ffff1a"]}},{probability:.1,fog:["#666666"],gradient:["#000000","#ffccff",.1,1],colors:["#ff9966","#000066","#666666","#333333","#b30047"],special:{flower:["#000066","#b30047"]}},{probability:.1,fog:["#000000"],gradient:["#b3ffff","#33cc33",.4,1],colors:["#4d3319","#808080","#00b36b","#004d4d","#ffffff"],special:{flower:["#00b36b","#004d4d"]}},{probability:.1,fog:["#000000"],gradient:["#000000","#66ffcc",.3,1],colors:["#000000","#99ff33","#00b36b","#004d4d","#334d4d"],special:{flower:["#004d4d","#00b36b"]}},{probability:.1,fog:["#666699"],gradient:["#000000","#ffffff",.3,1],colors:["#330033","#00004d","#001a00","#666699","#33001a"],special:{flower:["#001a00","#00004d"]}},{probability:.1,fog:["#000000"],gradient:["#000000","#b3ffff",0,1],colors:["#333300","#000066","#003333","#004d4d","#ffffff"],special:{flower:["#003333","#ffffff"]}},{probability:.1,fog:[],gradient:["#000000","#ffe6f0",.3,1],colors:["#ffffff","#000000","#ffccff","#666666","#333333","#b30047"],special:{flower:["#ffccff","#b30047"]}},{probability:.1,fog:["#000000"],gradient:["#ffffcc","#000000",0,1],colors:["#ffffb3","#000000","#ffff66","#000000","#333333","#ffff00"],special:{flower:["#ffff00","#ffffb3"]}},{probability:.1,fog:["#000000"],gradient:["#ffffff","#000000",0,1],colors:["#000000","#ffffff","#000000","#333333","#ffffff"],special:{flower:["#ffffff","#000000"]}},{probability:.1,fog:["#ff4d4d"],gradient:["#262626","#000000",0,1],colors:["#ff4d4d","#000000","#000000","#000000","#000000"],special:{flower:["#262626","#000000"]}},{probability:.1,fog:["#000000"],gradient:["#ffffff","#000000",.1,1],colors:["#660044","#000000","#ffffff","#ff0000","#ff0000","#e64d00"],special:{flower:["#e64d00","#660044"]}},{probability:.1,fog:["#000000"],gradient:["#ffffff","#000000",.1,1],colors:["#ccffcc","#000000","#ffffff","#000000","#333333","#00e673"],special:{flower:["#000000","#ccffcc"]}},{probability:.1,fog:["#ff9900"],gradient:["#ffffff","#33ccff",.2,1],colors:["#999999","#ffffff","#009933","#009933","#ff8000","#ffffff"],special:{flower:["#33ccff","#ffffff"]}},{probability:.1,fog:["#ff9900"],gradient:["#ff9900","#ffff00",.2,1],colors:["#ff9900","#ff0000","#ffff00","#ff3300","#ff1a1a","#b30000"],special:{flower:["#ffff00","#ff1a1a"]}},{probability:.1,fog:["#ff8080"],gradient:["#333399","#ff8080",.2,1],colors:["#333399","#002db3","#001a66","#0000ff","#00ffff","#ffff00","#ffffcc"],special:{flower:["#001a66","#ff8080"]}},{probability:.1,fog:["#ffb3cc"],gradient:["#000000","#ffffff",.2,1],colors:["#000000","#ffffff","#000000","#ff6699","#ffffff"],special:{flower:["#000000","#ffffff"]}},{probability:.1,fog:["#80ff00"],gradient:["#000000","#ffaa00",.2,1],colors:["#000000","#ffb3ff","#000000","#b300b3","#666666"],special:{flower:["#ffaa00","#000000"]}},{probability:.1,fog:["#6666ff"],gradient:["#000000","#6666ff",.2,1],colors:["#000000","#000000","#000000","#000000","#000000"],special:{flower:["#000000","#6666ff"]}},{probability:.1,fog:["#99ff99"],gradient:["#000000","#99ff99",.2,1],colors:["#99ff99","#000000","#000000","#000000","#000000"],special:{flower:["#99ff99","#000000"]}},{probability:.1,fog:[],gradient:["#ffffb3","#66ffcc",.2,1],colors:["#ffffb3","#99003d","#668cff","#000000","#00ff00"],special:{flower:["#99003d","#668cff"]}},{probability:.1,fog:[],gradient:["#ff1a1a","#4d4d4d",0,.9],colors:["#000000","#808080","#ffffff","#ff6699","#000000"],special:{flower:["#ff1a1a","#ff6699"]}},{probability:.1,fog:[],gradient:["#ff1a1a","#ffffff",0,.9],colors:["#000000","#ffffff","#000000","#ff6699","#ffffff"],special:{flower:["#ff1a1a","#ff6699"]}},{probability:.1,fog:["#145214"],gradient:["#000000","#b3b3ff",.2,1],colors:["#ff9933","#66ff99","#ff66a3","#000099","#0099ff"],special:{flower:["#b3b3ff","#66ff99"]}},{probability:.1,fog:["#ff9999"],gradient:["#000000","#ff9999",.2,1],colors:["#ffcc00","#000000","#cc0052","#ff6600","#ff99cc"],special:{flower:["#ff99cc","#000000"]}}];</script><script>var MersenneTwister = function(seed) {
	if (seed == undefined) {
		seed = new Date().getTime();
	}

	/* Period parameters */
	this.N = 624;
	this.M = 397;
	this.MATRIX_A = 0x9908b0df;   /* constant vector a */
	this.UPPER_MASK = 0x80000000; /* most significant w-r bits */
	this.LOWER_MASK = 0x7fffffff; /* least significant r bits */

	this.mt = new Array(this.N); /* the array for the state vector */
	this.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */

	if (seed.constructor == Array) {
		this.init_by_array(seed, seed.length);
	}
	else {
		this.init_seed(seed);
	}
}
MersenneTwister.prototype.init_seed = function(s) {
	this.mt[0] = s >>> 0;
	for (this.mti=1; this.mti<this.N; this.mti++) {
		var s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);
		this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)
		+ this.mti;
		/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */
		/* In the previous versions, MSBs of the seed affect   */
		/* only MSBs of the array mt[].                        */
		/* 2002/01/09 modified by Makoto Matsumoto             */
		this.mt[this.mti] >>>= 0;
		/* for >32 bit machines */
	}
}
MersenneTwister.prototype.init_by_array = function(init_key, key_length) {
	var i, j, k;
	this.init_seed(19650218);
	i=1; j=0;
	k = (this.N>key_length ? this.N : key_length);
	for (; k; k--) {
		var s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)
		this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))
		+ init_key[j] + j; /* non linear */
		this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
		i++; j++;
		if (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }
		if (j>=key_length) j=0;
	}
	for (k=this.N-1; k; k--) {
		var s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);
		this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))
		- i; /* non linear */
		this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */
		i++;
		if (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }
	}

	this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */
}
MersenneTwister.prototype.random_int = function() {
	var y;
	var mag01 = new Array(0x0, this.MATRIX_A);
	/* mag01[x] = x * MATRIX_A  for x=0,1 */

	if (this.mti >= this.N) { /* generate N words at one time */
		var kk;

		if (this.mti == this.N+1)  /* if init_seed() has not been called, */
			this.init_seed(5489);  /* a default initial seed is used */

		for (kk=0;kk<this.N-this.M;kk++) {
			y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);
			this.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];
		}
		for (;kk<this.N-1;kk++) {
			y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);
			this.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];
		}
		y = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);
		this.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];

		this.mti = 0;
	}

	y = this.mt[this.mti++];

	/* Tempering */
	y ^= (y >>> 11);
	y ^= (y << 7) & 0x9d2c5680;
	y ^= (y << 15) & 0xefc60000;
	y ^= (y >>> 18);

	return y >>> 0;
}
MersenneTwister.prototype.random_int31 = function() {
	return (this.random_int()>>>1);
}
MersenneTwister.prototype.random_incl = function() {
	return this.random_int()*(1.0/4294967295.0);
	/* divided by 2^32-1 */
}
MersenneTwister.prototype.random = function() {
	return this.random_int()*(1.0/4294967296.0);
	/* divided by 2^32 */
}
MersenneTwister.prototype.random_excl = function() {
	return (this.random_int() + 0.5)*(1.0/4294967296.0);
	/* divided by 2^32 */
}
MersenneTwister.prototype.random_long = function() {
	var a=this.random_int()>>>5, b=this.random_int()>>>6;
	return(a*67108864.0+b)*(1.0/9007199254740992.0);
}

</script><script>function hashString(e){let t=5381;for(let r=0;r<e.length;r++)t=33*t^e.charCodeAt(r);return t>>>0}function rand(e,t,r=.001){if(e==t)return e;if(e>t){let a=e;e=t,t=a}let n=randomNumberGenerator.random(),o=(t-e)/r+r;return e+Math.floor(n*o)*r}function randS(e,t,r=.001){if(e==t)return e;if(e>t){let a=e;e=t,t=a}let n=randomNumberGeneratorSeeded.random(),o=(t-e)/r+r;return e+Math.floor(n*o)*r}function randFromRange(e){return rand(e[0],e[1],e[2])}function randFromRangeS(e){let t=randS(e[0],e[1],e[2]);return[t,t,1]}function randFromRangeS2(e){return randS(e[0],e[1],e[2])}function shuffle(e){for(let t=e.length-1;t>0;t--){let r=Math.floor(randomNumberGenerator.random()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e}function shuffleS(e){for(let t=e.length-1;t>0;t--){let r=Math.floor(randS(0,1,.01)*t);[e[t],e[r]]=[e[r],e[t]]}return e}function pick(e){return e[rand(0,e.length-1,1)]}function pickS(e){return e[randS(0,e.length-1,1)]}function pickS2(e){let t=JSON.parse(JSON.stringify(e));if(shuffleS(t),1==t.length){let r=t.pop();return[r,r]}for(v1=t.pop(),v3=v2=t.pop();v1==v2;){if(0==t.length){v2=v3;break}v2=t.pop()}return[v1,v2]}function numberOfShapesMinMax(e){return Array.isArray(e)?randFromRangeS(e)[0]:e}function pickFromProbabilityArrayS(e){let t=JSON.parse(JSON.stringify(e));shuffleS(t);let r=0,a=-1,n=null,o=randS(0,1,.01);for(let i=0;i<t.length;i++){if(o<(r+=t[i][0]))return t[i][1];t[i][0]>a&&(a=t[i][0],n=t[i])}return n[1]}function pickFromProbabilityMapS(e){let t=JSON.parse(JSON.stringify(e));shuffleS(t);let r=0,a=-1,n=null,o=randS(0,1,.01);for(let i=0;i<t.length;i++){if(o<(r+=t[i].probability))return t[i];t[i].probability>a&&(a=t[i].probability,n=t[i])}return n}function smallerRange(e,t){return[(e=randFromRangeS(e))[0]-t,e[0]+t,e[2]]}function overwriteAxis(){let e=randFromRangeS(hashOverwrites.axisAngle)[0],t=randFromRangeS(hashOverwrites.axisAngle)[0],r=shuffleS([[e-2,e+2,1],[e-2,e+2,1],[e-2,e+2,1],[t-2,t+2,1],[t-2,t+2,1],[t-2,t+2,1],[t-2,t+2,1],]);for(let a=0;a<Axis.length;a++){let n=Axis[a],o=r.pop();n.name=`axis${a+1}`,n.axisAngle=o,n.originalAxisAngle=o,n.axisExtremeAngle=void 0,n.extremeAngleEnabledTimestamp=void 0,n.axisX=smallerRange(hashOverwrites.axisX,5),n.axisY=smallerRange(hashOverwrites.axisY,5),n.axisZ=smallerRange(hashOverwrites.axisZ,5)}}function populatePalette(){palettes=shuffleS(palettes),SCENE.palette=pickFromProbabilityMapS(palettes),worldGradientColors=[[SCENE.palette.gradient[2],SCENE.palette.gradient[0]],[SCENE.palette.gradient[3],SCENE.palette.gradient[1]]],enableFog=pickS([!0,!1]),fogColor=pickS(SCENE.palette.colors.filter(e=>e!=SCENE.palette.gradient[0]&&e!=SCENE.palette.gradient[1])),console.log(fogColor)}function populateAxisExtraShapes(){for(shapeType in extraShapes){(shapeParams=extraShapes[shapeType]).originalNumberOfShapes=shapeParams.numberOfShapes,shapeParams.numberOfShapes=randS(shapeParams.numberOfShapes[0],shapeParams.numberOfShapes[1]||shapeParams.numberOfShapes[0],1),shapeParams.material=pickFromProbabilityArrayS(shapeParams.material);for(let e=0;e<Axis.length;e++)shapeParams.axisToBeAddedTo=pick(shapeParams.axis);if(shapeParams.secondColor){let t=pickS(SCENE.palette.colors);Array.isArray(t)&&(t=t[0]),shapeParams.secondColor=t}}for(let r=0;r<Axis.length;r++)for(shapeType in Axis[r].extraShapes={},extraShapes)(shapeParams=JSON.parse(JSON.stringify(extraShapes[shapeType]))).axisToBeAddedTo==r+1&&randS(0,1,.01)>=1-shapeParams.probability&&(Axis[r].extraShapes[shapeType]=shapeParams)}function populateAbstractMaterials(){for(let e in materialTemplates){let t=materialTemplates[e];t={color:t[0],wireframe:t[2],shininess:t[1],enableTexture:t[3],textureColorVariant:pickS(t[4]),textureSize:t[13],textureNoiseSize:t[14],textureBase:t[11],textureMultiplier:t[12],textureBumpAmount:t[16],enableTextureBump:t[15],textureOffset:t[10],textureScale:t[8],textureRecolor:t[7],textureRotation:t[9],useTextureTransparency:t[6],textureBumpVariant:t[5]};let r=pickS2(SCENE.palette.colors),a=r[0],n=r[1];t.color=a,t.textureRecolor=n;let o=[void 0,void 0],i=t.color,l=!1;"boolean"==typeof t.wireframe?l=t.wireframe:(l=randS(0,1,.01)>1-t.wireframe,console.log(t.wireframe,l));let s=t.shininess,$;if("number"==typeof t.enableTexture&&(t.enableTexture=randS(0,1,.001)>1-t.enableTexture),t.enableTexture){if(["simple","perlin3","simplex3"].indexOf(t.textureColorVariant)>=0){let u=makePerlinTexture(t.textureSize[0],t.textureSize[1],t.textureNoiseSize[0],t.textureNoiseSize[1],t.textureBase,t.textureMultiplier,!0,t.textureBumpAmount,t.textureColorVariant);o[0]=u[0],t.enableTextureBump&&(o[1]=u[1])}else if(t.textureColorVariant in base64Textures){let c=loadTextureRecolor(t.textureColorVariant,t.textureOffset[0],t.textureOffset[1],t.textureScale[0],t.textureScale[1],t.textureRecolor,i,t.textureRotation);if(t.useTextureTransparency&&($=loadTextureRecolor(t.textureColorVariant,t.textureOffset[0],t.textureOffset[1],t.textureScale[0],t.textureScale[1],"#FFFFFF","#000000",t.textureRotation)),o[0]=c,t.enableTextureBump){if(t.textureColorVariant==t.textureBumpVariant)o[1]=c;else{let p=makePerlinTexture(t.textureSize[0],t.textureSize[1],t.textureNoiseSize[0],t.textureNoiseSize[1],t.textureBase,t.textureMultiplier,!0,t.textureBumpAmount,t.textureColorVariant);o[1]=p[0]}}}}let d={type:"phong",color:i,side:THREE.DoubleSide,wireframe:l,shininess:s,map:o[0],bumpMap:o[1],alphaMap:$},f=makeMaterial(d);f.userData.name=e,materialTemplates[e]=f}}function modifyMesh(e,t){let r=e.geometry.getAttribute("position").count;for(var a=0;a<r;a++){let n=e.geometry.getAttribute("position").getX(a),o=e.geometry.getAttribute("position").getY(a),i=e.geometry.getAttribute("position").getZ(a);(newXYZ=t(r,a,n,o,i,e))[0]!=n&&e.geometry.getAttribute("position").setX(a,newXYZ[0]),newXYZ[1]!=o&&e.geometry.getAttribute("position").setY(a,newXYZ[1]),newXYZ[2]!=i&&e.geometry.getAttribute("position").setZ(a,newXYZ[2])}return e}function vertexIndexSequence(e){e-=1;let t=[];for(let r=0;r<e;r++){let a=r,n=r+1,o=e-r;n==o&&n++,t=t.concat(a,n,o)}return t}function makeExtrudeShapeMesh(e,t,r,a){function n(e){let t=new THREE.Shape;for(let r=0;r<e.length;r++)0==r?t.moveTo(e[r][0],e[r][1]):t.lineTo(e[r][0],e[r][1]);return t}let o=n(e);if(t.length>0){let i=n(t);o.holes.push(i)}let l=new THREE.ExtrudeGeometry(o,r);return new THREE.Mesh(l,a)}function makeFrame(e,t,r,a,n,o,i,l){let s=[[t,r],[t,-r],[-t,-r],[-t,r]],$=[];for(let u of s){let c=u[0]<0?u[0]+a:u[0]-a,p=u[1]<0?u[1]+a:u[1]-a;$.push([c,p])}let d=makeExtrudeShapeMesh(s,$,{steps:2,depth:n,bevelEnabled:!1},e);return i&&d.position.set(i[0],i[1],i[2]),o&&d.scale.set(o[0],o[1],o[2]),l&&d.rotation.set(THREE.MathUtils.degToRad(l[0]),THREE.MathUtils.degToRad(l[1]),THREE.MathUtils.degToRad(l[2])),d}function makeRectangle(e,t,r,a,n,o,i){let l=makeExtrudeShapeMesh([[t,r],[t,-r],[-t,-r],[-t,r]],[],{steps:2,depth:a,bevelEnabled:!1},e);return o&&l.position.set(o[0],o[1],o[2]),n&&l.scale.set(n[0],n[1],n[2]),i&&l.rotation.set(THREE.MathUtils.degToRad(i[0]),THREE.MathUtils.degToRad(i[1]),THREE.MathUtils.degToRad(i[2])),l}function makeArrow(e,t,r,a,n,o,i,l,s=0){if(0==s)var $=[[4.23,.1],[.65,8.65],[-3.48,-.71],[-.4,.84],[-.97,-6.59],[.73,-6.52],[1.02,1.08],];else if(1==s)var $=[[-4.13,-1],[.65,8.65],[-3.48,-.71],[-.4,-.84],[-.07,-.09],[.73,-.52],[1.02,1.08],];else if(2==s)var $=[[-4.13,-1],[.65,1.55,8.65,3.56,.22],[-3.48,-.71],[-.4,-.84],[-.07,-.09],[.73,-.52],[1.02,1.08],];else if(3==s)var $=[[-14.13,9],[.65,-1.55,8.65,-3.56,.22],[-13.48,10.71],[-20.4,-.84],[-.07,-.09],[2.73,-.52],[1.02,1.08],];let u=makeExtrudeShapeMesh($,[],{steps:2,depth:t,bevelEnabled:!0,bevelThickness:r,bevelSize:a,bevelOffset:0,bevelSegments:n},e);return i&&u.position.set(i[0],i[1],i[2]),o&&u.scale.set(o[0],o[1],o[2]),l&&u.rotation.set(THREE.MathUtils.degToRad(l[0]),THREE.MathUtils.degToRad(l[1]),THREE.MathUtils.degToRad(l[2])),u}function makeKnot(e,t,r,a,n,o,i,l,s,$){let u=new THREE.TorusKnotGeometry(t,r,a,n,o,i);u.computeVertexNormals();let c=new THREE.Mesh(u,e);return s&&c.position.set(s[0],s[1],s[2]),l&&c.scale.set(l[0],l[1],l[2]),$&&c.rotation.set(THREE.MathUtils.degToRad($[0]),THREE.MathUtils.degToRad($[1]),THREE.MathUtils.degToRad($[2])),c}function makeMaterial(e={type:void 0,color:void 0,side:void 0,wireframe:void 0,shininess:void 0,map:void 0,bumpMap:void 0,alphaMap:void 0}){let t={color:e.color?e.color:"#FFFFFF",side:e.side,wireframe:e.wireframe,shininess:e.shininess};e.map&&(t.map=e.map,e.alphaMap&&(t.alphaMap=e.alphaMap,t.alphaTest=.8,t.premultipliedAlpha=!0)),e.bumpMap&&(t.bumpMap=e.bumpMap);let r=new THREE.MeshPhongMaterial(t);return r.userData.used=!1,r}function loadTexture(e,t,r,a,n,o){if(o){var i=document.createElement("canvas");i.width=512,i.height=512;var l=i.getContext("2d"),s=new THREE.Texture(i),$=new Image;$.src=`data:image/png;base64,${base64Textures[e]}`,$.onload=function(){l.fillStyle="rgba(255,255,255,1)",l.fillRect(0,0,i.width,i.height),l.globalCompositeOperation=o[3],l.filter=`hue-rotate(${o[0]}deg) grayscale(${o[1]}%) brightness(${o[2]}%)`,l.drawImage($,0,0,i.width,i.height),l.globalCompositeOperation="source-over",l.fillStyle="rgb(255,0,0)",l.fillRect(0,0,i.width,i.height),s.needsUpdate=!0,l.globalCompositeOperation="source-over"},s.wrapS=THREE.RepeatWrapping,s.wrapT=THREE.RepeatWrapping}else var s=new THREE.TextureLoader().load(`data:image/png;base64,${base64Textures[e]}`);return t&&r&&s.offset.set(a,n),a&&n&&s.repeat.set(a,n),s}function loadTextureRecolor(e,t,r,a,n,o,i,l){var s=document.createElement("canvas");s.width=128,s.height=128;var $=s.getContext("2d"),u=new THREE.Texture(s),c=new Image;return c.src=`data:image/png;base64,${base64Textures[e]}`,c.onload=function(){$.globalCompositeOperation="copy",$.drawImage(c,0,0,s.width,s.height),o&&($.globalCompositeOperation="source-in",$.fillStyle=o,$.fillRect(0,0,s.width,s.height)),$.globalCompositeOperation="destination-atop",$.fillStyle=i,$.fillRect(0,0,s.width,s.height),u.wrapS=THREE.RepeatWrapping,u.wrapT=THREE.RepeatWrapping,t&&r&&u.offset.set(t,r),a&&n&&u.repeat.set(a,n),l&&(u.rotation=THREE.MathUtils.degToRad(l)),u.needsUpdate=!0},u}function generateHeight(e,t){let r=Math.PI/4;window.Math.random=function(){let e=1e4*Math.sin(r++);return e-Math.floor(e)};let a=e*t,n=new Uint8Array(a),o=new THREE.ImprovedNoise,i=100*Math.random(),l=1;for(let s=0;s<4;s++){for(let $=0;$<a;$++){let u=$%e,c=~~($/e);n[$]+=Math.abs(o.noise(u/l,c/l,i)*l*1.75)}l*=5}return n}function generateTexture(e,t,r){let a,n,o,i,l=new THREE.Vector3(0,0,0),s=new THREE.Vector3(1,1,1);s.normalize();let $=document.createElement("canvas");$.width=t,$.height=r,(a=$.getContext("2d")).fillStyle="#000",a.fillRect(0,0,t,r),o=(n=a.getImageData(0,0,$.width,$.height)).data;for(let u=0,c=0,p=o.length;u<p;u+=4,c++)l.x=e[c-2]-e[c+2],l.y=2,l.z=e[c-2*t]-e[c+2*t],l.normalize(),i=l.dot(s),o[u]=(96+128*i)*(.5+.007*e[c]),o[u+1]=(32+96*i)*(.5+.007*e[c]),o[u+2]=96*i*(.5+.007*e[c]);a.putImageData(n,0,0);let d=document.createElement("canvas");d.width=4*t,d.height=4*r,(a=d.getContext("2d")).scale(4,4),a.drawImage($,0,0),o=(n=a.getImageData(0,0,d.width,d.height)).data;for(let f=0,_=o.length;f<_;f+=4){let g=~~(5*Math.random());o[f]+=g,o[f+1]+=g,o[f+2]+=g}return a.putImageData(n,0,0),d}function makeTerrain(e,t,r,a,n,o,i,l){let s=t,$=r,u=generateHeight(s,$),c=new THREE.PlaneGeometry(t,r,s-1,$-1);c.rotateX(-Math.PI/2);let p=c.attributes.position.array;for(let d=0,f=0,_=p.length;d<_;d++,f+=3)p[f+1]=u[d]*a;let g=new THREE.Mesh(c,e);if(l)for(let m of l)m.rotateX(-Math.PI/2),g.add(m);return o&&g.position.set(o[0]-s/10,o[1]-100*a,o[2]),n&&g.scale.set(n[0],n[1],n[2]),i&&g.rotation.set(THREE.MathUtils.degToRad(i[0]),THREE.MathUtils.degToRad(i[1]),THREE.MathUtils.degToRad(i[2])),g}function makeLightning(e,t,r,a,n,o,i,l){let s=new THREE.Path,$=0;for(let u=0;u<a;u++)s.lineTo(r*rand(.5,1.5,.1),$*rand(1,1.5,.1)),r*=-1,$+=t;let c=s.getPoints(),p=new THREE.BufferGeometry().setFromPoints(c),d=new THREE.Line(p,e);return i&&d.position.set(i[0],i[1],i[2]),o&&d.scale.set(o[0],o[1],o[2]),l&&d.rotation.set(THREE.MathUtils.degToRad(l[0]),THREE.MathUtils.degToRad(l[1]),THREE.MathUtils.degToRad(l[2])),d.userData.counter=0,d.userData.maxCounter=n,d}function animateLightning(e,t){let r=e.geometry.getAttribute("position");e.userData.counter>e.userData.maxCounter&&(t.mainPivot.remove(e),t.lightnings.splice(t.lightnings.indexOf(e),1)),e.userData.counter++;for(let a=0;a<r.count;a++){let n=r.getX(a),o=r.getY(a),i=r.getZ(a);if(rand(0,1,.1)>.8){n*=-1,r.setXYZ(a,n,o,i),e.rotation.y=rand(0,90,1),r.needsUpdate=!0;return}if(rand(0,1,.1)>.8){i*=-1,r.setXYZ(a,n,o,i),e.rotation.y=rand(1,90,1),r.needsUpdate=!0;return}}}function makeAnimationForQueue(e,t,r,a,n,o=.3){n=n<0?-1*n:n;let i={attribute:e,from:t,current:t,to:r,final:a,speed:n,counter:0,curve:o};return"color"==e&&(t="string"==typeof t?t:"#"+t.getHex().toString(16),r=Array.isArray(r)?r:[r],i.colorInterpolator=new ColorInterpolator([t].concat(r),n)),i}function processAnimationQueue(e){if(void 0==e.userData.animationQueue||0==e.userData.animationQueue.length)return;let t=e.userData.animationQueue[0];if(t.counter>1e4){e.userData.animationQueue.splice(0,1);return}if(t.counter++,"color"==t.attribute){if(e.color){let r=new THREE.Color(t.colorInterpolator.nextColor());e.color=r,t.colorInterpolator.looped&&e.userData.animationQueue.splice(0,1)}else console.error("Shape has no color attribute");return}if(Array.isArray(t.from))for(let a=0;a<t.from.length;a++){if(t.from[a]>=t.to[a]&&t.current[a]<=t.to[a]||t.from[a]<=t.to[a]&&t.current[a]>=t.to[a]){e.userData.animationQueue.splice(0,1);return}t.from[a]>t.to[a]?t.current[a]-=t.speed:t.current[a]+=t.speed}else{if("scale"==t.attribute?t.current=Math.max(e.scale.x,e.scale.y,e.scale.z):"rotationSpeed"==t.attribute?t.current=e.userData.rotationSpeed:"distance"==t.attribute?t.current=e.position.x:"x"==t.attribute?t.current=e.position.x:"y"==t.attribute?t.current=e.position.y:"z"==t.attribute?t.current=e.position.z:"near-far"==t.attribute?(t.current[0]=e.near,t.current[1]=e.far):"angleX"==t.attribute?t.current=e.rotation.x:"angleY"==t.attribute?t.current=e.rotation.y:"angleZ"==t.attribute&&(t.current=e.rotation.z),t.from>=t.to&&t.current<=t.to||t.from<=t.to&&t.current>=t.to){e.userData.animationQueue.splice(0,1);return}t.from>=t.to?t.current-=t.speed:t.current+=t.speed}if("scale"==t.attribute){if(e.scale.set(t.current,t.current,t.current),Array.isArray(e.material))for(let n=0;n<e.material.length;n++)e.material[n].map&&(e.material[n].map.needsUpdate=!0);else e.material&&e.material.map&&(e.material.map.needsUpdate=!0)}else"rotationSpeed"==t.attribute?e.userData.rotationSpeed=t.current:"distance"==t.attribute?e.position.x=t.current:"x"==t.attribute?e.position.x=t.current:"y"==t.attribute?e.position.y=t.current:"z"==t.attribute?e.position.z=t.current:"near-far"==t.attribute?(e.near=t.current[0],e.far=t.current[1]):"angleX"==t.attribute?e.rotation.x=t.current:"angleY"==t.attribute?e.rotation.y=t.current:"angleZ"==t.attribute&&(e.rotation.z=t.current)}function processAnimationLoop(e){if(0!=e.userData.animationLoop.length)for(let t of e.userData.animationLoop){if("color"==t.attribute){if(e.color){let r=new THREE.Color(t.colorInterpolator.nextColor());e.color=r,t.colorInterpolator.looped&&e.userData.animationQueue.splice(0,1)}else console.error("Shape has no color attribute");return}if("scale"==t.attribute?t.current=Math.max(e.scale.x,e.scale.y,e.scale.z):"rotationSpeed"==t.attribute?t.current=e.userData.rotationSpeed:"distance"==t.attribute?t.current=e.position.x:"x"==t.attribute?t.current=e.position.x:"y"==t.attribute?t.current=e.position.y:"z"==t.attribute?t.current=e.position.z:"near-far"==t.attribute?(t.current[0]=e.near,t.current[1]=e.far):"angleX"==t.attribute?t.current=e.rotation.x:"angleY"==t.attribute?t.current=e.rotation.y:"angleZ"==t.attribute&&(t.current=e.rotation.z),t.from>=t.to?t.current-=t.speed:t.current+=t.speed,"scale"==t.attribute){if(e.scale.set(t.current,t.current,t.current),Array.isArray(e.material))for(let a=0;a<e.material.length;a++)e.material[a].map&&(e.material[a].map.needsUpdate=!0);else e.material.map&&(e.material.map.needsUpdate=!0)}else"rotationSpeed"==t.attribute?e.userData.rotationSpeed=t.current:"distance"==t.attribute?e.position.x=t.current:"x"==t.attribute?e.position.x=t.current:"y"==t.attribute?e.position.y=t.current:"z"==t.attribute?e.position.z=t.current:"near-far"==t.attribute?(e.near=t.current[0],e.far=t.current[1]):"angleX"==t.attribute?e.rotation.x=t.current:"angleY"==t.attribute?e.rotation.y=t.current:"angleZ"==t.attribute&&(e.rotation.z=t.current)}}function interpolateColors(e,t,r){var a;let n=e=>[parseInt(e.slice(1,3),16),parseInt(e.slice(3,5),16),parseInt(e.slice(5,7),16)],o=n(e),i=n(t),l=o.map((e,t)=>{let a=i[t];return Math.round(e+(a-e)*r)});return"#"+l.map(e=>Math.round(e).toString(16).padStart(2,"0")).join("")}class ColorInterpolator{constructor(e,t){this.colorsArray=e,this.activePairIndex=[0,1],this.speed=t,this.state=0,this.looped=!1}nextColor(){let e=interpolateColors(this.colorsArray[this.activePairIndex[0]],this.colorsArray[this.activePairIndex[1]],this.state);return this.state+=this.speed,this.state>=1&&(this.state=0,this.activePairIndex[1]>=this.colorsArray.length?this.activePairIndex=this.activePairIndex.map(e=>e+1):(this.activePairIndex=[0,1],this.looped=!0)),e}}function createConeGeometry(e,t,r,a,n,o){n||(n={});let i=new THREE.BufferGeometry,l=[],s=[],$=e;for(let u=0;u<=a;u++){let c=u/a*t,p=$+c/t*(0-$);for(let d=0;d<=r;d++){let f=c,_=d/r*Math.PI*2,g=p*Math.cos(_),m=p*Math.sin(_);n.slantCone&&(g+=Math.sin(f/a)*$),n.sideBaseCutCone&&(f+=Math.sin(g/a)*n.sideBaseCutFactor),n.mountain&&(f+=Math.sin(g*a)*Math.cos(g*n.mountainFactor)),n.extremeSlantCone&&(g+=(t-f)*n.slantConeExtremeFactor),n.hookCone&&(g+=Math.abs(t/n.hookPosFactor-f)*n.hookFactor),n.bulgyCone&&(g*=1+f*n.bulgyFactorX,m*=1+f*n.bulgyFactorZ,f*=f==t?n.bulgyFactorY:1),n.curveBaseCone&&(f-=Math.abs(Math.pow(g,2))*((a-u)*n.baseCurveFactor)),n.specialCone1&&(g=p*Math.cos(_*Math.sin(c)),m=p*Math.sin(_*Math.sin(p))),n.specialCone2&&(g=p*Math.cos(_*Math.sin(p)),m=p*Math.sin(_*Math.sin(c))),l.push(g,f,m)}}for(let h=0;h<a;h++)for(let x=0;x<r;x++){let b=h*(r+1)+x,w=b+r+1;if(0==x)var S=b,y=w;x<r-1?(s.push(b,w,b+1),s.push(w,w+1,b+1)):(s.push(b,w,S),s.push(w,y,S))}let v=0,T=100,P=0;for(let R=2;R<3*r;R+=3)P++,l[R]<v&&(v=P,T=l[R]);if(l.indexOf(Math.min(l.slice(0,r))),!o){l=l.slice(0,3*r).concat(l),s=s.map(e=>e+r);let C=Math.abs(r/2);if(n.curveBaseCone)s=s.concat(vertexIndexSequence(r));else for(let M=0;M<C;M+=1)s.push(M,M+1,C),s.push(M+C,M+C+1,C)}return i.setAttribute("position",new THREE.Float32BufferAttribute(l,3)),i.deleteAttribute("normal"),i.deleteAttribute("uv"),i.setIndex(s),i.computeVertexNormals(),i}function makeCone(e,t,r,a,n,o,i,l,s,$){let u=createConeGeometry(t,r,a,n,$,o),c=new THREE.ConeGeometry(t,r,a,n);u.setAttribute("uv",c.getAttribute("uv")),u.uvsNeedUpdate=!0,u.normalsNeedUpdate=!0;let p=new THREE.Mesh(u,e);return l&&p.position.set(l[0],l[1],l[2]),i&&p.scale.set(i[0],i[1],i[2]),s&&p.rotation.set(THREE.MathUtils.degToRad(2*s[0]),THREE.MathUtils.degToRad(s[1]),THREE.MathUtils.degToRad(s[2])),enableShadows&&(p.castShadow=!0,p.receiveShadow=!0),p.userData.material=e,p}function meanPositionOfPivots(e){let t=e.map(e=>e.position.x);t=t.reduce((e,t)=>e+t,0)/t.length;let r=e.map(e=>e.position.y);r=r.reduce((e,t)=>e+t,0)/r.length;let a=e.map(e=>e.position.z);return[t,r,a=a.reduce((e,t)=>e+t,0)/a.length]}function meanRotationOfPivots(e){let t=e.map(e=>e.rotation.x);t=t.reduce((e,t)=>e+t,0)/t.length;let r=e.map(e=>e.rotation.y);r=r.reduce((e,t)=>e+t,0)/r.length;let a=e.map(e=>e.rotation.z);return[t,r,a=a.reduce((e,t)=>e+t,0)/a.length]}function createNegativeSpace(e,t=!0){let r=randFromRange(e.negativeSpaceX),a=randFromRange(e.negativeSpaceY),n=randFromRange(e.negativeSpaceZ),o=randFromRange(e.negativeSpaceSizeX),i=randFromRange(e.negativeSpaceSizeY),l=randFromRange(e.negativeSpaceSizeZ),s=pick(e.negativeSpaceType),$;"triangle"==s?(($=[new THREE.Plane(new THREE.Vector3(1,.5,0),0),new THREE.Plane(new THREE.Vector3(-1,.5,0),0),new THREE.Plane(new THREE.Vector3(0,-1,0),0),new THREE.Plane(new THREE.Vector3(0,0,-1),0),new THREE.Plane(new THREE.Vector3(0,0,1),0),])[0].translate(new THREE.Vector3(o+r,0,0)),$[1].translate(new THREE.Vector3(-o+r,0,0)),$[2].translate(new THREE.Vector3(0,-i+a,0)),$[3].translate(new THREE.Vector3(0,0,-l+n)),$[4].translate(new THREE.Vector3(0,0,l+n))):"diamond"==s?(($=[new THREE.Plane(new THREE.Vector3(1,-.5,0),0),new THREE.Plane(new THREE.Vector3(-1,.5,0),0),new THREE.Plane(new THREE.Vector3(.5,-1,0),0),new THREE.Plane(new THREE.Vector3(-.5,1,0),0),new THREE.Plane(new THREE.Vector3(0,0,-1),0),new THREE.Plane(new THREE.Vector3(0,0,1),0),])[0].translate(new THREE.Vector3(o+r,0,0)),$[1].translate(new THREE.Vector3(-o+r,0,0)),$[2].translate(new THREE.Vector3(0,-i+a,0)),$[3].translate(new THREE.Vector3(0,i+a,0)),$[4].translate(new THREE.Vector3(0,0,-l+n)),$[5].translate(new THREE.Vector3(0,0,l+n))):"rectangle"==s&&(($=[new THREE.Plane(new THREE.Vector3(1,0,0),0),new THREE.Plane(new THREE.Vector3(-1,0,0),0),new THREE.Plane(new THREE.Vector3(0,-1,0),0),new THREE.Plane(new THREE.Vector3(0,1,0),0),new THREE.Plane(new THREE.Vector3(0,0,-1),0),new THREE.Plane(new THREE.Vector3(0,0,1),0),])[0].translate(new THREE.Vector3(o+r,0,0)),$[1].translate(new THREE.Vector3(-o+r,0,0)),$[2].translate(new THREE.Vector3(0,-i+a,0)),$[3].translate(new THREE.Vector3(0,i+a,0)),$[4].translate(new THREE.Vector3(0,0,-l+n)),$[5].translate(new THREE.Vector3(0,0,l+n))),SCENE.scene.add(new THREE.PlaneHelper($[0],20,16777215)),SCENE.scene.add(new THREE.PlaneHelper($[1],20,16777215)),SCENE.scene.add(new THREE.PlaneHelper($[2],20,16777215)),SCENE.scene.add(new THREE.PlaneHelper($[3],20,16777215)),SCENE.scene.add(new THREE.PlaneHelper($[4],20,16777215));let u="triangle"==s?3:4;for(let c=0;c<u;c++)$[c].userData={originalConstant:$[c].constant,currentConstrain:t?5:$[c].constant,desiredConstant:$[c].constant},t&&($[c].constant=5);if(e.clipPlanes=$,e.pivots)for(let p of e.pivots)for(let d of p.children)for(let f of(d.material&&(d.material.clippingPlanes=e.clipPlanes,d.material.clipIntersection=!0),d.children))f.material&&(f.material.clippingPlanes=e.clipPlanes,f.material.clipIntersection=!0)}function removeNegativeSpace(e){for(let t=0;t<e.clipPlanes.length;t++)e.clipPlanes[t].userData&&(e.clipPlanes[t].userData.desiredConstant=5);setTimeout(5e3,()=>{if(e.pivots)for(let t of e.pivots)for(let r of t.children)for(let a of(r.material&&(r.material.clippingPlanes=void 0,r.material.needsUpdate=!0),r.children))a.material&&(a.material.clippingPlanes=void 0,a.material.needsUpdate=!0);delete e.clipPlanes})}function average_delta_array(e){let t=0;for(let r=1;r<e.length;r++)t+=Math.abs(e[r]-e[r-1]);return t/(e.length-1)}function map_scale(e,t,r){if(r<=e[0])return t[0];if(r>=e[e.length-1])return t[t.length-1];for(let a=0;a<t.length-1;a++)if(r>=e[a]&r<e[a+1])return t[a]}function delta_gap(e,t){let r=average_delta_array(t),a=(e-t[t.length-1])/r-1;return null==a||isNaN(a)?0:a}let adjust_tier=(e,t)=>{if(0==t)return t;let r=t<0?-1:1;return t=Math.abs(t),e>=0&&(t-=1),e>=1&&(t-=2),e>=2&&(t-=3),-0==(t=Math.max(0,t)*r)?0:t};function calculateTiers(e){if(!e){console.warn("No data");return}let t={royalty:[[-.4,-.3,-.1,0,.1,.3,.6],[-3,-2,-1,0,1,2,3]],contract_activity:[[-1,-.5,-.25,0,.25,.5,.75],[-3,-2,-1,0,1,2,3]],clustering_mode:[[-1,-.5,-.25,0,.25,.5,.75],[-3,-2,-1,0,1,2,3]],approvals:[[-1,-.5,-.25,0,.25,.5,.75],[-3,-2,-1,0,1,2,3]]},r=new Date().getTime()/1e3;e[0];let a=e[1],n=e[2],o=e[3],i=e[4];e[5];let l=e[6];a=[...new Set(a)],n=[...new Set(n)],o=[...new Set(o)],l=[...new Set(l)],a.sort(),n.sort(),o.sort(),l.sort();let s=Array.from(n),$=Array.from(o),u=Array.from(a),c=Array.from(i);a.length<=1&&(u=[1715731200].concat(a)),l.length<=1&&(l=[1715731200].concat(l)),n.length<=1&&(s=[1715731200].concat(n)),o.length<=1&&($=[1715731200].concat(o)),i.length<=1&&(c=[25e15].concat(i));let p=delta_gap(r,a.length>1?a:u),d=delta_gap(r,n.length>1?n:s),f=delta_gap(r,o.length>1?o:$),_=0;c.length>1&&(_=c[c.length-1]/(c.slice(0,-1).reduce((e,t)=>e+t)/(c.length-1))-1);let g=delta_gap(r,a.concat(s).sort().slice(-5)),m=adjust_tier(f,map_scale(t.royalty[0],t.royalty[1],_)),h=adjust_tier(p,map_scale(t.contract_activity[0],t.contract_activity[1],-1*g)),x=adjust_tier(p,map_scale(t.clustering_mode[0],t.clustering_mode[1],-1*p)),b=adjust_tier(d,map_scale(t.approvals[0],t.approvals[1],-1*d));SCENE.data.contract.tiers={royalty_received_tier:m,contract_activity_tier:h,sends_tier:x,approvals_tier:b},console.log("Tiers:",SCENE.data.contract.tiers)}function tierToValue(e,t){return e[[-3,-2,-1,0,1,2,3].indexOf(t)]}function getCurrentTs(){return new Date().getTime()/1e3}</script><script>(function(global){
    var module = global.noise = {};

    function Grad(x, y, z) {
      this.x = x; this.y = y; this.z = z;
    }

    Grad.prototype.dot2 = function(x, y) {
      return this.x*x + this.y*y;
    };

    Grad.prototype.dot3 = function(x, y, z) {
      return this.x*x + this.y*y + this.z*z;
    };

    var grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),
                 new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),
                 new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];

    var p = [151,160,137,91,90,15,
    131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
    190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
    88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
    77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
    102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
    135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
    5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
    223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
    129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
    251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
    49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
    138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];
    // To remove the need for index wrapping, double the permutation table length
    var perm = new Array(512);
    var gradP = new Array(512);

    // This isn't a very good seeding function, but it works ok. It supports 2^16
    // different seed values. Write something better if you need more seeds.
    module.seed = function(seed) {
      if(seed > 0 && seed < 1) {
        // Scale the seed out
        seed *= 65536;
      }

      seed = Math.floor(seed);
      if(seed < 256) {
        seed |= seed << 8;
      }

      for(var i = 0; i < 256; i++) {
        var v;
        if (i & 1) {
          v = p[i] ^ (seed & 255);
        } else {
          v = p[i] ^ ((seed>>8) & 255);
        }

        perm[i] = perm[i + 256] = v;
        gradP[i] = gradP[i + 256] = grad3[v % 12];
      }
    };

    module.seed(0);

    /*
    for(var i=0; i<256; i++) {
      perm[i] = perm[i + 256] = p[i];
      gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];
    }*/

    // Skewing and unskewing factors for 2, 3, and 4 dimensions
    var F2 = 0.5*(Math.sqrt(3)-1);
    var G2 = (3-Math.sqrt(3))/6;

    var F3 = 1/3;
    var G3 = 1/6;

    // 2D simplex noise
    module.simplex2 = function(xin, yin) {
      var n0, n1, n2; // Noise contributions from the three corners
      // Skew the input space to determine which simplex cell we're in
      var s = (xin+yin)*F2; // Hairy factor for 2D
      var i = Math.floor(xin+s);
      var j = Math.floor(yin+s);
      var t = (i+j)*G2;
      var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.
      var y0 = yin-j+t;
      // For the 2D case, the simplex shape is an equilateral triangle.
      // Determine which simplex we are in.
      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords
      if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)
        i1=1; j1=0;
      } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)
        i1=0; j1=1;
      }
      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and
      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where
      // c = (3-sqrt(3))/6
      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords
      var y1 = y0 - j1 + G2;
      var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords
      var y2 = y0 - 1 + 2 * G2;
      // Work out the hashed gradient indices of the three simplex corners
      i &= 255;
      j &= 255;
      var gi0 = gradP[i+perm[j]];
      var gi1 = gradP[i+i1+perm[j+j1]];
      var gi2 = gradP[i+1+perm[j+1]];
      // Calculate the contribution from the three corners
      var t0 = 0.5 - x0*x0-y0*y0;
      if(t0<0) {
        n0 = 0;
      } else {
        t0 *= t0;
        n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient
      }
      var t1 = 0.5 - x1*x1-y1*y1;
      if(t1<0) {
        n1 = 0;
      } else {
        t1 *= t1;
        n1 = t1 * t1 * gi1.dot2(x1, y1);
      }
      var t2 = 0.5 - x2*x2-y2*y2;
      if(t2<0) {
        n2 = 0;
      } else {
        t2 *= t2;
        n2 = t2 * t2 * gi2.dot2(x2, y2);
      }
      // Add contributions from each corner to get the final noise value.
      // The result is scaled to return values in the interval [-1,1].
      return 70 * (n0 + n1 + n2);
    };

    // 3D simplex noise
    module.simplex3 = function(xin, yin, zin) {
      var n0, n1, n2, n3; // Noise contributions from the four corners

      // Skew the input space to determine which simplex cell we're in
      var s = (xin+yin+zin)*F3; // Hairy factor for 2D
      var i = Math.floor(xin+s);
      var j = Math.floor(yin+s);
      var k = Math.floor(zin+s);

      var t = (i+j+k)*G3;
      var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.
      var y0 = yin-j+t;
      var z0 = zin-k+t;

      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.
      // Determine which simplex we are in.
      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords
      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords
      if(x0 >= y0) {
        if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }
        else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }
        else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }
      } else {
        if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }
        else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }
        else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }
      }
      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),
      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and
      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where
      // c = 1/6.
      var x1 = x0 - i1 + G3; // Offsets for second corner
      var y1 = y0 - j1 + G3;
      var z1 = z0 - k1 + G3;

      var x2 = x0 - i2 + 2 * G3; // Offsets for third corner
      var y2 = y0 - j2 + 2 * G3;
      var z2 = z0 - k2 + 2 * G3;

      var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner
      var y3 = y0 - 1 + 3 * G3;
      var z3 = z0 - 1 + 3 * G3;

      // Work out the hashed gradient indices of the four simplex corners
      i &= 255;
      j &= 255;
      k &= 255;
      var gi0 = gradP[i+   perm[j+   perm[k   ]]];
      var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];
      var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];
      var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];

      // Calculate the contribution from the four corners
      var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;
      if(t0<0) {
        n0 = 0;
      } else {
        t0 *= t0;
        n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient
      }
      var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;
      if(t1<0) {
        n1 = 0;
      } else {
        t1 *= t1;
        n1 = t1 * t1 * gi1.dot3(x1, y1, z1);
      }
      var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;
      if(t2<0) {
        n2 = 0;
      } else {
        t2 *= t2;
        n2 = t2 * t2 * gi2.dot3(x2, y2, z2);
      }
      var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;
      if(t3<0) {
        n3 = 0;
      } else {
        t3 *= t3;
        n3 = t3 * t3 * gi3.dot3(x3, y3, z3);
      }
      // Add contributions from each corner to get the final noise value.
      // The result is scaled to return values in the interval [-1,1].
      return 32 * (n0 + n1 + n2 + n3);

    };

    // ##### Perlin noise stuff

    function fade(t) {
      return t*t*t*(t*(t*6-15)+10);
    }

    function lerp(a, b, t) {
      return (1-t)*a + t*b;
    }

    // 2D Perlin Noise
    module.perlin2 = function(x, y) {
      // Find unit grid cell containing point
      var X = Math.floor(x), Y = Math.floor(y);
      // Get relative xy coordinates of point within that cell
      x = x - X; y = y - Y;
      // Wrap the integer cells at 255 (smaller integer period can be introduced here)
      X = X & 255; Y = Y & 255;

      // Calculate noise contributions from each of the four corners
      var n00 = gradP[X+perm[Y]].dot2(x, y);
      var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);
      var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);
      var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);

      // Compute the fade curve value for x
      var u = fade(x);

      // Interpolate the four results
      return lerp(
          lerp(n00, n10, u),
          lerp(n01, n11, u),
         fade(y));
    };

    // 3D Perlin Noise
    module.perlin3 = function(x, y, z) {
      // Find unit grid cell containing point
      var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);
      // Get relative xyz coordinates of point within that cell
      x = x - X; y = y - Y; z = z - Z;
      // Wrap the integer cells at 255 (smaller integer period can be introduced here)
      X = X & 255; Y = Y & 255; Z = Z & 255;

      // Calculate noise contributions from each of the eight corners
      var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);
      var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);
      var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);
      var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);
      var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);
      var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);
      var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);
      var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);

      // Compute the fade curve value for x, y, z
      var u = fade(x);
      var v = fade(y);
      var w = fade(z);

      // Interpolate
      return lerp(
          lerp(
            lerp(n000, n100, u),
            lerp(n001, n101, u), w),
          lerp(
            lerp(n010, n110, u),
            lerp(n011, n111, u), w),
         v);
    };

})(this);
</script><script>( function () {

	// https://cs.nyu.edu/~perlin/noise/
	const _p = [ 151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180 ];

	for ( let i = 0; i < 256; i ++ ) {

		_p[ 256 + i ] = _p[ i ];

	}

	function fade( t ) {

		return t * t * t * ( t * ( t * 6 - 15 ) + 10 );

	}

	function lerp( t, a, b ) {

		return a + t * ( b - a );

	}

	function grad( hash, x, y, z ) {

		const h = hash & 15;
		const u = h < 8 ? x : y,
			v = h < 4 ? y : h == 12 || h == 14 ? x : z;
		return ( ( h & 1 ) == 0 ? u : - u ) + ( ( h & 2 ) == 0 ? v : - v );

	}

	class ImprovedNoise {

		noise( x, y, z ) {

			const floorX = Math.floor( x ),
				floorY = Math.floor( y ),
				floorZ = Math.floor( z );
			const X = floorX & 255,
				Y = floorY & 255,
				Z = floorZ & 255;
			x -= floorX;
			y -= floorY;
			z -= floorZ;
			const xMinus1 = x - 1,
				yMinus1 = y - 1,
				zMinus1 = z - 1;
			const u = fade( x ),
				v = fade( y ),
				w = fade( z );
			const A = _p[ X ] + Y,
				AA = _p[ A ] + Z,
				AB = _p[ A + 1 ] + Z,
				B = _p[ X + 1 ] + Y,
				BA = _p[ B ] + Z,
				BB = _p[ B + 1 ] + Z;
			return lerp( w, lerp( v, lerp( u, grad( _p[ AA ], x, y, z ), grad( _p[ BA ], xMinus1, y, z ) ), lerp( u, grad( _p[ AB ], x, yMinus1, z ), grad( _p[ BB ], xMinus1, yMinus1, z ) ) ), lerp( v, lerp( u, grad( _p[ AA + 1 ], x, y, zMinus1 ), grad( _p[ BA + 1 ], xMinus1, y, zMinus1 ) ), lerp( u, grad( _p[ AB + 1 ], x, yMinus1, zMinus1 ), grad( _p[ BB + 1 ], xMinus1, yMinus1, zMinus1 ) ) ) );

		}

	}

	THREE.ImprovedNoise = ImprovedNoise;

} )();
</script><script>( function () {

	const _object_pattern = /^[og]\s*(.+)?/; // mtllib file_reference

	const _material_library_pattern = /^mtllib /; // usemtl material_name

	const _material_use_pattern = /^usemtl /; // usemap map_name

	const _map_use_pattern = /^usemap /;
	const _face_vertex_data_separator_pattern = /\s+/;

	const _vA = new THREE.Vector3();

	const _vB = new THREE.Vector3();

	const _vC = new THREE.Vector3();

	const _ab = new THREE.Vector3();

	const _cb = new THREE.Vector3();

	const _color = new THREE.Color();

	function ParserState() {

		const state = {
			objects: [],
			object: {},
			vertices: [],
			normals: [],
			colors: [],
			uvs: [],
			materials: {},
			materialLibraries: [],
			startObject: function ( name, fromDeclaration ) {

				// If the current object (initial from reset) is not from a g/o declaration in the parsed
				// file. We need to use it for the first parsed g/o to keep things in sync.
				if ( this.object && this.object.fromDeclaration === false ) {

					this.object.name = name;
					this.object.fromDeclaration = fromDeclaration !== false;
					return;

				}

				const previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;

				if ( this.object && typeof this.object._finalize === 'function' ) {

					this.object._finalize( true );

				}

				this.object = {
					name: name || '',
					fromDeclaration: fromDeclaration !== false,
					geometry: {
						vertices: [],
						normals: [],
						colors: [],
						uvs: [],
						hasUVIndices: false
					},
					materials: [],
					smooth: true,
					startMaterial: function ( name, libraries ) {

						const previous = this._finalize( false ); // New usemtl declaration overwrites an inherited material, except if faces were declared
						// after the material, then it must be preserved for proper MultiMaterial continuation.


						if ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {

							this.materials.splice( previous.index, 1 );

						}

						const material = {
							index: this.materials.length,
							name: name || '',
							mtllib: Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '',
							smooth: previous !== undefined ? previous.smooth : this.smooth,
							groupStart: previous !== undefined ? previous.groupEnd : 0,
							groupEnd: - 1,
							groupCount: - 1,
							inherited: false,
							clone: function ( index ) {

								const cloned = {
									index: typeof index === 'number' ? index : this.index,
									name: this.name,
									mtllib: this.mtllib,
									smooth: this.smooth,
									groupStart: 0,
									groupEnd: - 1,
									groupCount: - 1,
									inherited: false
								};
								cloned.clone = this.clone.bind( cloned );
								return cloned;

							}
						};
						this.materials.push( material );
						return material;

					},
					currentMaterial: function () {

						if ( this.materials.length > 0 ) {

							return this.materials[ this.materials.length - 1 ];

						}

						return undefined;

					},
					_finalize: function ( end ) {

						const lastMultiMaterial = this.currentMaterial();

						if ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {

							lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;
							lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;
							lastMultiMaterial.inherited = false;

						} // Ignore objects tail materials if no face declarations followed them before a new o/g started.


						if ( end && this.materials.length > 1 ) {

							for ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {

								if ( this.materials[ mi ].groupCount <= 0 ) {

									this.materials.splice( mi, 1 );

								}

							}

						} // Guarantee at least one empty material, this makes the creation later more straight forward.


						if ( end && this.materials.length === 0 ) {

							this.materials.push( {
								name: '',
								smooth: this.smooth
							} );

						}

						return lastMultiMaterial;

					}
				}; // Inherit previous objects material.
				// Spec tells us that a declared material must be set to all objects until a new material is declared.
				// If a usemtl declaration is encountered while this new object is being parsed, it will
				// overwrite the inherited material. Exception being that there was already face declarations
				// to the inherited material, then it will be preserved for proper MultiMaterial continuation.

				if ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {

					const declared = previousMaterial.clone( 0 );
					declared.inherited = true;
					this.object.materials.push( declared );

				}

				this.objects.push( this.object );

			},
			finalize: function () {

				if ( this.object && typeof this.object._finalize === 'function' ) {

					this.object._finalize( true );

				}

			},
			parseVertexIndex: function ( value, len ) {

				const index = parseInt( value, 10 );
				return ( index >= 0 ? index - 1 : index + len / 3 ) * 3;

			},
			parseNormalIndex: function ( value, len ) {

				const index = parseInt( value, 10 );
				return ( index >= 0 ? index - 1 : index + len / 3 ) * 3;

			},
			parseUVIndex: function ( value, len ) {

				const index = parseInt( value, 10 );
				return ( index >= 0 ? index - 1 : index + len / 2 ) * 2;

			},
			addVertex: function ( a, b, c ) {

				const src = this.vertices;
				const dst = this.object.geometry.vertices;
				dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );
				dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );
				dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );

			},
			addVertexPoint: function ( a ) {

				const src = this.vertices;
				const dst = this.object.geometry.vertices;
				dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );

			},
			addVertexLine: function ( a ) {

				const src = this.vertices;
				const dst = this.object.geometry.vertices;
				dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );

			},
			addNormal: function ( a, b, c ) {

				const src = this.normals;
				const dst = this.object.geometry.normals;
				dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );
				dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );
				dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );

			},
			addFaceNormal: function ( a, b, c ) {

				const src = this.vertices;
				const dst = this.object.geometry.normals;

				_vA.fromArray( src, a );

				_vB.fromArray( src, b );

				_vC.fromArray( src, c );

				_cb.subVectors( _vC, _vB );

				_ab.subVectors( _vA, _vB );

				_cb.cross( _ab );

				_cb.normalize();

				dst.push( _cb.x, _cb.y, _cb.z );
				dst.push( _cb.x, _cb.y, _cb.z );
				dst.push( _cb.x, _cb.y, _cb.z );

			},
			addColor: function ( a, b, c ) {

				const src = this.colors;
				const dst = this.object.geometry.colors;
				if ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );
				if ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );
				if ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );

			},
			addUV: function ( a, b, c ) {

				const src = this.uvs;
				const dst = this.object.geometry.uvs;
				dst.push( src[ a + 0 ], src[ a + 1 ] );
				dst.push( src[ b + 0 ], src[ b + 1 ] );
				dst.push( src[ c + 0 ], src[ c + 1 ] );

			},
			addDefaultUV: function () {

				const dst = this.object.geometry.uvs;
				dst.push( 0, 0 );
				dst.push( 0, 0 );
				dst.push( 0, 0 );

			},
			addUVLine: function ( a ) {

				const src = this.uvs;
				const dst = this.object.geometry.uvs;
				dst.push( src[ a + 0 ], src[ a + 1 ] );

			},
			addFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {

				const vLen = this.vertices.length;
				let ia = this.parseVertexIndex( a, vLen );
				let ib = this.parseVertexIndex( b, vLen );
				let ic = this.parseVertexIndex( c, vLen );
				this.addVertex( ia, ib, ic );
				this.addColor( ia, ib, ic ); // normals

				if ( na !== undefined && na !== '' ) {

					const nLen = this.normals.length;
					ia = this.parseNormalIndex( na, nLen );
					ib = this.parseNormalIndex( nb, nLen );
					ic = this.parseNormalIndex( nc, nLen );
					this.addNormal( ia, ib, ic );

				} else {

					this.addFaceNormal( ia, ib, ic );

				} // uvs


				if ( ua !== undefined && ua !== '' ) {

					const uvLen = this.uvs.length;
					ia = this.parseUVIndex( ua, uvLen );
					ib = this.parseUVIndex( ub, uvLen );
					ic = this.parseUVIndex( uc, uvLen );
					this.addUV( ia, ib, ic );
					this.object.geometry.hasUVIndices = true;

				} else {

					// add placeholder values (for inconsistent face definitions)
					this.addDefaultUV();

				}

			},
			addPointGeometry: function ( vertices ) {

				this.object.geometry.type = 'Points';
				const vLen = this.vertices.length;

				for ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {

					const index = this.parseVertexIndex( vertices[ vi ], vLen );
					this.addVertexPoint( index );
					this.addColor( index );

				}

			},
			addLineGeometry: function ( vertices, uvs ) {

				this.object.geometry.type = 'Line';
				const vLen = this.vertices.length;
				const uvLen = this.uvs.length;

				for ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {

					this.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );

				}

				for ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {

					this.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );

				}

			}
		};
		state.startObject( '', false );
		return state;

	} //


	class OBJLoader extends THREE.Loader {

		constructor( manager ) {

			super( manager );
			this.materials = null;

		}

		load( url, onLoad, onProgress, onError ) {

			const scope = this;
			const loader = new THREE.FileLoader( this.manager );
			loader.setPath( this.path );
			loader.setRequestHeader( this.requestHeader );
			loader.setWithCredentials( this.withCredentials );
			loader.load( url, function ( text ) {

				try {

					onLoad( scope.parse( text ) );

				} catch ( e ) {

					if ( onError ) {

						onError( e );

					} else {

						console.error( e );

					}

					scope.manager.itemError( url );

				}

			}, onProgress, onError );

		}

		setMaterials( materials ) {

			this.materials = materials;
			return this;

		}

		parse( text ) {

			const state = new ParserState();

			if ( text.indexOf( '\r\n' ) !== - 1 ) {

				// This is faster than String.split with regex that splits on both
				text = text.replace( /\r\n/g, '\n' );

			}

			if ( text.indexOf( '\\\n' ) !== - 1 ) {

				// join lines separated by a line continuation character (\)
				text = text.replace( /\\\n/g, '' );

			}

			const lines = text.split( '\n' );
			let result = [];

			for ( let i = 0, l = lines.length; i < l; i ++ ) {

				const line = lines[ i ].trimStart();
				if ( line.length === 0 ) continue;
				const lineFirstChar = line.charAt( 0 ); // @todo invoke passed in handler if any

				if ( lineFirstChar === '#' ) continue;

				if ( lineFirstChar === 'v' ) {

					const data = line.split( _face_vertex_data_separator_pattern );

					switch ( data[ 0 ] ) {

						case 'v':
							state.vertices.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) );

							if ( data.length >= 7 ) {

								_color.setRGB( parseFloat( data[ 4 ] ), parseFloat( data[ 5 ] ), parseFloat( data[ 6 ] ) ).convertSRGBToLinear();

								state.colors.push( _color.r, _color.g, _color.b );

							} else {

								// if no colors are defined, add placeholders so color and vertex indices match
								state.colors.push( undefined, undefined, undefined );

							}

							break;

						case 'vn':
							state.normals.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ), parseFloat( data[ 3 ] ) );
							break;

						case 'vt':
							state.uvs.push( parseFloat( data[ 1 ] ), parseFloat( data[ 2 ] ) );
							break;

					}

				} else if ( lineFirstChar === 'f' ) {

					const lineData = line.slice( 1 ).trim();
					const vertexData = lineData.split( _face_vertex_data_separator_pattern );
					const faceVertices = []; // Parse the face vertex data into an easy to work with format

					for ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {

						const vertex = vertexData[ j ];

						if ( vertex.length > 0 ) {

							const vertexParts = vertex.split( '/' );
							faceVertices.push( vertexParts );

						}

					} // Draw an edge between the first vertex and all subsequent vertices to form an n-gon


					const v1 = faceVertices[ 0 ];

					for ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {

						const v2 = faceVertices[ j ];
						const v3 = faceVertices[ j + 1 ];
						state.addFace( v1[ 0 ], v2[ 0 ], v3[ 0 ], v1[ 1 ], v2[ 1 ], v3[ 1 ], v1[ 2 ], v2[ 2 ], v3[ 2 ] );

					}

				} else if ( lineFirstChar === 'l' ) {

					const lineParts = line.substring( 1 ).trim().split( ' ' );
					let lineVertices = [];
					const lineUVs = [];

					if ( line.indexOf( '/' ) === - 1 ) {

						lineVertices = lineParts;

					} else {

						for ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {

							const parts = lineParts[ li ].split( '/' );
							if ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );
							if ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );

						}

					}

					state.addLineGeometry( lineVertices, lineUVs );

				} else if ( lineFirstChar === 'p' ) {

					const lineData = line.slice( 1 ).trim();
					const pointData = lineData.split( ' ' );
					state.addPointGeometry( pointData );

				} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {

					// o object_name
					// or
					// g group_name
					// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869
					// let name = result[ 0 ].slice( 1 ).trim();
					const name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );
					state.startObject( name );

				} else if ( _material_use_pattern.test( line ) ) {

					// material
					state.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );

				} else if ( _material_library_pattern.test( line ) ) {

					// mtl file
					state.materialLibraries.push( line.substring( 7 ).trim() );

				} else if ( _map_use_pattern.test( line ) ) {

					// the line is parsed but ignored since the loader assumes textures are defined MTL files
					// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)
					console.warn( 'THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.' );

				} else if ( lineFirstChar === 's' ) {

					result = line.split( ' ' ); // smooth shading
					// @todo Handle files that have varying smooth values for a set of faces inside one geometry,
					// but does not define a usemtl for each face set.
					// This should be detected and a dummy material created (later MultiMaterial and geometry groups).
					// This requires some care to not create extra material on each smooth value for "normal" obj files.
					// where explicit usemtl defines geometry groups.
					// Example asset: examples/models/obj/cerberus/Cerberus.obj

					/*
        	 * http://paulbourke.net/dataformats/obj/
        	 *
        	 * From chapter "Grouping" Syntax explanation "s group_number":
        	 * "group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.
        	 * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form
        	 * surfaces, smoothing groups are either turned on or off; there is no difference between values greater
        	 * than 0."
        	 */

					if ( result.length > 1 ) {

						const value = result[ 1 ].trim().toLowerCase();
						state.object.smooth = value !== '0' && value !== 'off';

					} else {

						// ZBrush can produce "s" lines #11707
						state.object.smooth = true;

					}

					const material = state.object.currentMaterial();
					if ( material ) material.smooth = state.object.smooth;

				} else {

					// Handle null terminated files without exception
					if ( line === '\0' ) continue;
					console.warn( 'THREE.OBJLoader: Unexpected line: "' + line + '"' );

				}

			}

			state.finalize();
			const container = new THREE.Group();
			container.materialLibraries = [].concat( state.materialLibraries );
			const hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );

			if ( hasPrimitives === true ) {

				for ( let i = 0, l = state.objects.length; i < l; i ++ ) {

					const object = state.objects[ i ];
					const geometry = object.geometry;
					const materials = object.materials;
					const isLine = geometry.type === 'Line';
					const isPoints = geometry.type === 'Points';
					let hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces

					if ( geometry.vertices.length === 0 ) continue;
					const buffergeometry = new THREE.BufferGeometry();
					buffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( geometry.vertices, 3 ) );

					if ( geometry.normals.length > 0 ) {

						buffergeometry.setAttribute( 'normal', new THREE.Float32BufferAttribute( geometry.normals, 3 ) );

					}

					if ( geometry.colors.length > 0 ) {

						hasVertexColors = true;
						buffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( geometry.colors, 3 ) );

					}

					if ( geometry.hasUVIndices === true ) {

						buffergeometry.setAttribute( 'uv', new THREE.Float32BufferAttribute( geometry.uvs, 2 ) );

					} // Create materials


					const createdMaterials = [];

					for ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {

						const sourceMaterial = materials[ mi ];
						const materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;
						let material = state.materials[ materialHash ];

						if ( this.materials !== null ) {

							material = this.materials.create( sourceMaterial.name ); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.

							if ( isLine && material && ! ( material instanceof THREE.LineBasicMaterial ) ) {

								const materialLine = new THREE.LineBasicMaterial();
								THREE.Material.prototype.copy.call( materialLine, material );
								materialLine.color.copy( material.color );
								material = materialLine;

							} else if ( isPoints && material && ! ( material instanceof THREE.PointsMaterial ) ) {

								const materialPoints = new THREE.PointsMaterial( {
									size: 10,
									sizeAttenuation: false
								} );
								THREE.Material.prototype.copy.call( materialPoints, material );
								materialPoints.color.copy( material.color );
								materialPoints.map = material.map;
								material = materialPoints;

							}

						}

						if ( material === undefined ) {

							if ( isLine ) {

								material = new THREE.LineBasicMaterial();

							} else if ( isPoints ) {

								material = new THREE.PointsMaterial( {
									size: 1,
									sizeAttenuation: false
								} );

							} else {

								material = new THREE.MeshPhongMaterial({color: "#000000"});

							}

							material.name = sourceMaterial.name;
							material.flatShading = sourceMaterial.smooth ? false : true;
							material.vertexColors = hasVertexColors;
							state.materials[ materialHash ] = material;

						}

						createdMaterials.push( material );

					} // Create mesh


					let mesh;

					if ( createdMaterials.length > 1 ) {

						for ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {

							const sourceMaterial = materials[ mi ];
							buffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );

						}

						if ( isLine ) {

							mesh = new THREE.LineSegments( buffergeometry, createdMaterials );

						} else if ( isPoints ) {

							mesh = new THREE.Points( buffergeometry, createdMaterials );

						} else {

							mesh = new THREE.Mesh( buffergeometry, createdMaterials );

						}

					} else {

						if ( isLine ) {

							mesh = new THREE.LineSegments( buffergeometry, createdMaterials[ 0 ] );

						} else if ( isPoints ) {

							mesh = new THREE.Points( buffergeometry, createdMaterials[ 0 ] );

						} else {

							mesh = new THREE.Mesh( buffergeometry, createdMaterials[ 0 ] );

						}

					}

					mesh.name = object.name;
					container.add( mesh );

				}

			} else {

				// if there is only the default parser state object with no geometry data, interpret data as point cloud
				if ( state.vertices.length > 0 ) {

					const material = new THREE.PointsMaterial( {
						size: 1,
						sizeAttenuation: false
					} );
					const buffergeometry = new THREE.BufferGeometry();
					buffergeometry.setAttribute( 'position', new THREE.Float32BufferAttribute( state.vertices, 3 ) );

					if ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {

						buffergeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( state.colors, 3 ) );
						material.vertexColors = true;

					}

					const points = new THREE.Points( buffergeometry, material );
					container.add( points );

				}

			}

			return container;

		}

	}

	THREE.OBJLoader = OBJLoader;

} )();
</script><script type="text/javascript+gzip" src="data:text/javascript;base64,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"></script><script type="text/javascript+gzip" src="data:text/javascript;base64,H4sIAAAAAAAAA+y7V6/sTLIl9l/mtQQUvREwD/Tee77RFb331J8Xz9c93X2hi5mrwUCChLsBnsPNIjMzIlZErFWbmSZrgSFucW37Uqz/9f9Y570uy64A//f/Uvu0YZ+AIpQj9f7ojldxXvmeaX/+YSWGit7/mS1QsOLPDUxIS0GoURQdde+vgWzxsle753suSELnBaIdud6JRRC5qT3fppDcqUO1ZdTffkyWRDKBbxLIByRB7mKo201HPXacqN/nW9ORQ90DTjek2TioJkec7tjXMbezm6LfGiOwavNBSlMssUIAzzTwgcihkTS49uyZkPf5KhbIOnanP79vcWhX6i2VBTshaUgDyQPUVmAfUe+VAQdaEqcf2XtuOMipBtqpsVSpP+2uudkVPRIc93ytMtStsdKtPhSiPhykutJtNBpoNNb1Oqj8+1GbNUVkvd0bnczZ9T/WdMdCREp9BeQihak3CedwtuePtqewPLzjoYbbHu/4h9ZI25/n1VBH08GuCgbcs1v757it3WWQfid/7AjIXRLlNm6mKupJMGeBWvrnnK+t1L/O+Y6D/s0vDtqkEHAUAn++c+8a8/pdrLZUQB+jt5vXf2Mu2qdRE0cm+nfKoK9/siMWtCMOru71956L2qE5yPWXXwVwTQcNy4TqyAXySQTy/Ncx3s/26G/+3v/CBEyPKWwfGVQdGUNcakMd/3bdtO66QJ2INpCx46FC6PMPHPX6kTokEoXUn/lPFQK3f7MG2ObzwfoP2k0+vtidsUM6cagfeSg3sedDcYAC0t/GPI1Wv+OAB944eSlErq9d9N/Goq3Xzve6/tpClVpjveNRoxu8uH6f/3Ndcf7tGLFnV7ngkVIjne/9m8Zym9ZUnuZKmM5a75Enf/khpDA3INskiFFbeJ97faE11K0zwKk5wG3w1qU1I/jn0P3xr9hl7KT/wXn83h/99+b56/D/zNNGz9S/dm1R+Mdf3RYFeffGZo9f2/81lu/6j1Qg7z9r+mstf/eN6wGYE6BPLvBvXH3ZfvH357rad1PMTk3UVH3cW4/hgL3BZm/OWLAmcJshvOuswdemqvnr88CudVb7mx0cqL8YPyLY3/7EwfH+rO1vsX+xeURQ1xrDv+CHHZH3WdhgqSe6ATTqrTeHrVt/bTbc914HrA22aiJXAyKXQ14M/8s85J0E+ZT2/GoLZJMHYPfm3L/YYb92jG8NsCBN0K53zc077v3accYNtUVNeWkO2Gqu9kSQ9daNvH7t+ytX/+EfoXv9Q96F+6de/ZWrbhxyH4m9/tQELBXa8u+YxaJA/yunX4w1We+/MfTbN05PzvlQzk5TOuhAFKAvRjvuvecPTvYkeG1s+Hdd0Rk9fP/WL+CN86azdK8xf2znrtcfl/boTcxSpw5JZ/Ti8r/NmUNVlzb/Lr4AnX0P8A++dMAOY8AY9CMebDgK5c56sZL+ybP2b7GR+H/N6T9jIafEVPpr07vuP9fLSaqJ/6HdKYRCcSgD8Vvj/zkvXWU9/6eOd9mgvXiI7zePyyikz1Tomii0pxRCjrxH23/2m39dDw2kNz2lAT+8uX6mfVarzz/isSbOP3xcRfBfY5HSoFd5/x/0f6/XhhD3MauhahAh+hO9/s9ePwMv3v7E5O0Vgv7X57EgAX/y5z/g/3/J7/9V/v+HLU3y5mwM+W+vlY6/xeU8/ta39C77g1WG/HsdnqQk1P/UP/QPrlX4L59xb718MdqdudAdafPX/X/F1Wtt4W/3/Utv/jPev+n5/h6/OZbV0tdcfpAD/+ESJO14Nu2LTYL74JShx5C7IEIVCK4kaLJooRetPXQowzTpwyprYJs8imuSzTEE3bvuQUjcawIw+4raHZKDHYylsVZ8zssvibOYhyTkx0VRxebANqXSB34GmqJqSjqWZth/v0z3iwUs2Bo55PP+tV0m8lep1ojB0dkLtX+eIrVanyZ3ZR6N7GpNvfdlEfOeloj1nooM9Y/TWtpVinD5yxJrZJeoLPy/jLmzFRXyZyHVyMpeWshTxXu1pK8sFKh/HfMBHsWJJbqleAu5gSKbN/re/GwrJrazgdK1Cqpiyf4TQgb8yaRyetB7WgbmqV6e5lH9x2sVi43ymUIseox5qbN/FD1OuQITKWJQDGB+0t4Pwe5zp0tLJSe7U3rJZ/RseEPWNxWFVQhXp5xU++Iu1hNhAtzJKJR7sviTXQUVHnj2FDlMiH7CUFfc1gClnGxBwVR+ygSVUtT4cX4VpXTijVHuMYXhOq1f8hopkqIiyWWET3yRlD7SpClA/c2OkOEXcQSpXSKonVWcrEIpCG8w5ynWlN65SH3CEwFlBA0BrA5Q9tDibk1rhJFXZv+xQHx2NwgQKEYtmbATrD2ATcKwyHumlsvgxNMYO1lrB2wL5i8mGx5TbOTuQaenBVFcBWPEHgZB/S6sux+bi0TX2Rf3yf0JKjPOybjB50SJmulSlRpK/okg8bMz8WYNmOfbOZMjBRI45AQ4BnGpX4EIcATfREUW9xVRytUGs/cTOkLwKAh29LlklEMgVM2XffSXxdR7508DoGMi9rImruXzfTHXzydXa9mRRctGq5Jp0YamphToKpEz9TykRHqbdc9PgiLsofSWdxCzSH/C7Uv80H2THRfn7/WL4R6+kNufE2VwW5c/f5J3m6GRjj21Wsgns2zlIC9qlyzVa82BJPuxnQLN2TxSAGZyju0ve1M0fh2lLwy2Z0DbyazEr0MJcPK/C3B9D4A+AZ4Dx1X4MYjRKnmtWI7GTuoUlnJdqwVLVw3pa7NRXXSvBDPvdFg97plccgBFfptHFMkCFY0w4eD7qwLb0eEyReFCk4yJNX1P/Ep1GA4og6OKG5wBXFRyeW6A9usO8tlr1MfyjizO76l0d2DuVHsKE9qkwpcUwPbF/N5ZzXMtle+du4np8SkmlAwdMm5aXd/fzwLzvaJj7sA1A2ERei88KotoIgho6Q439LMTg8ahFuQkU2buU6UDgiunZzfXFh0im5d3w2xe8KzYcELB/Se9wPIFDCWItEfp1udZY0I66fzJa35B+4UjirDH3zi3nMdU2GTenLvdLqOIIUDEIDanDmTPY1+LbuwsJF3DrDLS6aGCeqQ/AwIcxJBe13aPAqWH4lckuKYSPij8FtgedvP4qIsv146W2TKXLwdFZuy1iifMKzGg+wUBYwBaOFvnM2CTswuan+ovAxISIUNOgUoitRd7Ba2Q6gYjtk5yn1eiIbKv3GK8OG55/8NHEI5OMlTqNOlVSGlfNEC5jYKDBKROjucg/heiPR6akzq9KMs5mZ34JQKVWf1wm4s3gBz/6eRJCgK8qSkPd4Q0tQLspD7Ul0Jh8ODBvKSlgRnRvqeYwdEksY7BXfPUqLl5BeiJ2jakWNnm7qWc5evp7/CkNWoXlRJiLtcm4MNHgXnNdZRsqwqj5cBslNIOjFszOdAzS2CWdNPhFtN4NCTJjjDHsXwvpKTASqrmEkR9pNt8ch2EGquEJu3O3hp5r0Jmc1WwbSq22KqnE7W5LYCgIB6lJZjXiZhmsY3++qLxZOfwuAjXnHzr7Zjqdom2jmBRNc95c6o17gCe8VR0prx6c45af1PYJqT+rUhFe/kvUFoWh8DzREq/ET0uutbQCWsJC0lUiJ6H3FkMUQ5HrgpnqYMcIXO13G/tURzRKmgv42wI7azB8BxXnu70HXioBV9Ah+qoRgtHZOzQlk5rPp1MpCrf0grCa2X7xOjVaiY5XVDTJ1+1vDYJA4rA07e8Yc70z96QPnbbCTZxZjx9ZhveUoKwhkDAlLilTVgZoXCFU4vYqH2ecXzwheefv3Ni94mscve8Zc3UgS97qeiyGYwCkt5p/+KSWRr5D5dR/rcneJ8kejoq6QqYqGaSgQMYlixKSszLVo63wVQKX5Pmxv0Wk0EdRJB4hR2/vcKitCDnDbFMm5wx/aw7yi/8mLZCZn0JlKTKd1o6yhWlUd9R3AGgY/cartSN5vvas8xZuX/czfeF/ujVG4zm51QQzUDmhroZfhZ1dWjESp1QYIaNV1ncHRdOXqe5hZRqZp1TffRrrVvLOkN34zj143rbyRMMX1fDnp9KYwWNXYex1A/RWYIjNKlpzoVDEFYAR4fTE4kUUyl3+NvHNYuuh9quejI8UJU6MkWy069kto9PV6xAx1KQCq0vhYomI5sMEJh9hCbYpQZlrV4IHw1HjafkrRj0kuBbZ1tUSNp8UXQ4WWzkzyYOLKjf1SEFNGF1yHV/fi32WAqZ1mLNJJlo2GDiClmCwl8Sk8UFHU2J7ZKmy1HjwDQg6SoCz5erhTC7xy+bRAstF0ZupG/tOxRyV1/izdc5Gu0xgoexjVN+Ogf6yXmDuAKMx2qSZEPcijYmI/rHPM4QpcjoA1A/gJfQt14wuEK9q7YTQA2tPty+r7alP7VBNXyiI79o3ffdj/W4Vc5qOPPRCCagtZZWYN8YtzS/c44xupiaTSYOQQB3EaskFYhMzTZTf8eLRcCYEg7DjF/b5OXYOA5OIqgMHEp6mSDwne6hgaFQVMwIVxBOTR6BvO6S9gW+ZJL0MfmkyEF/PbnWx+Dgbvt3WM9kIgpVVk7Lp4RRX470Ml7fW+f9a9dUd73U4o7sm1z8HlYKk3kOVD3RPzVOEA2pL4D1V6zdXuLz4mH6B2IxtPN/08qf2EBnkid8m6u+sm8xQxbjzGCyoI5lWwbycLOezOXi9Be/y98c4bC3RDE0o7ZlUzEIXdCf6gcFE+dNncjQJtpP0zwWPe2nTlHPTgFbpT5MuiQhpu9/CZ36+Kb67PPS0tJEld2Itf54LW9XqOb9rewbiSrny8zc4yMk4p6sBmqfI4Uc6nd8WcvnUwWNo/ZmREeru5ucKSyGmZ+lYsu61FSiSvQF/+Ff4kytbDjTy9UAlOB4O27HeC2ey1KLS2ZLw/rBiZFum+ncGBXo1Y/mGfGXVrkxs7EK/uhkUH4HscQsX+pmYExlM4p08i4rmZuGIVwRS5fHtxhw2SRd1NuISLuu7LztJRYrybgSZrW78Z2jnAhsOVVtT9i5rooNbTqz1v1Niu7FiX2WSSoV2Jihtcum2AkwMrcbWqRbzfc1cvmI2UmIb1tp+VBE0UfgcLEXCcmwCLxmd3nRz+LPHDCYKAJoUEspRjaEnHxBABAHLe4PgCdN+jqJ8f3jJ0fo9ZU3qMy2K3BqNEJAKiXbkTpd5IXce+dTKiYJWiNGA9XzEunACQleCiaQmvmEv93+xVvjf/Wx7NBnvSvfmclrHRLXJ/Z9eMJitu7SaxFHdcN8/QwYO9GDerUOAbyUdwb721RYGKCj36znMr3rTIkmzgB2q2jy+ahYH2iovtg39Tf0Z12XMXrQF1vA8IZf7ZPLxNJ5g5qlKmViMj4Fgs9eVE8fhNgqA0JLSaQVJRXJgSvUVMH86nHjoKBtO5td7auZQEJNcspa6YsfsyZUMLfBIfOVMh1qtqePiuQbExcsAKMHvlY9yGY9Sz+D4IkS1/dkSauGezonupaOw5H26dQyyvej+ua1uHvXeTdwZgkMJO1X7JdYop/7SIiFAvYfnlRejQX5enif4k3S1uwAHtrQDFhU3hVhuM/AREniJROpYPGHJ1hEelJ3d8M3QuFGTnLPKV1lT1k/7Bem1wYRPp0fmsuFGq9ajkedjatXP1TckUrtKrBkbRoUZs9L1vCjAp8Po+ZzvAGSN48lcqNSHr/y3TbQOOIFLs9oMldzXHBP41tH4OwkNciCXaWHloGny05gDxd9N4XnaORnM0+f08VyesGA65kV79ssiEVwD1QeZak/fKp6KT58AnkUkM6qgZyxRJ0lKiBCworAgXvVViaqBwW6bLE13b+EGnDw0/jAEZ/mxC9MnmJVY80gltOnvBZzHh5DAwuzJkw/D/fyw9uFMU7NWDWQPWEDKVhEctNDD+Bj4/J1De6s3/Dbob6xDbf4+fuUg8CO2oWNSQ4M7LUEsJ3+5sknxVCRk0vDc7zqkteQj5tCwUdqek5d+SSgbdnI/d8C6YbkVE5HYszK4AwL98L4wCYD8dWYw8AOpJZS6gKkAG7mIC1+1+CPEgUZtTRgXqRCW2ojxAovnfKXKGywqlKCxq5h9bwt5lVgMGDWG4EPfrHd8EqEtk4TtasEHM4XKK9MB7QC+4QfBju0cQb5r7LayUV/2KTwVZirGpahtIbeKydxPu2QSseGdWvIRPqrsGuC/aEm1DITm57YITCrQyfliz6FDGXyDin0qGACqZel+iE7vCZoaFCmjDjvdfpAylP4CSLDDbTlLL380sztfGsQQ9CB1vkzeZiE+da6309uSI00eoR6Kaqj5tmUADVo8RvtClEwm3Qy4qAwKl+H2+NJsiZi0dwjzZ0pVW6TXAhTyk6mOMEKGYhDvNfmEV6ibUgTyL198tUkhA8t4rHsLXIlrD3X+xpZaBhwl0IbQJ/RjeZkd6kKskp867Qyj2k3oaB2VR6KQ2gHKGNahzewL1k8UXb280nc51r8Ud2tZ6TYEof3cs6MdBa2/4gbSh1UgAxyoD7+pGlblZ9tQR90E0w0W61szwWR/UNoa3GP7ybVb16tymLhpy/j7R3eAb9riPuJP9wFKg+3Tc73raYhoozF02n38uVpHxi6uOqyrykANNn/4Dtrw28bp00P3z9oMA7aGA/OTKrnDbAmFpQuV+OQabSyc200FiXPfdgJIi3sJ5uMfd11KHtfHk3UHXLF248+WEUsRYp+jrVTjuzNHIJGQD2pq5W7BpCdV68SX8I59S0qzmLXKw7oO0xj9QduJLDIGvO4by1N7DVncjuMWszLq8QRfyodBCI+B3+SDqP8BrmVE5ZiAYzOeQM9ZxZyQ0vRy2r5NoajPun3tvy8mnc4WnrLLfBOjyCpk2uXxnxMhoFGaJ388uR3SCz2p33QIjpwSCVa0nwthec73XpNvBU9bVpkRmqb/BCGJNvhSy0F9W5+aosPdy+NnQ/Msk699NRS38SAQylzc+wYCQWJzMXkSTc37tARr6MVVClVtnRN6w52crEOFRAoPlksia76q8x2BwQ+R0fdzVVB+jN33HS8UIooh7q3GGgK6fq/jh6Zl/K/VdzxVM6DUGeKgzEq7NUWMTwwNLvv8vwlmQ9G1hTLq2i6cQ4s+KUMXKVeBnOIJ62jPsfLFCaDFOWBsbRYOOBHVMgHoy7/BvuZgMWQob4CKL++xcSPJ/8q53rUQ2PhVdHSDhRBov71RFAEkVy3aFJVArdWAeod0FtLgSvGhK/nsdmJyy/VOIcNrF8JJ1KKIcZpORiAL2WyQSC2grSQ4x67NrOxLZpSJM6UOGBdbzDh8+nZL+grgxDcTScmX/6puAflY/W+a5Ng7ZeIWZkhsL+WjdRKoIONeYRHjYvd0fxkSqRNWh8o9Kix7u6G97nNN30Upa2oqBCYP/JOrKe53Zby8z250SH7brkbnKInUWivwdD5y4R3v+PUr8gcQDiNSxeiXOxKfPkamoYips66wBeziIsAhURDSlOUTrST2arajj2nuXsBoT4KVnaY7p2TjbmO8NmSsNCrbP4Uf7hVkTZdouhqbrGU+2nrgdFLXi2+N9JYB8nfP0k6uVQE9MsW4ShVxq9VgQKpA7LvWDORr25ljTqT7M3mfdtVMqJJrZVj1Y/Ov2xMUzfAfwboFSwvZT3FE1ErevsQISuU66ghIup2VN6OeGjP+a8mrmAL9QQLVsJ1834+iN8BvXou6ve8UjjTSv3PpF/MVO6+lCQ802xOabPSyiHLSd80zGHR1eECWL3lx4JBSgjBSwdv8Nj1WYMHgyQ/Gm696QQTnEk6DDWQ9D1ooVFa+y2apJGJl9RBvAhOxTGRqceODgdXTOPZr56PNvvSZEbxFb7U91JbgSY2wgNw/Vi2+fAlZIX7JUYZGQJjueT5W4LU8sm/BEGoWfwl1EkfPaF3jCgTuYFp8V2k2I5+FvH30ZB633QPaAm5EwMuE3D9kFMKbPlC8xjmQMm9wmM1d16JJ3GUKtcjRBmcnjOPXM0d+w5RxOJu49cHWvpR1IUy83Jwfb11y/HyIo59KFGd7DJyehsUpl8pn1ErrXmnzHft+78R6y+n9wIsAx1HXCbt7r7rW1BhIhT8Rrc0Qk6nrLs7qoNKb4NbGOx7A5fzmMytyTwROBcP4pgnq8v5/kM4OJ3Ze92mcUvD6hqWnjggHAMLssRd5VSfyi33t/I9ZZmkH+Zlx9IL6RJ/SJCoNA0/STcgRgvA9y8Fua6r7J0cOikSrqrObzbW/HxAU5fnBWj0i+aYaCL6jYHUC/2F/RyMP7XmtD539TynjLwfJCQPuC+gwQSCb7bbtV72reqmNUBZMmkirLEnRyLe1m+rtgWK0xorXr1EWMwNQ4LVzn/+skZcH2JefwKbO6Ew5lG0qNVZv7A6wJ7p4NK8wEkJeHORjU+lEZ/faleXMP7A2Z73A/jeG8EW3uHWIvfliQF+qkmcDHVaEeIlYEoXq3zPGjvITCYkKnmKVg5LjJIE4yKnFEhMv7ys/54/8CXlZyY6JlQU/Pw9qC+lY42WkhovNDYhIR+rUHeZUz5f6w4NjxYEIWnjGLUXESAN9wdZIHWZ3g+vqXaA7cwl3kzOAauyRR9XzVdkpjZiTFB7xU5wAM38cbAdKV898ExAwNxq5yemK3xSz4P9qXHxh8InB7zopaeSiWLIKr4HyfPic6Jvuc5Pj/tpIX/2N3G6gi7I9UKeowMbWkL6Zv61kAUqRCNgOch26rDNWBy81mRkTpEQex3Hdfbrg5coRFnZBZR5x+nK/ZzMfYv2/QqkY/vQDf1sqT8fAg4SXY5vfF2LzsHBF1+plyyd2AoOT54hj/XLAE4Pxp44YpVu/N5zirx8ufeQsVaSoJg8BLdSXPOZinqic4RJvhRsyuzviGZzzScNnLIqtAhdPjEDj95lmt/TH/5BJ0Vqh9uKYz2e3oX6VRP25YQv517V8iMmPu56s3F02goKLuVNtmz/pjfr3y7kLWDZ8TsJUKTUVT+JvyOrmCPQUeDUVjSHwkYGTjK/0hVz/1g7+en+2LfQipuceu7fHtF5KSmC2GwiPPv9zCRqvN0ckPJfOjh50kTquDeKxkP1+jyT3IKt82v1LLLxXMnvXP0IDHXTDxv1c5RjnTddQ/oSlfnznlJ+z+O7vFUovM4sUjEoBCNsU02MdGjGkmUZtlCPpnuUVrxSlBe69GsAnzPyw2nI61IUmMnDy4d5V2J+dM2Owbb+roRn/i7hOsyTCYEiL4YgP+CSEZvcwL4b+XLQ65KSSw8VqLnYW/RW/VGFBBylcXwOmvtga+0roPRESJc0kjBYkLXltASVWGOv3YFPnA6dvhRaUzMLUx3vgFzChzMANA7V3Q73UtcFYs0lttoIJ2H3h5cI8dIK++mSFOoWgGIaQ678Cqu6DiZzg0AOuhmZAjQvExAj3uC+vU9euXKpX53K2SzWQggcJ+VsiPzRp7XZG+lqsmqjWURMtOh6RAgoVOzEfLfqzGWDGQQBwG7qA12/14bJDZLuHi/z+QqD8VjW+lgXnclmF+gFlK2e6seD0h0ja5K5gol9cJ7fGE4MJiu0fG6/zIaWlOTi1Ydbk58U2WcIaNmVGKjHh5zVitt6vfQ2ZVj6dKk40K5uPNXNUzpIQCD6V6aHoqnjn5b1an1ru7qL66UDSLKgI2e73ZOEpExP1Yv9EkThepink0xJQfz1MlU1zSNk7eAmcfGIsN9esAHCz82CdqHGNG1+3ajbvwhruKCY3hZzWXq3k102Awks8SohRWrDS4JTRHVKabZun4vp1kJQSlW6MGxvNS/voyZHpmxROT+pY7HfhmeeqfL4wsca8qIZCM3s4hDVJ5x0YerZWmEWlDGeG1ioVsDAVZrSkOHOZaMVmNFOfaOpzRdNi3cFE8Es1f1KFtA8PzcfzQApwbnb9K/GJ75D1TyxSqSLhy9b0LMG9/Posp5cAZJ8+dLA9tO5Feql57N+zLNoBUZCYU6cumYTQK9yTwlx5vIhHMXs+vxZU+hNS5vX+uIEKvZUmIgCL/VD63uXPRA7GF+wMwXhbDPD1gDhFX8ODTXjTzfm78DaCCRAQxlTgMwxaDf7LKq/FVN5vhmVuclIvZyo618VHOUcRfi4PaE1mjYiJyP6h6vGhhfxSyrZLyVRXymTxNXkGi99frwH3JaOO6IpXKiTBzQhueJhK48DWsvIV2bZc6GUQ+WYN+0G4krFIV4LXB4jp6b69aQklKiB5ooA3LXImlJiPyt/7yBiqFfiJ2Ksx6MP98rrvsSSaW74bD1OW/5844r6yZ54IJD2SlhZi7NdTUJh68uxVEdSf6jMtpbhZ8UPBr2gSwDbdVyUg3TSdgxNRibZyITGGn4L4GdMbOVXO78BwT6MZb48wLnmtklwz4hcCfS7pL0m+eNBnDKav7LT5b7pUrykL8gB8pqB+Qrnn5MH7NXdrA+pukE3lBTXxy9PRU8ps+UlIJ7iA4phYSNmqVvTl1Q51Zv3iMq8nk3MmsEt1AOVWePUAKNwfdEyH0zefsPT6kNFbkEsmW3fbDzr4ffPV/ihl0jBFDq/Dcgko6UqcmTpvgTZWjN+ulkeTMiJI+lPrD2jFi1PdzWTTspAuhty2hKB0e9rZKrRfonaoqe5QjL2Mnx5il80n01dVhtJ1oFDZIRdN6SPFU9NCR0GApM9X5m11/jPSmocawUtWIEaZde9VdjhiFKdiqUAcJ/8m77tafEdPJ6wmEXFW2y91lCy6tTaX+YQzYdF5FXOlFcn+6kRj10UOroCw+GIWLrEsG2w2X1L2hUvSv2Qn58fEbRGVBtNmUlMa3WTdPEkPauhc1bEtsed8J5jKeJaeDclCfbHN72XL1NYQS2Z6rYiRmotJtsITF3AVkxY4V1gRM6H3cHSlFoEDpF8/ImT+VMM6Kxwkz5LdqI9R46I6LouPH7yAMcUjUkBfpdWjSpE6rZAoDV2Igy4WferSxaqwp918za1DZ1EhYuBaEcoJ/KXKfefiCzRGayXPs8nI8DYD8hlIoVZuggZg9XExJbZep/okoc9A2BEydcrrNr0uGkiYqVkL81XGAwWo8iN/dKQko8DZD2mfAXNjrwkCv58Z85M2Xw/9b1Ph1Q8gGCwZH+6HH5RN9qZ5yBlrMz5NQjQWitmmjSjJMQ5kl9382YFBygG1MQ1CRNhLxfeDYD0GKtsYK2GRfrDYNRQbCJDT1lCOBXN7pQhA22NJrwGrMcIIapWN/5ffz8Qmi5yCZZTixdXBwWpOC6uEgOUIJrj/IsVpf15kQXVgtD62QOevaREdtEAAZck1/71z1JxhWI/G+UNvzWHu8F+VamVHIIjqG8p7ftXGDtLa91Y6sCr4gelT5EviFbivCj+bOaRU2TXy4WZea2+IwG3jBSqkLBT/dzQrHFYTUl+rw9Hogx20jLjljcj8LnrZGjZMVMPBOPNADUpdlobaR4hZjc6uKHMhoPy5qg9xUFlqiB3liRa59JDG5gfapLwM0xGdohPc0qV9KCHvlp3ZyaFSMiW0mey2FJ8QZhZRAH9EVrzYtmV8KC0Jhun9dQQT4PMS7N2NKgcLCaJffQTz5fkJYpLYZgwF0ykspAozK5OmbdGL7OJCh4wHp2Mti0iC4aKyCaJYJVQJ9lyTUw4RS7w8NbD0T0z9lfnmv+K5S2k6FRxUrX1V4sG6romXKhh6OFhnJk8lzFlaGEpMht8GpgYXO7lKr6b29wpZslLEnQK/5pgOyiOweRXqTskmVX2mhFU8UouH6ef5kMx7pd86/v5HSMfKdOsoXnNND/by4Uk+We81PzbJuRbSyOcYi8l2F+SH96/9hqOa/tx17Yx3meYQx5TfB7j6HFcx8RSalrZ+a0Jr67xia7gm4jKZeriH/k0CKaQ2uEnx0qYMGouWcG0BUg49hc1KK6yWE6cTr388h+CmpitIEBioruKq4MKPnNJ9FR26ejj1TwzYQDikbbgR1Pge6q7mCGSWxiy2pkJBraC+WzAfs5tpGbUn4GyJSI6PKTOg2dS7svISX4TV6KuenChOcG/Z9JPhtbJCZgJ9p9ZhErI+qOV2y/u6XmGxbcGGlOB0pgcqVmVzgLYgFvZSQ8D37w0lSWXviGVyypgHVahOZj/831NYjuTF/AhZo4rsL5FyEFdzhHrTZKtHA+klspjK6g9qKH29n7UrRT8kPVM9JkooZLKOHKFCeo5dM4ca8Sa89hCRznDIt3WUhEus9uJxa5VBPlTGF2kApXNXzd5bV8Jz6kfTYosMJ8Ehclj7cY9ruRanxjET1NRXs/zb5Ou/nzNkV9HmCAGjFS0T626ar/DzSlV6xbLZ5MqaXUNS79MTes2k0yEpi161Z68xmH9KtUSUf477xz+e+8H/o/eOfz7i4ZvW/mPvXP4777zWPjoqzTpD2H8SA7xXyL9154Ox/MNW0GZSJL+63/53/7b5hLoPzeX/Ofmkv/cXPL/xc0lOjue2v/tzSUWprH8/wObS0ZEFyTYYP1eq4FHC/7alPHorLQZbl7rNXDqrAfGjfTofXRFTfk/ublk6rX+z4v91G0wAPTOef3ZxKIL3hb10htb4NYaD4qbCNZdCYkF639ic0mLxq72xK//o9cG1bVr7Y8dAYe+dlzaw7+1RoP03kMMVvp/ZXOJ4Xad9uit6tKVzmrb64fz9Tsaue1bq7jX/3L3ZwtM7JaIVv/n5pL/pZtLmhKImgzRg+jFuHZFf23u0YA//tch6fU/BejumweN9uKQrw3mP7a55J/5/f/jzSV1rHqE9HIJyfzH5pIYRF/C7gtZQt4eIMmCIK6MwdRKNdqWY9ue0PkpNzMM6s+KstVdveVeHgeE0NXH5FWRohQvyfycylZWnj8VshNqQueIHG2/rMkxGjjLv6VJlSZJ4trDdgN6wA15Wla0YxlBICiM4+7UQmleK1xKrx+aJgtl8hxmtJkxq0Q14bgQ2lljZj0SDz3yk4M/kxQOIEtgsPj+kMXsT+VKc3Oha1hAayQUylqv2JixIf5APLbSBMEihK2aRMbW+CSS+fOAmeuvUw1x0yoemOFXk9+j3c7KrtaB6TKJP6uG5j5q9zI/RgTo8Ws93UcfZ5EqO53W/eMXgo9+2QkTrsovculzGxjD4KAojk4XLNcfUxHycHY/RicU7HSPKv9QMnYCXtF5lDdvXxPHlu9SWjBTDM9XRXyzcgt+z6T87JtKVgQYoLGf5X1+VI96TG2Fmu2Wqb+ZM01hkW/kCn/uXz6IJPzWm5QQelzHOOh7/9JAVsbm/hGqeg5uJSrc4U6TU48eA+Wp3GqRPymh5bvVK4ztsL8KLs7UsOC2MFiaiwC87w0uFYVeCPrhFIi3TafHi4oauBwAnRNPLoBvEa5JqTCT6sgKdiXkHGtJhhrFuOVcYabUK+PyH47II0kt9y6jLT88qkQQGEJxTy7HSsc22eagz7l9WAaz+AVELq6sjLpWJGsmtemjfA67CidvUlPLSquf8roHtsQ8t4qVznir5kYfi7dVtjO5/0jz/XLbmROO1ESA0HWVzwTrpcEE1hJZl7AYdK4yJ1yI1MrfUX20anpRAX1q8SiVF0UIp4yUSwYYwvmKurd1ugFaJnDAUOfR+MwvFU+uvPZ0l0dY003GBCauXPmy3nzDkjPgYlaESHRx8dVPx7V82XJIX0uRjruGqaDBWzgEyyNBK33zO1s5mUB0rTuoQgvB0opwxKyGPRH023otMxth1Wy8CPvtlatZCTn61Q6aY1mb2xvjU6+2a/j2p8SyXBdVmkbm78Iqht1vcs6vXI6A0aRIXLmD9D1/QBE/JXDU0Zn0NEEXEZ6KxHxMVh2J5emmyNmMW+33DC6aUE7tY1tTJWFWcOilAB+7pQKGl+W8SsnrfHqR7hFzdABnadn5VAK8rg7DSXCn7T1Fohz6NNNR0p7eHoxAx51gOCXJvv+8HIB5E/J7dMdhE+UWJZRScgqv3vvS+WoRli9LTcPwMc48HR3ShCsiv7LplZImK2hffOGZ/d0OPDuIRaB4oKo+uYCcJMn3RVu8eQuUZUbjUyqYVX5la8HBC0+Ybk3xjpjiZbUu+vjYyWPwnHRRQFtuRFpf0ahDiXN33LvMWou+z670dRUmMF7ulc1oFuuQKDXtc1ddDcj8rLISJMMb4cIV6pJ4+ljzB46dkQxXGtv7TY2QiPNFTQPtXtGyJIr71G0AwZc6ckeqMVssiQSk88kGWZoeG3Sw9t9ca+pZYpP1yuICDShOnqhys+N+FCgSoDkvZGo38ml9m78EqoN/zLNHx+a4noBTyjeqXRMzEeXOoRMBhAqd2hj2taAX19zqOwAl2tfSXeszuydoo09SAOZZRR3y5g7gt8Qd6UbbvG1TBgek/SJPJWmsVpu5fDvzkPkWS36ZM8JAL9gYWcXH9Y8rZBb5rE8bm+lH+vg/e6OR/OpMzsgRd98khAWJEkx+EkVewDOzT4ChHc6YCWH9REAxO5b+NJgVm81ZDq7QpsAgMjp5U+CyQRNOIcow07xAcRAMr3kvgTfiklja3gbhPgN5S+A2Fv2Q+/11FDhdjU8Boo19OMaGexst7/miMY4j2K/s+NZ4OS3F/C1OzOVKQL2YwqkqVjYlshkDkIrJAka8BLYY6tO6lvWrW8LZP4GXpyW0vvI5jaT3GU+bBTNjzUbWIqxbrxYEbJUuZDXZz3FgMgKDhT6K3XE2fgVsvMlDWKEMtZr+pVuIiTznqGjLhp9QylJYVOiPZDuqagW/UeQLcEEqGnzraZccXgAv/ase7eEsdnBWfi4Pequ6fJFKlXx7d0Xx8Sm+9X1HlA87fkRHXrId7IDpku5YWs4z+fAL90PTMoLsX6eZqgQWxwfiS8R7KmlgcrH+Dm1GoO6X+QC17wnmVwyEi2DUBDxO/sflV8r0QtJ3EUeF0dcMT22/NZnrNm8osoyWGSozzwQDd5FhAU5MRTfRaK1xnan1m5Pc+DfQE/BiVf6cG6lJrOmNiLC/hCxEi7i8QX+1QJ4clRzUooC8MQtTDXD1ErBKkiLup93TTvsT74wZbzGtHJUJocL8MIb67QpqmJkvF7NmaP++xEIKoqsnmNreia9IfFvYV9gSyW+Cr2NuNVSDRTX/6Z8nSKRMhoEpTR6NZyL6LcTNFBchoS3p5d0Ub1vq2cOIlFQTSKm1ypWtpcpZzCWnFFfLh9UcTP5CAvnSRTiJurTT1QfVEYegq+2NzfibbB9boZIdE2tsDfiXnV9GQI5wBt15WujZDOlE19JnKGW7kOLCNXbOR7wvcqSWKdxipayMkoW2A/OtSFd5CWPp2VbB+O3gs5SzIXjQR9iu8aUquGRqzUu+iN2sSY8BetUrqDzGEMHeGaGQtqkhl4+356rvxmUtnkTn9uIrhjUQEgPIVFOv2M/f6eqeDLQjYsW1Di/Qburfw0tOmGXwOtclfq1+WVWeyvQqAHC3jKZl8mKWDe4TKfAzZ+FhCBmLYbhtdV7NnuN4VUvW9fpLTfX1OwRUZQJGK90zpt5Rv5Ivu7SihdMjca3WTnLsQkz3ys0W8DmJeCzzniPu8zmkl72j0X5mXdTT77pNCxmwnxg3bg0zthgFtTrtBm/YdDRIRt9PMsA36KPULQN5fuSI/LpVhvEEaZXFwdxADZxK+daIFzcegjO64SYbvWLoTmTSWlFjztCx9xhYdkybPwVRMJLDO9MJ7dqUIq8rFOTlLTm+XnL+gXZiiM696mhQwKTl5S8f1nSHsvpeBypfvlTuTKTZXwvA8mIx8DiMTyRdYu3kx2hOIPuDC9U3W5BGBM+3/2NAMSqD/ZlUlDO67eAY77etPKWIuaASOZMoz6JObUsEK7UyQlQlFeamYmeSdJ0RHjhbuqaqrOG3n58KBREnFHvw8qtSe8IdPeVte5v8h1q0wFGgCIfFOlMTm6zzq57dWpapYufH9vtzELbAE76u3F8cQYGPDTUdF11mM5LIbmELpxFs6vcjSIP20T1/lhj/aI/ucTPoDJyXh0So/CnWiz3ct5w1vih9bhENlBW6Z0NnZb/9Yj2sVQPHNMm3iO4tAPO3sae8cT2eN1jyV11Ddimga4xMmZ9kx2q7lWoCg5ktZrF4CVOdTFbApwWh77kK+O6L3BCqZWvnYUoo+bqG1/YqCGiIvIlhq2km1D6uT3V6wunhSvEBUgRCo5cPMN1RrjmK3VZi4RCenKp9GuwSsqdD5cuRABQ01HcaqmsTdcjiFs8dU7AxjUWgWqqdDpgJPOXAeannwros8aNE0l7YtC73Z8cI768HJzuK2yeyIrUIPygX3gAhrUj5d8PrcRIkj/yKu6gwrBAWvCtaXF8TpFNIC+YEV9PLn9KJEUmmyNaaZLrQe5qRDj9bZSYxYnlNorYsEez8WDnDIUy78w3flsgNfS13uhYbig6K23NWjcbk7RDLA391zLbuQmL0jW8rcpoiq4Rvc27lhf5JT8zb9xqVss50QXW2flBnVvhJ96JGPC2zk06MU8WmdHbDFZjZak4GUmD7KWXdHhp4XVQBmFHFgsOQgG5NF1Ozo+AEfs/Wq6t6VQxwCDdOIOkO69MfkaiVdL34z5MeaizR/sBdbTZxLQehW3qClr4sXrqJGxsl3nAV1U2JNy+kMrAfkKNQILK7ryP7kUxTKYZ3aG9UUljHFRMSaBjTbxUCx7LfsM/2pRgeaSO3szJ8GwLYBhjAeooO794ez86WC0c3rEQx+fp5e7m+oERoJhdgCVuENbS2gzhaVi/W8K4pkcNFhMhHsQO1sq7LBRnTX/l1zM4a2TiW52QWTK7Gkm0dInH10coK2XiX9hX2reIWm9mK8FRxFv/W3Al6g3qilMzI+Za54BiKadih7jy5xsOC5fYfS5kQKOy1+umiimPJlwL1spu8OkDPP8RkahovnRHWx88eu5x7ie9M7FEVfQpwpe6/4bjh1OiDA8uk5Gn/4A6PyF59gxYYZfMYQt1a5VMIb0LtDZ8g+qtaS7X36OMtC+e34ZDuW4tYFl/BMOE8rYVOZOtCs/QrmOtNg1uzOb6EXWqpPu2wDQPH9AVIuqTfaFUdTjF+6J3iDwKaHjNsIRMTlBe241sxOnHFp4v6MUZJXr/97Q9Lh7isNQtTeyq0Y4zKhSlWvfIs19guAYsHVFvWEYwgTyBON9C0k7FXQ3TGS5zCZlsLcq2HUG8sHYAcc94K+Fox1aZ/FQ/jcQtykQvAGc4UohhwJnMRPcvQqindCBG7bnlw3QdapGowO7Oi9DXDUprVg718eWxCdAs7rJyEqNsmZH70F6dkX9zdRp4mpsuzMZlGj6OLLDEOUhS6VbeaDhgVd0D/Umbn1qmRbPbH63cQ9rF3dpcAwTni7aWfTEEoeCfg7vXQJ1uq3wVlGdGwUni7+ufCJEBQax/8FYLqEvul+OWAT9TlY/AVQSRIW+kJKT94c2ZDp/3Pa04d7m7LN1KFMAn3tB5BaivHHv+z9XUok6uPu3IBzQRny8/L3b2i1gJerrq9JcnbPSEHcNl16AW3HTidnMZpo1BiymX2HH4yYo2+8+OZTzP13Gnz3Bf8yvbnt3bn4slvjibY+hs+y51xWRUQtpoL+qvnC88+aDi4iPv7PbXA977aDYs6TA9CvszCtoEoE9z4xHxdDdYnwSheGhZh3s/BVuqYncUNwUU/2fA7AFQyUtV25r5lAgSEGPNwHLVYW1hLDeiOmXrWuwz9Y8IX19WdIPhFbQcfLFIu/dhPu3APDcGZnPzZMuvaPl9WtfTImkmwZqH6JzdJkIK4ieTnDzlaqSG0zO46v/izE5aaXtV88mdqOeQh3etNG5yGhMto2Eb5f7L3XkuyM0ea4LvsbV5AZgJYs72A1lolcAettcbTD/Jnc0ju9nDItt7enTGWHVSdrIII9/Bw/76Ae0TGY7UofqgN95ycdLHYet+fFS/a2cdeG9DvXkbXJ0B+Uo3B2CsnTWeeHdzRRlD+SMo4fd8O/S0kzFJa7NK380t/LH0o/Kt30o50P6GmWg5VsNABhxabfznPB4NYWk5W09ejOVgkdbLMO1G3L+S99zQkLvNO5JzokNlMHI9SoMm2H6qxVb8AANCD/FYzB3X2ONScd9Hj5ML2zTI0xhPGyEpeJE5hOXU4iPSKDfnDciUBKENCtGQKSGtVKQI5UhSMqk3UOiQW0l70qNQRaTN2PnTW6Xhv04yCWug+spS4bjoaXm5DxKCddnSe8wcRj2XzRHk1BcTmrdQESafSG6rbYBTMGWoEusMb8/HVaI8XPRbVHFtdViRlO7U4LPcF2NGfRssUn4i9WS1iCXieACuzVItxqyk5suLI1vn3wTCX/FAWPySE5dOfml5zcFWc7OxCDwzNas17c0VI4VYqguMcieN+4/5dDMhr8ShXngxvINywCSSUw+uvXVbjgAswarsl+OUDv7njKhGqGSXzFlY/HHlp0TuSH0FUG+VHSJW7+RMrJVUphIuSjIr3Rprc7hfCQ5oeTLbPmqfT+S5/mMMDvlDvIQoFUnQIVTYjjIB3+bhI9fLl/VZZhEsdji0k+sRG0o+s6Hycl1FpMqc41hi7NNn4yNYwKcZP52Ge0ORqFBE8blDgyFrSHMxmtq8gX6BffuIFOGENdScmL7CEoe1YD8UvvRGh11Fe6TOF4CqAqlrUo5/FiuQRtxNFwWktGnTkU2lgt12ZgyX2T444LucGHRnWPZPAqfXFJL0mhJm1bgaWE53mARcjZUTtjQo3xLsjHtq0YJrvduoOAEu+wmXXgJDxXHd9Nj/iEFH3AA/6tFj56O+8PtI0JRYn3W5oE6wNfdAZdOu9Qalu44sXrGRDF76odFYwOoArnXEHllKaNVr8uV6IkuJE9Us8xClZDQxcdo73PhoDdDFpNnC3W7KxGpaQOu8drblzYB/jArcChK2w4s0xDkPx4EKIExqDwbrc3FsvXokPR3ttnXhiUvmteUfK5oMX1dA155brDrTx4GCHUT5E0El/JZsawQGWOM90m98sZ06i7wiug7tSLj7+Pe+IloFVuaTIf+Cg6ML6Hx2krQOo8ZCfMnzQl8eD/14Sw2Pu17LOQ5P9nTSG8PeROv+UxsBgoOHlf5PGQC7O801hD5bsxuN3Erf9K43hX2kM/0pj+MfTGJjUVZ3go97sc1D/UBqDCpmn6gyQeg+H1v6jaQza8xz2oznqR2XC/4o1MjvNIU+1LmDdBiGt/r1ON1Hdd9egbg7NBg+dZ+HAd4+QYS+N+Y+mMQyXWquH7nDtn9awfKKtH8C/V/mPn7gefZ2qH7ZBXSDBM2612v1n0xggzWFPDVb/WA9TdwrkjzSJm10Dx6q0C6q0ToR1Xzy0X3rGHfx/kMbgQk/f/uT7rYf51pnkt0Yj8rS3/KWSKL4IB3XwDmoS0mAR0f5+GsOhPfal1cP92Nitcv+laQx38A3b8K9e80f/qfb1ZznSIfTR/9n4+LPe7xgOwRTmrtDl+p9N/rM+4L/LCZdl3KXt7xX+47P2v0oL+DebOPZ/127+LUXA4r07QKQxEf5Itfir1IMn1vwplQDVf3GWh9qU/+N+QCZQZQCvbUpTbdw9/dWLv9jpzVB5PqFYsNiWNT0LhTckvQNslimSdzUMGMOeQ4IzQsyW45w4eINl+FWRZn0jH1k8pehg+o+D0g8aUEWSJf/2iyZz6BcW//L1VQFZMmmWef4/CIsEAASBf40BLkhd/i3ZdkykWfTHIIqECoC1QNJslSaGSDo8RiRIPkE0uVCikR9RaeZkGfgnACj7vgsYZm2EU5CUWncXhgrfkagF4MIIM0lCXCQrtkdUyN6WbKchuRdJDg0F4OWdObYThDV+wO/+Jtryq5RtBkUgFVNsIeNSrVHVhaYsU34BcMtQleVZaqfHZa9gAvMIHrpxJTteeN9UZM18YPaVQkOW3iWVguyt9qub5dopFkZORcu4OETjpWzCzMflRgzzwirqg96vmpiBaXGKwyzivH/D4HHsrPCaRs/bIYYX7yz/mAofwtNU1LIjMuBpgB7vMwquFv6CF/JENJVeTxzkbS9XfSUJ1tahtL7ze9PzaevEwt1iyiyeP41W96q/QGkgbmLsI+F9EzHNsXyYZs7hitEFSJgqI30Bs0+hYBeEKoRQVCWGewCncd8WAbQ44SKgxe8bSZuQRFc6FOwQS6Yi4qEUV2/c+BjcBEifVuoq3drExv664pugUr+MPnbQ6LlNAv7TNthDa+YWWpeF8XGMLghchRfoTlO0yfVAWiaAqiDzEVD+GibaKJdcJo0e1pODvZRMEfxki7RrTXQCHlqYPEwvf9eoJcoLVijLpz49Jw6bcdmmCrEQwORDVusn7eTfXG58QT8KlSu+N4xzvA9n+VBUJkkQCFSjxrTopttQpDEhGMFtkV7pdJjwziFfMGNsAjyvPIJ82WRBTk/9loDm7H2OI703MNxFHN6cUnRfxCh08pvF6U1hWyrhDwf3fUa6t6juTmi/RFHtuJALrpo8WIp8P5FshPivRXHVaxbRDxKsmz/FlYzRiGQIWx4mIPRN8xdmUKhaZyhr6mhysQU6Q1dlGOPHH9bdfFwlyIic3u5BeO+MfKQHENJREXWTgW5ioJaI8NHLpZJIa3tjhF2g8O1DaUtY+2vEPon5OlE04owXBD402YofHr3fg62k113jdjwhrT7tnmjK4I2vN5KHwatebZfPuu8szjcXGml6voFOgFaGTGC4Eescxloe52Rh1yVvGzCiaNPXw7H5kiQyBQkkTahLUNN97nXXbtvY3fCRp/3T6ZNyzSSXpfoyEoymkRMwREf4LQZoTwFug6sTbXxCrbmsT9ztdFPzerxJmVA0+dJpynGsFzBFleL0KZsj7eCRbcLeKeJc2MOPycp8wy8L3xCWwC8PkbwScpJhqDas2YacFvV1nHD3vaXajoL+IvWrYY9+KYDz0gDLRwOOvvcy5b1NbMUYHYPGgLfttERP856PLi7SBZvjg/WdVRDLVijAHM8mBl+H8Q8oNxokvIphqU883TIIiTuNK4zThxgJC1s/nSUg5BXhk9oU2eW1LW8MNr8VGdsOLEO5KGRN4HUuDZSv+zcGI0fkcOK0s3jR1gpRU+QYPyHrvDxEULCS8FJPKLg0Xb4CzAF0w1gVTzOTnmbwp47WfovE5PKhk0BD/F0px2cmbVEVuJglGQvyhPAFRnTQhxizYs7XNT/MkvOomQWf6CRu2GsqJJ3xCKksMOsHYr2x59KUio5Fdl3ZSPMT4h55tG8HZclMBTIuSlbVPeEA6PQPWwH4OingJ5VAzT9AV6i4dhm5GBRjOJpkQ8T79/urJhUXxMD7leFPa7f+ofprb6iVlwinB/DztoS0aXIU2scOxLkdJdQdcYpMx6uMpZTJhn8/n0Wp6d9LnpYGYN0qvPyex494wR/AKB/g02YxqrDYIm3nuq78V1Jmo+kZMUUGAHjY6ITJFZUL6xe7XnCm48aX2V90Q6W0jAAN5YwNJXhgrAHdUOwKNKPJEyUt695xwCI79lDfEnZ1tcKdaCbQCh3s76iCfA4YnIdNXwX3tU6Ut4Ov0t1yQsJHLvhM5diV3Ve4eEYQTLwYZzKJ8d2u98REKMFk/CTuetQA0LIp+xlubMBI7aDKQPDRZ76gDwt1fRokZnScXWBPLpMM+6eL0RPP8gcwhcun0eIK/nh9DipwlIK8y+wY+AYOaUR9UXvJ+b6bTxvsQx1oAK1mzNi+bN7EWj0mD+ZqLZb+JlxKxuGGP36f8mzWpQNDTG3WI21yMEUaBwY1eqXki8toz/q+mnf2mONx6DJT3u3ynXe6PF8gY+bKuq/lOgrnW6CPRtzGBZvgV0wL7w86bV/kgw27aIp6A2QP+mfS6EEUPQPlrRFiqfftXyQtUkUmvthLXV0PyPjA0fkM9thvwbo11pU9+JgrczuhUxjF8Iz+W4p7Hb4UpiyXJCkpX/DL7xYgOwJRHMvheXe7ZX7guDy+6kMnyyMVz+xDkMqBmvIIiGVEckckoSSF+maNAwR+k47yQVBXPFiVoUhaZxiVhBkRLCWrJguaZI90vUeQNGj1MX+sP4qwAE7G0or/G66i7sY4nC15WOgHMew/fse2nNPYm9nR9G9ap43WNZv/zpyO/as2Yck/zemQEgsu6N/O6SDf3/nQwdGytP7+JvyrNOVfczr/mtP5J+Z0nNB9kNxHY4KP6vwDpSnVc3h/zOkcD+8+VegfmdMRn4P7g7OqfzxH+68oTXm4tAuFfPjH3iNaXZYP54Yevr3qTPno7wkhvvpwcBN+ZIOedv6H9z0J6+BS77B79IOqjAkpToNqfPArgWmDCzz1x8fojPsOmQIN7uCfnNMZm1/Zi8qLR1BBrcaQv9KXK+yC3/4tjU5DncqzoHqnrcaLj4/405zO3+rvL/KYvzmZP6X6338Z04+/+utSCef9Z//1yK392nD8la19dMerwro5gzpYnzGJBBX4yG/Vis89/F1ctTt563xwhI74K005/jwnEPPNX+YB/vxMmvibe/+VHqgHX7bJT8+9+puL+XdLFf6mnOHvlXp0/zYG/rrkpGu35/7l7zl/9PMvRtDvMfLNT8ibj+1S1aP3NXTM31wT+CtBUpzy6Y9iDes/SnCQ8FcmVJPwX83BIBHvPfHk1xciqDi//mJhjxHvx1fDes0i/l/NaSUw0aVCWiadR4Xw49eYv8QG96/6UPzd64nAMgs9Om63P35PN//J+6cESACH9RN/wCcOvdVOXTVGq3771zwy/uYSYd15Yg7vNZrvldr/bP8Uz7z+8BP3AGn/qXNzf6/E5T9rzu4/4j/+R3N2/67/+994zg6DrtcO/8qG6/8+ZwenNGb63iMIg+bMASXy3iCUaxge5RgMJ1dNW/VpBE8PPJIYe146JYNlr4nfJA3WMig517C+D0A692BOyiCSJWuyx0yuYVBHI92p6BY1zbrucx0aseQFdzd4Z3AM3/oVvjIYyrcUD7H3LqzAAuSv1PjuMLIa1hOorWJOD5OlZygbSJmarHU1ZPSYqSZx2g4hbU0ObP1h6BuLllzJ+QeViLRcBbuGLjs+XbvF+eRFkoM8XU1/vN89zJbRQe4U51+v4Kbl/YOxOGlS8EOtVn85Wy4QyT7Zhvkl30W+iXYQf0fOPEpTJW/XBi2DTtENiLNkQvBvxQSlQpFvJ6Bp5wLsu9CD1M87K+ICBKBCW5gBsDxElmWloJ8jyOw2Vg/GjUrOh7fLHOXiJ+Xh8BhkD2VDBYXaT1JFlW6AKnKAZ1plcpalhaKaHFi0UNtr2d8SPCVl7SD3vWV3RUE7KIjygc0duVIUx3Ne6YIsE5rNtOInQoZlmHlyUbRXy5l5UJyl+i2inMq9Wya1ihjco5oY3zTLUizHtjrq6m21xmni9noUsyyG0rEXUDpfn1OFl8fFJ1o2Hd+TsGVkDMq5YMNQSQd80MVEjmf+bVHWaOFcdbwyXZrKWfkcb4RuWV/xhu5URreDgOnwBRoIGlhe4wGR0TnQRTNw2jDQPzZptBiyt4u4AfKSHILVgFZfx2yviheyjlGqMwZPoAB4t5nwVhIt1T1+g9QyV3PMvVu0EC8iV0zICx6Q6CFIk8le0eOIxVxJbnewmL66ppxZB3xzFnpeuvtVsTl352y3zeCgyLTUPPZuTPFbxNCX9o19qyXVgpMghSR83pPhOmJnP57uX3i6jM2DgBQ3hcL2ZMWqd3Z6ats5Uv1yJu3V1yWNGw8uVg5xoRHWPkDKPxj90+lqdQOCKk1KnxRVFoOlL0384HCCqw2jQtNEVbJlzMiDhgwvX2VJC5WWUIUVsgzEYmd9HnlrRo/ppMhvhsX4DHYNbWgKq5Bh10OYaUqKXRcXqzN2Rh/w8JpeMAMGuoump9IS7TPvZNXte6NdFphOQX/BT63tU++Co4UVuUKMZspvt1hBQNXicVkOMKWojKDwXLV8BX6ZAvJWbtDiOCS9OjT7duEvNfKbyt6DBSSi+YyqCZqJhbU+7o5m1pumPgnrXuRYboGJFQtZHyXtc5iZM8j7cwuvozFNJaPpWYhaMtGar75yEayBAKlNy1R1i37Dzt024drrF0pmvwXiJINkBUOiPA2TZNm+W4nCcmDeG4Vg0yZlb0HtDkJZX1ddXdXRVlGbiNczCKx8RGoQa/ZcRLnJQ2mRXJ2zen1OtOVeDIzqp0cxDm22BYT1qPlAC3c/ALNt8Xz54DElEd++e9/CwrJUUk8ma3nLEwlaVS2Asj6BPvJf0FtwSR6a4ED+gA5FQPpCwJN/jEyxIGANL/br4bYUM0tRLZs4F0a+G2sMvLzw7oTcDiQw4xC1iQOhAY2hfGwlIDK2W+zBqhPSl4V685JIWkP5t18zn2q5P+cAgccV6kl1YBOccbGU0swp+gGmmy7qRV/rq3Zgb5mi4efod1uDPrI43NThSXxUE+p0244t1hcJh5X+I1s1DYk0ObhbvshX7MhxQWIS7SuNZE9m2vJfR7wVMFfZbiTdBxi7Ga02QGDCdvfVfuuvkiUMNSwijBtzLjzFkqu9sW3k797vHUqFYnkwg857AqWSNV2OC/dAUK/S8AOfDVubryHQ9Ejd2/Xeot+B3eZZ0JacdxXYKOKANMUfcaU/Qzdh1XV9jAmIawzCp7f6yB2wJFfK7kvd3g08tzZd7czlDFfGTaplvWbmTE1eRFtdpe4g9xSwQ2ewfXwO9imNB5h+4VsASVG2KJymmMOHusxGusdweaKd9oMQcU/ix65x3K4B8O7tKkdBILhlmnJGZ4sEA7Ef8IFJxKIVBF5Cd0Mf+50vOmG78l4bBxXyynDB5e13zJtxu9+VdiVWu30lup/Xehlvc4Yr+sgoKv64dshlEV7XBBHuYnShqA1WsVl1G1hOxNsMIchgAwLiXj1Ck7P8RD4xD3druGaNZjz9gTHAsD7xPFAFdJeT9W7LIZ2tRQOqCH2Mmd8c1/6a0tJPznjpQA7dwioWznpLG9FSToFB7bgd3q0TWUjyl0xbAstfpvch4ArxNofuyC2QxvTbBbUKSpjbji80j0WCcsJtSCXLrma/A8jxxUqpRFqXJkuDh6eDU6xvVPwc7vdoRsIPCwhm/c8o2vSq6HDMzHRRy+w7H6wUHo1s0TACykv3C4Vl6sbiZ/X8EIslQmaLYrUFBByYl2qJQXoRlR6ztnuC65zijkAkB2pn9UUVxtqzaVw/QScSaH15xxGkSMJGbNzlyB1NYWJaYWQxIgpsss4xj3bu+ymKvW35Vr/eACNAUmXQKdEMgnNwcLECLvSreiWiM4tolGacor1GVJVBFdO/5tg+2KkExzjGt/dbF/qqvp9W2wIBgzk4JmAGN6IRXLCn2ZGV2m/GF8Xfei99RVSK0m9n//GH635gEdISpxRdeXgyfj/EBhKOlj/gXPshOe5TbCXptZA/4rqJKr4LGfLnZs/3BJFwbn7x8RDVtI8CXM4Oanxd/OxZdU+FD5agNGXTeHdMNjbb9RUEYmysx4y7Ef0AxgKKzoPy9Qhp4MJMsdW7MQ+vLuxLnLsbP/RlsI9iia/ch7BqzYg7yATfpfll17gjWSx1rGsU9kZwXHc6D+5T6Q62PXytkQJS/HC4MB4WgX212v7i2Tll+IeV4v1xx5mvd3wYHt6pkqwkR/aRgV4DTwFWIqB2edoTplv83TtrQYWOT/I4t/WAj5fTxFMWnBqjRMk+ojVhW+TgM3QE0h4dHFmmcTemiM2x1wDfNrh+cUh/zMgpgkf3rogonpav9hlB0+G+6GhpBcA8eL+hPFbzrfRYEqxd4RPk01vT1xscXt/hSxclmfrjN3PyX4nx0kGTb3qFItskeYe+tw5EvVO6j++DpRQLtUuKB7yDQUbytKcO+XNZ3+VWyYLTzltSqo/kAfH1qQokD495mOzY3/KvGHl0zbPlXQRxlwz199vLm/hWxYTAtsHjBU7QbrrRvZlfSx5nWJoK5yTuvoPc86L3xHVdLxmZMckxaafhdHjd9Q0igeYvbC6mavAaFRDWzIJB0IA1fgiTdC3GZIpvrUnW/lXPuFLdJUGuvg05Fp+a7+/3VVwdiC8utDZc35VTclCbghOfZJ0FY/A1+7Ic0h/mCfU45zOMYLnLxryYXEE3k4es3aq+tkaBO3xh2187DJhLvU5/vcvwI2SXIZeKbJJkoHcK8U6mWZwSSQ5baqowhmkkUqR/E9Zmu3NXwt06fBJcYHKk/5uzVtcSy0buLlTy6MW2Vd7PBQyNbg/9kG4lMynyodxC9YD/Y5dCr9DufFOE5PHopOi0qXS4nVmRi3A5IGBECG7cgsjqJFkpcOmSGrsG4u4xz7Me/CNDMi4Il0uSDwBvRZIsFDK79HZ4HPMUUih9PLGdIlXpkuULCqmDPDpxYIrnPDGnhz7gngsmMVr6y/mre6g5vY2LSoJUAMkoST4WoJDU0CoUmzWYWeIHTfLj96cHQW2nWqbjmpRJufhTG3/qMblqo+7ZEEOVHCiFFodHXmH9pSEELBWQHusFR0A8LuGRTLAj4kGTwwOSXx2Zx6jbglXy9BfloqNkfov3q1IPqmAHsUKfk/QXJ6VKS5MLydGZSrRtcJED6dFpUv82vKRn2t/sx+1KIW+aufS0QZQP23yBMkk9KHl4LKwtSJfySsrBdQlVSVPQmPqd02L/tFOneT12/bap9kZ78IQl+ImDytP9CsmD9vj35Ljf69vIDUnLy3SUIz8WYjHTsxiVYEgPP/tgJuUxxH57EAL4PIjxOfY4yC8lwqlY0QGV65RNLjgHuTVp/vTlNZqL6FZC1oPZgmWXXNrZEKagUwEVBw7CVMmJMy3QGyR12F7pFT7yJ3sif5ogyZ9eSVWkycev/MlGaVoTWechox5rxTX0nBPETTY1Mk86VuSVml25dHPCSmbgwFlE79+91BkE51mEOGiImyJ7a2PBFjMX6DyC8bjLbpKqkl21TYj4tLNJ2Ob8VT6uFCnaXofRtEAsKKyiZ9KuxMXYpFXsc/jpnj6T++q3/dZjd6Qmcq/P00/jerwj1sJOpDBrscLswIhrM6RWavBTBG+bSUVRaE9oe0HZ5PtAGDPjBehNd8stpWcUJyVYFhcvU/ATQIUsRnwZ5iWIydqZRYvkNnokIxpgQOpcpJF3at6B6QLf6okAW2cSkPFHP7yQ754g7deVrQ2rFb6f1LantWGbSZ+XYqNq273gLmT+GPUmFq+vIryhB/QVaiDLcK05wH7ctwk9Q/tz+vd+ws7BbXmrjTnAk/SkyBeYAslHeJwiUQyZKBjjM8pF+TqCsEtM77f3SSJBTvEO97ErEF1Odvo2EjvvyZP28RXHTv+bUpC84JgDE7fhiuLdf2zr7VThZRRUCdjq4S076dMj+v2u+zh8B636BhCRQfuHELx2SwY4b195kbwP1YTajQnexUS/eVieGQNqsWgd3ozX4wBzg278GBQYZnR+Csk8Q8i++B+bkFX5Ky57k86iPDubsQi0ul1lZ9vW6gT7ZNu0vzb1a8bCuE+7wwE8hAuTSKVYKVxFZMPQ9IAj1v6o7AM/2XpPU/veB6CYi0n5tMNGRrz1YLQARlqxSb9PDHuAADV/f7MdE1aG3CBluDrP69XtIz6uRgjZm/5SXskxveJuNSjDo9KzIUWr5a5D+LRgsGqjf3BJ+i2GjYHX2V47Da35N9KgvtnvNoR/8seHPP0gKUe2N0upQ+9cq6EN8toRDJYId75ktNkGPnVU/lVpGNEJ83ZzKNPxVJHjC9pTI76dMqBwxY4g0cIQ8CNvtBt+FyxiCEV8HEi7LhnqCaWRaGZxQvzhI7xKTxBtmjbN7r6z2oUf+XgKRa6pjTVlIjRfbucOp3Q7AWa9GQMlekWSWNgGlGBnf23PDK08cGkYLMfcUeZ0HAZF2yPI2e+oTy3903UTB0No9UEMumusc2S1sCDj6QLLuh5CpMz6yG4fQjU3NJDcUBiUvYvIOpHP9gVo2dYOOnwzCCLOjP1FGHspIBHWOv8dXI9TwILpq+lJUErP2GuK0/QDNMAqQKqju3HiAKKF92ZCgJwVjNTRE83sqH9S/Acr6mgEQggU+3ws0PMJBzz4MkHj4SD7mPHf8HOGFabwuAk/mOvuFkwnv9EXSoBbYTZnkw/RDpJZXQrM9N8G3RAf7QJkrOevUfKBqG46lfE/H7FpvwmWLu7SzzTxHuQWeZlLfuIyqoPAZqHHcvXVdiKwztmOFDxRlSdL3GSJ/i1JPF3AACsBQazgYULSyWzj5G1HdedDC52UX2/pHg5bOh7/OLC6DEg+0nd10R4/UJw1sWF6pitAwFTZfkpoo3AJk4DD7HsSRQzf1NeU6v21ig5pPy+ZG9Pr1cPxB9wQQCjQsNGph0bMk18x9mkLwvKeyOJw2g97hnGDXjuTdFhq0bQboSm97etbBlo8WhLQ5LsYXcUxVNgwzMBjiNjt5c44oAUnbkn4E4xfrF8B3lZT1cyr3lCUlE0ZPFlRq//GrL2svsm7vhVeazqnF63dtF6oLGvQkZZOmugLR2RmbSeN4I2UnX/zR40U/6oCC5axVf0aDJfKMH5/lbCvvvaB7/P6jGdAxvcs0Tz/PfkHJMazoWR7+oZMY9cm1dhYfP2ADQ+tM3J2AbBt4YPmzfttY2RMDQ63RpvB6Jtrlzpl+l23qfLx4okvPHOfFeLGQBzAxW4jX4JHbAuQ12uByUB9o0fUy3n3uXm5TnhMzoOjwS+6Wr+rMXDyd4m9IMPT8JJk0PLL/VEMbYVBK3wvXPJvTJK3AyiqI5hNp5bjHi8+ckP40oNOXhsQwx8jNftghONmtS+I2TRxB5PA8r4bpqTnNcZu8BgLSSb2tgEU9VJkFXDMZZxHmE9bK173zwRSZeV//TmA8INFXjllFa2CM7qwjMMzLNp4uGWWLwNXkeEizsMrN23JrbE8cPr7enz4C8uE1dTmNbqRldoLEQ6quO4mXbN4T0rGLzA6xfRhuxTtx4Y7O57P9Vd9pxZHurp0zMAGhbmqaVjLW9pBwjhnnnUmYPxGAway6Rzf7mZvPoDYv/ZJbG4p8+9nbFCP2WKMJpwTrGGrtNo7QadA0ca276O3YJ+j0MFyo7Z0ildt5wNrF0vRuMZUghe9Y7APjXyRFp7hVSJTbJD7SBcb+loHbpL1gXehgOJPVXGUrwfnybFaGEKndjALv4AWPUrnAUPX159q1IGWjzt4YYs2tAAjy/DO2XIky09wzIojiry4zMJVKHASe6NUSm27yn4AN5wQub1OzL55dTp98xxOCd8CLCh6LLBpel2YukgK4U+kIFfglbiiZCGcQhsGvLYvL6fuyIPT8/WndwLKzEz1K92DoJjiWbH3T4+YRJk9hDsAL+K2oC0/e/q334jFzXXm8sANSDfyiXmfbM8+/NZrRTC+4Tc2wAgbnae/gBZjCnrLwkqh/QDeR13Co85nWrEdeDULszcJ6LjJDk194WpIAA1TqN4QlW+Wdnth9NYDvR/YHBF8daKDjQFNoL0X8qH+vWe9SMR+sPGU22PQiDo14UC3aGC9sfv09VAjve8vfIAPUNsoy/pm2eu76+czTm8wJai7ceVWH0weiIRipWHu/W2rL7UQjY312+T1PV2owBl6x57RbzolBF/71tvdeCMvTPDjKPrBjJPjUQqESuOMWzcJbvhRX34zzY+vRn9kvXhnNyRjTXF5H8ckHC5r32G8xHY14f3taPcBa6yW5a0hIzMr2NMEL07NNaAiNp01X309CCCVXJxSehSFos2ai5IIzI/c2QrpIwmKWpfnJWNsqOx/y2wAi+J9s0R4+laBwzkfbMc0mjwU0zdA2F1KAZka0ytnSKXTo0yxD/tKikkKtw4iJMKciky0ZphuoHXzNuwAvmq4zz9wQW9fwc7KF9O/VqnGNTqZhOS9mDT9CiB4T94dSnNdgSlRbB/AqpVDXimonLw57ARY4KReB/plJdN04Q8N7yFMi7s+nMhHfLsJNytW2WnZBL4BGqbCtg8dAbyohSqFlx6gO3rPGNw83xtW+FJvmKdKPalBotSYrZU3A3SOQheCsKRcV6RBrqIXflmVUVUvQrIBc9373OW0aqGpZvpCuipP1IzLV0I6b07jCJnFtStZaP3lfTDwwbMBWqgrU+q+vZxSh3fc9Z2EueU9gXY+ExfYEEW6hRw87MZ99bfuzG9jegAQamREwbinyByNFGQxW1lJtDWEVEXk6npetYv2EX0qLgT5Y35Jik/nAXg3yPZ+gxLAz2q2sIKclWbg8kSD8SyRhSoEaiNN3aIvxjzVGOKDH6IwCiTZWsUBA/CXZHLRl8+c18VZzTrxnET7IrRUb9HhaPTKjdd4qXxsSMPyfnF5gR6mV163e9qHDYt806GuwGlFkeNLkb28QhTDuCRWVDF3Wt5EePTEDN8Er0RNNy46KX2cxVEn1lCOAs5D1/qK46fjua4FRlE/ll7SbFlIHIQSzg5C9OOyded6VccnosktWfuFw7FEcODeh3pCSuQjWX+Z/43d9lBGYADDtVFjXVvyZX1VvK6MfiKecbWzHYnyx83FjyxLUrGWpK/0V6U/xLTkLlZbhsMdK4bn20/WvC6BKzHdpFiXxPhEuq74ao4TF4WqNN1Oj4RJA0hARV6f6+IBP/t/5gRG8zwc/+f/YYEtrzNtSZLiw9pJ6o8TtQ/8y6akSFb+JQUqf040LB6WSyqvUnyU/gKN4X2AvUhST4TAGDSubCnuquiBtHOwUEl+OVoO11n+mXtmY45DLnGraoJUlcdcHUdtBN0COqcZqhbQ7olrI45FPz5SM+ed6rQ5hynPfS3Cqb86BATv75nnD3YhMC9MEJsrAiLIgkkpgiCrUVrpaZ1tQ9jKpC7qpSDtx1fWgbIzyjDJfapxmBqYoz77FI32gNnIQmXoqnjYrnzwLqTPSwWbNTGk3hKjC6+ZswXIOz2XUb2tk6hTpHFxaM3DQhMazHFMdHnRcDbvbxMp3hg2H5vxBpZ4wiUEvAABwXbnHjghflGwgYYpZZqUynMgN6S5WBmDa2UsvVe6nR5DE798K8DE4ULUyNzry7klSpeWVpFaO3S2zaaUTQ9i+5zHvpMSMFQ7S0zg2kbo6BnZ6dDh/Hlov7XKag8H+iOiVc507zls3Pbg/I6gzM9oN13k6a3qf7aiazxG8sE5hJCwyaDy2lppaW6vH28ecgWVPunOXuEgjSBr8BOF/nQ11OjE1pqe8JLYFnTIU0Q9r/nMbURUKyTeZQEpM2nlexAq40UuUbrm14wX5+2Wk6I5XXM/6pwcnkm7eZCt/FtoXW0I2xeyuht7HcV3RqDN8d4owTzcvOZwq0YjRX+tQ0+kiPOKRA0Iq7duCqH1onhjABuovoIoeOv5+S3Tjgj3uPYR5A0E31dtvGLgPP1Db5EOEcg0TYJ0mPG2HAFmxqrvhUrumtIlKcrj2NHZfYtBkC+WV5a0/nlrK0yH30oMhqkulDKr3hG1cusBT6UYoHAwynmcXNhD9YkcXAsxlBhCiOPwa6ebzNu2PU9Xz9fwFnNNy/gXL24iCU78c6IdL01buOCVsbL6EdwWPbXf1qFF68+NCkdhIZPSCDXFMvQtt6kWNel+kmHSeKEbWqZxj8rZGAVpEQ5oJItl2zpDFGCfF6/NYm1PkfxFUK7pi1DLqK36ts8FlOwaWjan/ON0qmnS+mHsJFvExuLxBXTUnfC0rG1QR/2izP04zxC7Jd207gU6O/Lng1HzS54FmSxdMRtuPNCvC+zCSJHNuK7TdS3oU9cTkzbks53jKimNdbisjFw79FMGcI94AMfX4bZLPp+0b4RBYEWJb6xbrEcknvU/OEBiC/NBot1f0tg09y/5hg59VnAFa/dVnYbluQPDs9l8D9MMVlTNnefU8YpAc/c1qI8RVzNyWdMn6UZGUdRxE2ZJvRHkVr42Ksy0oRtFBn1nFGBOsDO6z7Vk3WzRAAGmXGEZyQlC0u5muUQ7LJKmQf6Eww5qP9+mygq7zIk07Up2TMUbouaojinVz8K1giaNKGHEN3R6QtKs3ntNE4cCu5FLxJOujuOczPSX0hf5qKJn99qTWInqO38p3Qv8SqmqZV/c2e/jDMI5riPvAYV6tn5uvT0+aK9PFrWRU/wLm8nqFBh2Zyg93cy6xloib+gXiz4DNgsYUn+PtN1ETLAa/iLOBU/xu79ryGJzI6tfdfuGiKD/CrJywN0e6zjz4naAeK/v69Vh77NPOzyJpxVBPhPxATAkTghJzwKC2Nc+e3j/JBlx/oIy6MpPoyCNb0+ZP9HOjzsx0KQmAHWhy9Osqims/mkF+bUoAOZ3h5o1/iBf091jWjGiYnt8f5u5rbk9qL1+RpuCgJ1F826jBkzkC/O4JwkHYj6x6HkQHa8cMr95VUIlHXoNJ9IGLwq8VDz/AvNwqkCMt+KlvHYNq7Rr+6iiXhZU4ZFeSitRKBZ3Ygefm2WlAlXSh26LywP5ff90ctoN5tqX1eQE3E4hsDMC9lg8si/6yCNtvFLkTkQotVhog8sObdm0m/FpatHKsSWqGcd+YHsU78ebTU8j+e0Cw317TBgWy87WB75Ire+7HWYluH5X1TC+wfoziwEyH0f62Wyk9W4fH41afGudRxkKkJZn+zEXUd5f57VWzgTFdzl16g4ia5fYjhP3CwqCjVWqCQTdHXEvY50BdPI+qlob0evq9eQl3b09JW9kieUEQ17NGuLPr3Z7Ce/y4Vq4+e71HNCv3gBwCRRJOZVJtg4LnEZns6RHcDDPdWKNl3DMVsU+n0v7+ezu1cqrUW/Xgg4P1o3L4Eg/15qNErWSg852K4/gaD/XumtOr3pw9XanyfDo+C8ZfN9TKic4FrVGfszuQI7QxJrr1PJGtdqN3Pujw8OT+8ZlKCrlNBrdORq9GZ29mX/Ohe7n3EfWNTqq3l9CGp795CVDsz09MWuJozVGjvm7qSM09097IeRpb4Z/en/PdXj+ArgMq4+sM80q0Vky6B6c9AgvwbnOvJrTRC/afXS1MryE9uthqeeUznqCRWdvHHsEiiO8yuY6+61REbM79RE08/AaQbgCE/Vz3wicI2iN0T1G9Odc7H7OJQCauAu6z9CThrckAF4VcT+yZu+bfz6/cQXJHlmx+ZH1Dc3onmL8iGzEc+0z7mgCe2TN8PdDM7LkpSD7Iyv29GtEYMix5y91RPbdXmfkkZUAHlkzANDhPQdwBX2AW6aSrDLTFIPeD5teH6h8bouo5ozOijZS05z8OUr7paLmOWeqmmAzLRjHWdXnoG6Si0e8rnEUcB159KUiWa3MLL6EeqGlV1ub7Ox7m+di72CGjAT3iHWhDI9sFa4PIQtCrgRqSRB9y094MjpB2sm1rO/FLe/e99vBOZry9LV6tS9fIvz+Su4u+nRs8XL702qJpvEbP4qYOMINzjvmIJaV+7i36XPD4nst3wewj+H3bO8X9MqIW2FY9piSLhpsERdQXlCUsMUdLCuHpu7EyDlAj0Ys8cb61DYRpFv6lTQCE1O2+4sRJS0xTpL0/ILZBuhznY7L1cBYmSbWrmPlecgW4qJH3Lj57ygNEc8Sz8sD5MKFUYEiribfP+0ujYo/1jbkxE3HR0BEpzXKaE7BH5Hht2Y4zcXlrpDZJ1q96dNWDkA4a0l6nUYIjvWxtjCq0tFWpJycMZ8zlc9rNNeNNCp5Nux4pfmJur+yv76/1uVjgS62X++l3aPUhk50U4r/HvZSPHU7GaGOnC5DiNbqM5vgeymR5d7LEE6BeY3v7by+vkZGQVXC0JEB6dWcAPZFKbfX91flJpuJqZk410Y44lWTNAj3nrPvHqltWCHK4q5f8KObGjYgpLlCIwK/oodifqIaZy0e77BzPSuhD8teZggeOA0ROKKiWjIMtjZWF3G15F3q4zMz7grdZSMZX11dsZ1IyYyP4G/YOIiOAvAqxSqZqdMz/wizKh3K1mk4iX/3omf3JzxmlfVG+TvGS2339dng3PF4X1ABpxsLIfO3x5MXk48UeJ654YWvxxsKPaoJcb2e3/vlKoYbX9VBfCRTD/T1UIQrFMkYLUoYV5E2eX/2CuZyCQOMG7OpSQCj16txGzC3qCgH1uRiimUzgZcg3N13SZQdaAQ4UIO+B4iSBz702hgAEDo88grxiAB+r3sA4HDeuYVDCgDwJzfuhgWQcOFiYEZS71KcCk6g1YqkCAk/Up2k2fLtnzbFziXGcRVFQcWHz0ugmaSXIJXA7nKEyJUAbvDkWNg0ZZKkfvxff17jJ52r8e9Ug/2OhxD+2wo/YKY5n7+pBuPTkCSp3jf58bfV27+qwf5VDfavarB/doWf0H1+flRG/WhO+I9Xg/0qwZx/dIWfP1dDiJ8/VUT8l6zwU2sOCWu++FZtqFM7F1Ucqw4Zd9Ud8dQuENJ9F/3tPqwxKhrW7H+0GgwJnQLUfxv0XL+qGa9RfpUyzG+jIhUMLhDUeRdSb61U4bBVHfKfrQar1S6sQiaAtN9qQbAIPXK0YR2sOqP9ntkGjok+eq+1jkW0Wv1/vRpMq8136JtXAJvr047fZkzI08+PfstKhX8rG4mHBgeIykiV7kjV/4rVYMEtdUFnwprjrqqjVY/un2uDx+8Wd+Akjy7Zp1+tMrjDUrsfL/13q8FI2GPIU6/JW69d+P+31WC1eQQdewXO8yyffeQkV41hEfWCyqd/b8VJLt2xSp1JQJU3b+3vb3h0/7lqVGWGW/9frhrsP+I//mfVYH/j//43rgb7vOdpFB6olbLuX1Zwon4LPvqsgHMwLIqbMsj0VlBsz+vXsJihwuiHPFQkL6XswLNb5dSmXalcoNKBDcnlyZJtfRaXaK+2xbHxcnFlXZ3jt7GLU27K0G7rCevRt0Kg+7cCEOSbYkAKhwhyt8TXUF4pcd93u5/B4MnvsJAX+SKb4tuuu02MRgPg0gXh9mu1EdQSRMAGeixVs/Lbsr/Voo4iGQk5y4m4mfHdfYHA6wDewOc76uc84+tHOAoSVOJ9OqrA5n1gCdBD1QnVWADi6KWLMFKL/EFcFXsNiRjm0vvxlSmX50mEEBnwju7kPs3f2w+TlCnUyndKm/N2NsDhtT9GkuGGYjwu6oeMdfKTK5gwv87JPzDFJQx4fJt6sQuxsd2BeFAk9Pr0ZPc0PdP21xnCgrCwpMDAN+wY+GJcL/n9ENnxhcTMIpHHD2iTJpN5L1ugtvnsMUWQs/Vl52b64tejzti+WmswqQ+TZEm5CC/1YRMvQNynd/gGVwp9P8iVHgi6T3kIDhk9tQ/lDCmLJQdDkI3rjoXEER700+lCMw0H+5GNzQiJ65UjsjjQPEUWFBjamfeeauYQ46JOWC+AsTedbP0LMTvjBZw4GvBiQZNSjw8+3Rv6skI499ZvoQDqY9+aTSP0A5VImbmodzpVBQCwl8kWdPMO3fp7QUqGQIQ7hdactYCR5jR3Vjs0n/H6jgjIJJnijURz4Nd6/7JwhMYo+b0Hn2D00V7vKALO0hin0cxomZVSZ0bJhhfiz7O8xgp/v8y0x7R8hkiQLuR44PsIbdvBnMf91rdXmgD4HLyAOrgecSApIsXy9ZjofsNigd/lESWxdMzsuz5fmNbTCRzd+ocJyMddwk/EeWtekfp4u8uCCMMGyedezWfvUjPyTjjctOcRzPWB+oNqAU19tRVX+iJNBKbY/XsB6gJNhP1WPm4AW8wkjwm1VHg7ZihCoGMNAKorpqIZO5pQ3yb9xX1h2uoXdPgGDaEuQilnxL/lFeOQEk1AoJ5TzVM5KVLK2+LXKbpxPzciSwFcw7l5pEWu4R2T2cM/s8kV8rtq9RXIz5lA+J1a0SeWpqA+6lgdnmaYQwQIQGK5wqFw+94LRxVo22SgqIkdbcj4idhGqstK/XJTktgP9xknOFHc1zusj9NYYxrCYoc5geoj5v1rIO/hvX6MmSPu19tuNMm7Xbnd/xt7/9XkIPPmiYIfiAu8u8QjPAh/hzfCe/j0h3r/PT09c3Zne0507EZsTESpSiUQZD6Z+TNSPpk1IL8gVPdUJHLkB3gljyOSw5H/lm0VVZCc1b7kGze/0YxLHgPM8eIqovRHDVWcpkyAaZaEuWGIFF6FIyid3QNSEMRZIu0AaFrzAyiJesou4bmFHMk7dPHPo3NpppUFIdMW1A3hKyODgEFX2x6xzO4ATppAcNu67qc7Utlncg60u6mcH9LOurRbaeXkVi8RwlfvWDuKWoFdGkViTt0CrHM2X/uHMDDoQ4ZpRmaZTA5dyhfkZsGCcIedBE7rg4F0W7ZoQMvIaJHivmzVxzMDIvq4HHoT742FLXZLQtGPi2orEiMuDUTukgBSVApOdrROToh9P+yCmFJ0527pUDCyHxm3D2KUkuFnGTjLKIiKCZInQA+DAPVReJD6DRBAQDGB/K1aoB0FGsDg70KqC3SREBQ1sMPKWOxLx3taayQ5OdoQWsIigyqfkpzAZ6eXY9rd5uDcSDcYScTnGEGp4CBhOF7V7fbeETTQ4gi4YMcT4EGST+TgsqEL5WV2JWjhRD/N6V0Obph86KJDNGKA8G+PffXhMC3zVarJTODCsDDdaou5eBz0BfuJLKW85OrfF3AXEHoWZrwH3IPdEvyZEGok7IXZB/gl3xEwZLrLiaNUp5E9N0Hcs/ah9V6QUNGEMMKo5N3blsvhmaMMyHw5PG/sx8s//Qi/CHoP8YuLkcYGVxzU/r6/dQnyzpd7ze5vcA9FAoNDMFnXYVNkARBHP+gDWBxc6JaOy3BZsYW3JFxzVErNsXDpeAs/Tamk1DssUPR86bt740j/Qq2EZSLsYtK4W0tstrRcGePOPIsfCCBhR4x8BGAUrzw9zWHJRkoHgN01u2+5kh5A4gOQL11qcv4XXR4oXV3OJ1AhHjyDX8py53mH4l+A7/cNWsdDn49PV4AgiGKfX7zRNGr0b3VHnzSzBVdIf/PQZIV81LUIaRpScmayD1HtJAEUX+xlSyk8QNI8yI5r4WWHWzCvVSZujhotD5sjaWs8pR6qVXu7gx8eBtfa/WVg7If50XnJxO3jg78Eu4o4CZRQ94A6De5Zt0Yhr/vdW4bDDCERAlglJofSCcvrWRbmjuAzb/WCyCBm5qYx3BUchO/J5ipsDli5pJ27knokE148oLIZuffe12vwBxswRZKE8oxHCLRki9s3DeBrzwhn5OOvSpuZk6uiFqjqvYyEZGVy7I0o4jZWRWums9OfZPVN7gr5FxZBohVwEgargFbLsl7vPR1JQE8TSDoZvMlY5SXlwl7E+MBTrAPkOqRT2Jc8sGY5fB5C/It+AMGewMXISBrL9BYjeSpgpLaJZE6tGJnmQXjS0RnZC7ofNC8Eh9S5LNiSe6uTUSQYIBe1bgtB/FdeFKBGHHXB2FJVkdaScEE+czf7c04XvQRy+1s+zaBl/HlSt1inkors4JQkU554irT6PChJ20guzPfFZ08fY+gGVAa7itGYEk/iBhEQI9SkCMa9VfRrB9COhrRf4dRegRO6yOqCRptdPr9ZjN463sK6A1Li6sV6YQdVnIX8qACV2ko/bxcTvhACuAP7/GzunLWgenCLws02XA1XBgJyFZm/9Fv+4Fkyvq5EYyZrHAw0XEGKioLQLF2qZxjefsdOKhuooEQv6na8ZfHjJn3cbnbhSSzrs88T1SxLcgY8XHISWGft8cKo9dCcJib4DxIZN6PAQIJiBwlNizmBobqwVOqe6wBc7QPSYviX5EUXNmDcg/aqO3PL00B7oe7tL4Qx4NU5UvEAn97W1ZmlEycF91J/n1kLdLYF8A/1LDrbBzuV9zp6rVDGV0LFMGWyvBKJyOvdw1P/7/M9xHmu4jaPbCMYFrvuubTtv9UMgBrjcSMctI+Oi3YYo3g2uF4Ba+obB0C7nl+RA8qBAvBriLiBuJLrB2+idKwyw+20Vx7YiXcv2z6tUhzB0R13vByj+YTgHmVUypa/grM9PyZZsQj4iq2BANck6jObd8wsWelPGFnpz03c3soEQUlEeQ+ofCPG/jtKD3R4x8KLavX2paYlnPDB0blVST6oZjOav7ULmTLM5uBh+fC/bvxLGsBdcCOOmw+hVbycsVcBk9vOS8JJuxur+41jVHYvZfJFNg452MD0294JeXEoAlUgckrXQzZ3W3NnopOU/AHALbCXUwfVjYu8IoHE4SuFTfUtfttRH68PeEf61qjQkWEQQB+F0aTU2/GtL2UgHkhCJ31sWlVnv+DEgtLsLNmWK4xbrOjWuV7i5GMWKQZouG9YFi8D3SEcVotMk5Ty6hmUoql0ROlBLv6+uiPnyvvL7PIVozV3dGR080VPfsPQvXhePySD+wvyKx2vJOieMPJ1HysB1uiiaa/S6lzVtIvpWN5JL62iaNCOMWb94wWo7EA6yULgetyYMJsfbOKGNW5PmhSMmH339gHORRNsjztFjX1tmvm8ig+ky/s56BKzzAIO+xi5BYZQlXsBpZShVqkyj5Tv4hrIVU6XRe3qLdAIG/eNORMxBtNmVtU1B5AhBU0ux9rALLJLksNoVrWNr4dhuF7g7kImLxDwNtTcb72QtIbESmPPwYJDImcxxiY7ci7KHIkV+DSmPvCxp6YTLyAATxJU0iUSTEv9gYJKm/cMzWzGIrCE4T7kksFAiIWuC1G1TsS1OzbSvFr2B2/fIUq/IhexBPhCEhFtogkEXlXq5s9AqhLUKvbMXCvC8L+l58HlhLoqUDDviGl0+tygRQx7pXxg8B3a4qQ3wlXFbFUzCoWCTjiTGyohPahrxRJJ9VOe1hK997puDNPkI+3919NMMsJ9xZIGrLCySpiqGPYJLhJzDv9GjYFh6m28dHWBSHr6QWgXPfXT7S8q0KgqF4t4M3psA2mZOYjY3QSIB/YbUnn5OoQ46sowKwGWvuPS5U/mIMJqr550kODKJ7n3PJ4LPtFEXoLGfELfuxbJrNPdohZVae28Gl4RWIOtf8AdDx6qPhUAZgMfqTtfbLGIBxQsVz2kczE3PhJG3aFvlERko66888iW10SqVpCjYTciZ8jzsF4ixuuH374h2TNb7KS35VCZHwzzaPA7qOeslHiB3ToPjrbhRTCJXL1zYwKNaN7yMxGxUDzQ1sUzI9eeEefXY5jPpSYWTqdFm8bYlogckZy9f5lnxlD2tHekY1aUDPDpE2Tg6jHWUgx/+1RI/PwpPCX1yyg6T8loIubaxpqKNtgKwFyzYZpjX5n08qJLGRjQhb/hCp2rspnru6Cedz+WmSloD7VvO8pdaT/93AgnqigZD+TvDarhlCvSg3Qmvjwpn22GrSuGb+b2CpGfoAq83TMfO2GAs5TVc2WZDzuxETeoTPY+55SwzMz7CnbQXt9hsgRNnB+d/2Nf8QOfTaa+tZjLF8sLaXqAv1xB4UQey+nMDnrfz1z+2+I08NCWaqlSSEf8kheszTF7M3d8RgKv1ylPf1vL8/Ne3zxA3brPhwA2kltlXSG+0gqvicBn2qZqfpuvYA49dHuIYLEagSqLLzRe9ctH8/WW520L9p8fhngbC1U/byU4RcS4viXp5e/LQkLDuXCmsr9z/hTAKOQDUe9+9Zd3a00LZ3M4B34y6XqHbwmq6GFCDO+4Kw/clG2OqCwob0EJvoFI3kWwQBGY8S+3sR/OaPf+vmI8XwV5HqsV5scbd0ZgKmOyDIXY5PeOMfn7m5LKVJyk/p3cquct97q9igJbCes/81X/+ZJS/dvd+N+eM9y/rTPO/H2qwttigyggDqzYR6hYQa40JhutjGa0f5bQ/Pxpi9857Vc0gh7zt2r5353+dQ3Q1L6nr/9hXhRWbPTH5fY/P/8WOIH5t/XNBebfps3+t1D98/v//TGOWZo5+2XIZYGuFRG6YH+86e+U6Ar7BA/4/1aH6t9m3UYA/G+Tb//9pbfw/PhPW1T/PRRvuKfPP/9zbwX/XxRKYgGHKtK/9tUN5V8neP867T9R8P/Nev5/PvZfcpH/cOytS/0fgsH8z3H83z4mfP4rivV/C+F/Xb3/i0P4X9QO//2Y+GLmf0E7/PsxlvsvKdb/HML/wnr/14bwv7DjKfXolDTopy+h6vymYo3bRfrfc0gdK7rLrBEGRf+/NcF/qj14/uaG1BS1k/uDkByoI+3FJEw9w/9WnPHzC37mQbxG3p1uX/qdFNNywCc1PO5f1+XH4VP93y7977fleZbR2LERQtd+eI6a06r0o5n5RFDyolylCWJl6P9e57eazDkosnpFzPbv1wigbcAT0/7HHzysck+yPD/ahr3q4UQAm6/mi2LVGuZJ4szqziq1XOcYk/2dexb8qym8+kPTpkxQ1mkqHDA3xsvP+fs69/LedQ698D9UQjQxxXqpsZi8ZPYYWzt42sa+74WqoJIrqYH+VUnh1VrQ0/29ZzTUvgI9qJP9+bJVRvwX54xw+7xK3ntfGP9Ds/LM/HlMa6R8fmbv6Ifj7P0adPQ4AyPZOvt++VSkof/AVZChVrn3trnKDF3Z1Pb4NzOHbfl2J/mmZ3AZ2tQrY2I628oF6+97XScg3DyEb9mIcdhYS5gfG5FzyDAJX4QHyIrokbMIr7vuVgNRYghfPqRed53NFc1wD2xWHLZUOoMRG7i8kfH1avGH52/NM6bYRGHh7jU9BSYSR//VgpxtCnfwDCdY8QNX8S3641EuJgZN52BEFSFRsurimKg6KwqMfWXV+dhoSeDLWh6pr9/sx32rjpW0WUYSnub1ME/Xe/2T9xsxvFACDci/EPp9cGWwU8t8Uz/opVF6cm3znbBvVx77wjCQFpdkbLn7iqvMaLICfBNornxGcSPRv5X50kYPSmhX7lJK7+4r9xIeTyPqXot36EwtBdvgWK+rEdgO2P0zizHAi8xAdAs1ouP+dzKJzImWnkt8x9Cs7Ba4djVXkgDb1fR+4bLtzu7MyGuvZqBnovEcJO1KeRHf8eDhg0Cr01pO2msWXYC5T6klWSfEj06SKi6A2tmaj5OtP8yOggdrfo9Iwx2M3IyUZ1iUkM3FVfWN4SawMvBMaOv6OwEk4WIM6wBgFnbIqTHUR671uixvwOSpaZ3ntikzF/As3coiIPWmzXaE19lN2w8zT1I5aGUpl2W4Q9rvYup3fxJ3hAxuTkGVVAeAuWJfbQgaTbZp2Q6vqDesjMpkK/8ySEk264miGXYdOG2A/wERRdZ0Ktme3c3QXGLsZHyg8G8CL7dd6Fsb0tIgC88Vthdef6sb8+Agl3IdM0jXNRNPU1tRCG1V9LJ3WpzvIcNywUCRS3NxgZaa5o/QP8zb9kzrEK0BZXJgoX5N0MG3BDvJ2qs1lsV/ZCGm8Jb3pN+F3BOFiEHTg6EgNkC8Ed3XvS7rYYORHgTUq7Kva+lNhvEBECVeyTqljoGHooaHMpVAIvP6uUiZN+Gn42Bf+n4g41+WAhy42mdLeo7uHZcqN3H9ti0sGSV2xY7SRIsuKi9eaK7HQZn2K9xMTX59+IPuILXsOwtbw4aTdykr1nFwGlJE2Aw1O0iI2W08j+MpwqHdC3BVr/6WOsT+PKU4r7I2XQ8KWSm5V2EBUYcmqlacV09h9VTRUJdzUH+fFx+pB5d28zsPjcV4aPatt3sBHl+sIl8bGWl6hNzNMa36Fq41EE7Ftzh8Lb+eXrSq25stE9PA9yM+rKyTD6DpV5LKyBy5APxxfhQhylgz0larPYQrR3dgUBepvt72OeTa8uWOFldcBdc0e8iDnhYTZMGsI5ig62GfIbwfGb5k9pw7avAyBoGUdPQcQCMBYB2RWZYp8nNd8G6Qyq9q2ZWRpvmsF91erL1VoV5ooY7mtP9Du0N9IlsdY2MnjoHemgvNpM0SQOaDn9RTv6bEtWzeUGraeTYuBUtU0I+NqhORLtPPtfMdFuKkahIQ6CsDzr0+FFi0J8TL+3gjyWbySIPoE5H0oTo/hh4H+vAP6W+70sRmP1sVUVq5lE87aJhp5DKxrY9OejoIlNRR5tFCgYHfcRpYHmg+ZktXdjxPrSYeD+i4Fq+Nb+jWSOf1Kv3bEy4LB76dvn1sZHWQXOuM6TxmPYs0jQRvcxnE6pduG+1FYYRfCSMrugX6qBTDVFgA14v6IN+5ac/5+MJTm5+mBIg49WvqLykvb/x7GcPaC3jusTTDTJa4uWkUcZjcoXKB0UhVmfLWWIxnleywnpSIUKqFpGwZASY50Oqz5wAVM5ytdMFPxwg/PxR2yN/unTJb6ltwyrogTLJ4+5TCKWzyzqfoBnLZJnFv5/Gn07og5SAQvDpV7rYCmSene4fZbVXm8qi8wZM5/QDuGmMjvj0UfPqQtchL61H+ZtSJn+mEAkdks2MkxNncwvQFiaIYsji4o7xrEc7HwqzSRXfL+dQRXvyN1ZTr14MKbY1ZdQBYroc7vwXCuNRBL0BKXI2aSBgj6QkiKxEMhXLVfDS5vXJds6tV6pQohg71UHTahO3HpCREL8hRckKkCLxDdGs3mnkSUEL1UwJAB5aYbm3IQdk/G1rbbQc4wP7edZ0AuS/icQujo83a9MPtXbuv2gfaxqjsQBspNZ/+nqie9bKczlUim+qCEaFXSolYkQNUSPN+ki3HMiJPrCv3AqYGPP2FZx6/4Rlx56D7OLRsLVHXD7y/LUrxPeG4CPpvsL4ckWUyXfZzGjE8SX5MqVDvdc9KgoEORH/GdSoU0gF5Y7ULpuNSggBNff4seT47dWXqZC/fPx4RVqvL0buHS1cZzglmh2652Kj8vb7OGHdn+wqfFlmwF6HcvoXBaUX7I/CIgRLIdFD17OjI5wfMTzq80k+aj7jDIFpjMzO2s5TYOgZrzSwg+AcF05EGTK44i2MYoeI2poI4MNVNuCuiBMMIYx0gQwGlcmMqjfJbUApZ3/7tvB27pXoSFW7NKqgwa9R0aCWqDcJOCc4dR6uOWl4mFan2OALYc6KtUaxUd0G5PGhiuQ+PCB7Be6hAi4fQFkhNAj8FDJHAAMNXGy6l7xJ1ck/6rMyA946zjMdOwqPO5/zS9JBhF9pTxi80Hvc8DHrOkGTi1r8J7G25Ude0bkdGrTGYgY/+OZYyHAb1CzUV1uJX6gPoX5YglEQZglBzMZ3q/beIznZMX6NO5Hd4OClb+70c5EEUdDNlHf6rqxS16trk0wWI73ng37JDHHQcCDwHel8Uasv3JTXboJxW0Ag9JYr+htNsDFKZh5CSbfO83w7KFOndWGoqF1t1rTHa+NXz0yMK87qwGDQ7fHt44UYgkOWFRhDY7b/lYlP6CzHZ2f/SQWb42HP9lM/wntc4EoTFTFqhnWXjg+jgXXxQgSJmHzmqz7XaYmZudo7a0XME4I+ZfHBKO1b+7K9QZ+dcTNVrMBbnObTMTb52urvVQ3oZBQPP2qT9+ZJWwlhoi6QhOXDuIkvsLPiV0AWNnhuGzXs6C8o2apjEx/vHZ+CHeQCumXmA/TzWCPlFA5cgOK7x3hwA5aWk5/9J9785PHVwICvWwch0xfp9LSMOpjpAPFaeggnut79/fBAHwcRyje6U2OuyOnfv1jyaZ3+T9F8NwbZTcFBsC885BeHov72HfVluBTCrAJ6x+tftzPpSqGynq0H+2AJTv54L+Dbyyl5xjDCfm5BM2/6bhsTbadVgH7carT1XEF9gxSRy8ur8MipP/mmn0LdfYxQt/uLBLqXdG+4RfPVjINljEAF6LQt/3iQK4fQzsE8PUECgW5zM6n9lVjJmtFC1XAuuOX58c2ElWoDFGqIzfVkoELgqBWMNY708fX4SB9bsnngV2r/crOJ4uLD8lKqq/hIZ0jG//xc5DNbfh2O6xv3jgHkGdbV/rPC/5zCwTfr+G/WnqOSR+deAkhn8nxyG/5PD8H9yGP5zOQx/j9rT3Yr4Vx5DtvzrL/PveQkp4kzx0AlR6HT/YV723wPzeQEz27+52R6qPv/M0T7/ew7EOyaCv/uJ/zvv/X+e1/D9z+1c/I6lLm7/ejB0RYh3a64NGU+0RW5XR/ffXGWxjxAdi57s/td89/8neQ1TE7V1GwdOF33hf+6nvWLf4IXNlLzT+MJvPcVe57vOeNXV/3if/9TOxajpvtdrP4jxhR6DjzvNdX6GW73x8p74C78Y9falN9Zve16G9Pn/wc7FGW4EHqK3Eay5OmT03mZINmxycB27Rve3Y0rUG93bB0/dFaDof7Fz8d/DFO3L5Mfzn7yZe/3nr879fzEX4G/cD3GXDc7/MAf+5ZE7Cv7mdPt39uJ6PCgvPrB1JrNrEhhvvLojbWgk7e1/x6D/2I8/snO8nPMf+/nx71jbX9N/z7cQ23+u9cYlQ0TkP70zTx/XcRChRpttevDGu4Egg//rjwIeBfoWty9X9UZrSjqq/4+5Dv9zLsb/atz+//N8/MiLg+mVDdT277uzwDmLn56Tx6CO7+HjCA5zYSpb26IerX+L3I+94F1Y/LPp7P4049TY72kWa/Qiz9ZmK95Oez73MPSVUl1jxH37BFxyDz1qhSj4GSAKIi0PFNub5Xi2/Sj90r8Zl7kh+yTPWjzN7pQ6QMfYk3TBPjaGqW6u10XLws2nt+RE6MlDgOgFH2qYh9pmqJK/SWb+hsLqxdL4de2fNMieos/wAXU4E6S8JDa8QqA25Pz6k1FzaFEEj1D8Dw2vR5wvIJGLwL2AxTVkDAhjVDWhk099mvP7AtS8vTBVRbDdIYsXOhYZjiTjuIhWR24RTQT45N3uTRjZ49J+Mz0hsROpnj/BR7n505BrZbnDvOXe0aVkXngfjQG2mZsmKYgR5IrMAYpTqlb2qpozmDQqtayTpCA3GTp8Z1wgAJCAI5HG5kPZkWp88fVnw1yBEolRGkcC1CJEHwEvfLqf2kCHHgxPN9MeSHHu6z1trAVWlotiXmyCIUxtHaIGQjzax8B8a8J/ZmNXwxZN7kxOUDk6m5XHb1wDQM39fm7kOIcywwcfPKV7mWs91SWJr52/dr8GD+V38S1nU3K9t4lxV+VTzuUEcl59inA/9/5sFWzeismVZyASrSW7ndWzUd8Bq0J81hDaDwtytCRl4b8DggAY4coWVl4wU2jKec7vG4y9KY6+yUDTvNcasSglxQUYwC18/1l8a9ETjFgI0pUW5mHCxehGrf9yZmYKtVP5XlCrVfQ+H5Q3XyrB9tV1BcFOPlbnbYIaGe7yjV+K+VigyQYesMdbWhayzqBABGEnjm638ZkP+hGMcjbRsD4d2ZLHw0KCpmTSiBBa5iHsT7Yeu7lIMfnMx+tnMsqNJ0vPl+QTLK1SYZ3Mm8qhUKwp2xn3u3BtRm27P2EwfF5+8UzXY9tSpUULMJqUd/HT1HxGujEloDT30hWrNtBl5roYzlQb5FCQ+UK3gF5NRdAefDoSKPsua/ze1+iaz+k+YAHtY/vWrnJRzZn38YOJ76SLoAtCsSt8bJNliH7KBBu8MKURPrzxXQJEZRe5eSUcySjMl3VtC4UNkPt7bsTK7P905lJ1x4w6hWOUjno9x5NSST98c7nTqRSJvtWq/iJNWSNyuvPrZUHW2Tn6y2YP9j53d47TaHXGB5R6fsDyt9dHdhIveK0bykIXNVKe8AslRUalHwVmch1MA0RYFhMW8T4cZKUbaSnsPWTWS0DYlvBVfozoOTOde/+cP0rcjKNcKGWlK1+nVEW04fGaOgnlQzOF/JRfyCEBJQVSiWOkViBO83NQ0lbOfGHN/CWWgInALTAfEhImLFYPIPRwPybrUNgO1BJsj3MVGUr+jFj2s4Sm4EjsFyUCb+LJzxIPVPRrgPmWWeOiyDmzquibKDCAckjlttzmJWXs1Sm3Dac8+Biy/kejj8KyRDYiGhBNAKJRaW2MzsHqG4jbgfwhpGRD28RGNbUj/zZlkTIiBlO/IxRdqQbLviIfeRBwvPe3j3/JzivF5dl8+AZ+KGaJX/1n6tlBJ5jrAApff4nmhwaaRaSZ2jWy8pxUbypyx+Du0qdn/MmU0mPxCrMJsLTQF3RMESZ8FdY2gInVIln4OkW9sHWSqc7NMGNc2cWoxf1MDFnibP6S63UCKVdDxePVSJfm7sNJytNnu5AIbmDOlmWX9ttBM7d12N/m0Zp4wDDVH5NdXVot1u472EvM2m1D6jUJ9jJYNXkeya/YSpf2MtOAU3DzpRHLq+vdnVkIDxQbb+8MIdmqL2jXFjs+ey49fbn3QmrD6Qc1pPSvJD+g4rKDekNfC0N+hkUTdZsb9a/4OpaK1hdJjwIpnQGA1//8TyDQEsHLled84S98C29jk4BDsAxcUEowLC50oJAB9TGxPvzxKBQ7H7lhttmen2WA2EgNRes7g6M6GOWDOYKIX8Fk7tUIiptCkLtGxBtQKk+aJbyv6+ICk/W3QAa2lQgLVTj08tBuPjG0po3C72Rl2E+NcUqnE9MPSNcjtQeyZLBeB0EtfbQ3HmXxi3yev3/y7Iz1NFy/Y5v+PJKGNEt76xRP87cpL99f9C7V6svD53l3OkjNQhdloyy554byrh3Eq2Fnz6jaLj/qE2nogay5V/WTPw5zPNnPz7VF8ChEKvCBq3kLk0JgMX3f2376AkkGLJacrwQGIymUMRTL4ey6ZtKl/BPcj2bsisJfKfwiy8vPc941Y0nO0QT5wNqFzLDoh0s+1Dy6dMar9MzqrbtRKtoT9fzDs0jDDAX6ABPFGMbKInq1HXUYIgZx72cQSaE2AGwdyzzwUJicvjo7tcc69aviqQRnNTdkGQgPnPKWQBN8w6LTDJpv+ZsK6pp7Bm23uPh2Lhmq6ORKzKfFXBVjYUIqHHTZe5OQLuUVQLAr1nzdf4l87V2X5UWgusua2SqfmGpVpWyYDiq7NbieaGNMagnmKqJlhqf0lbERqtrragV5CIiLe6C5v0pypgKIe6L9F6pIiA0RqHlqonyJkQ/Qzlmhkfi5wJosZUoRsLIex+07bZXbyAaCbA9yIltpLKUHHmuI53KwmbPk1GOF3wmWMsxEgnWExARVYXL/weJAdvkIYq03GsXOA9eTTWrPF5BqYQsozjVqvjj6hdFvOtWVEkP1IuRctlxb79OnhnQfuCqciIlBTnhefbQx5qEFWls6xva2cJCqlvsxepb3fCvvAn6jiTSgF6i0WYH2ISY9PzAlXKs81Mj5Qtm2U96W0xjlGg0zgbAqdt44yqEXaTXknR5tcmztzPevaHdmM/MPPfHEb5fn1GkXy+s6st5Prk+at7Q5jPh2cswato1tLbdJ5HfSTFSpGJWjt3D3b840qTq+q0u8ZlX5XHHiFJ+fyLKx5aJ3meBUyC2CEfU+iAGYX85oZRjZSw6EqbJ+OAmR9MWalBZSy+hctp2uDdh3TAPvbaMuIdYnkNRWccHx9DHma9z2OQGLp1FkCkwPYVpC8CA8tp5Q+MmYzOfhopkLsCFrCUjBmz4oZJTFAbDiHgKyyqSBGXyMGjTElFLN8e1yCPjLPs9dBX72QZu0pa+RV/z+oXcqJQwlpWhbiqftGHu0eNvIqNsVbT3ok1dfZQ1Qiyc3gghZ6G2WDe3BFa1Z2NxvowZgyPOp0Imh75aKi46SJPXqjJR6UlB3WsOYwhv8pS7x5fzhDGVeaBFjs1ZmRGMwOatVCEAGkYk2NSoxZX8iqb4xQND7NXFlAkPsV6Ooh+yHWsh4ZvlkJKgWtHI/tTl1lXcD8AKApBuuWTz2hHtHACYaQJdTmw+RroS7J82Ub8XCskn1XWMU8QheVmAea9i9knRlbCPaEZcggPhIaMqjlQzKsvQRWXkVSfIh0QaM9vXDI0WPFcPhEnBITPlrragWAlDKrNFGhhGwYwFCkga8ljkhoV2aIMVNatt9+9lTwuWpQWA7IDpMUJKIkC5E35dRZUNU5cppWpGS+pmJLy0vuJ+nusuTRWuX9MPgoYDeLJWXL3x+hRTh3ZuRAyg9zWXk2oS7yvTkUewzeJMIgB+ax4rPa7c5YAP87Fue9y/EwrCptMp1YGFNW2kIPzZhL3nm5iD5B6LipZdPI9FqfXwhlPgAJm9aeljD+4GOREILIW7jidtZkdNvn/7AYd21oNc042kLJO4kGcaY5BTrz9sr6hY8Y4x1UrWXZdvlDW4onb0lMKB34LFNL6VYVT//bV+erIyM7S7YebUTu0SFWKBLg32Ul76cQsNB1s+v5UP3mKXF7Xd28znBFK8X8QZqS+vgM5PXS0VlbyTz+FKSJ5gVls9U1SYdu1kcpIbtSIMbehtfsDzAfV/KlEqHUb0BZU7wCMAXk3W3VJlm8t43jv4cpoYL6+AqqHYcQI78g8HMX8MMfqLznHjGMn+dsjzKJDI6PMV+sSOWgNnwe04Rs+ir84P9zlIhaCmGN7KCXWssnLkbmF5h/I0fi2/UpCqPJ9ywG0dpJw4cpX9VY7M49Sh83UatXml/HpdBNf7HV9+B+SpW0IqlyuXKtPhl6Fsb/MUBdcyDUdcsN1iiCJC+Q5rqg1unTZmrYHAk3h6K0yC/YkemPCYtFWyktuSq2vlCCEUmRHP5Hr5OmURM9a/EDuEgJi+m5rcJOnI/d71zKGZiI9t9mbAhGjzzljnHmaDeJr97SgQSoB6ikLDnqH2cnN0/g6+LWk5YigiONFxSrkWaREHvWGPO6KSjxmfXcZ+0Wdt4b56gs2T4KtOSQjtcPNWXnWtwEVACVQH12ZKjMgM6UlNh4MQiRzPssDpXhSLv95/t1NmFwurdi3+0528foQvVgU/RHYH0HadzO7SncJIQdsSnkJJ/3k45ryTQRKmEPyHyg+nLOU5lHrTlkpdX7iFDXdqvdy9fSeOB4kI0Lo/yLrhIXAHBFA+N2aaoeODhi6TXIJ2OcU7UWbgyjypCPmFMuz4piZxknooR6ov5MO8NQTaCJjpK8nd+SiwcxMhl4CUsX1l47VUuvLb09y2f/PVuk0+2Zo6pcmJC8WY6aM5yxgxHgbJKKKVi1AFJRyOlRWoHLzpWEpSxeUFWNNIWbFeMmWrChKXi4bABdVC/LBgt9h2UOc+lNtKpETSoplWopad20Zavhhhi+WLb6+zVx8d4/M7q5CeNW6rdX+8DNIQl//AF0docbNGLmzgM/nnStEVehHr9arb0WoN94JfFYfsDGsIL/nikm0z6iKeYySeKlVFMc3luQM7QeOzpvV0TMWfhDDVKTkZfdHXVIx31jbZLcip/aFes+YYje6qFA9LsNqwgwells+I++bxwOcmTPqLWCj79EDf76e3NMvlBwyqZ9mkSA6Qy/6BgS7lj9u+j0KWt5l/GV8pP9KhE3+RUtNt14N2OuaX6GgFqmfyqUdyb6Gdilf+MkE0NqwcqFRqz+0zHSusXAx1OIUDN14vgn/1xh8XJCrHijysEjOuA6vkG9H7AcbJHMw/1kyG/a/wS2RaIcZsz0mq3KHkopxsZGGcA5yWDwJu7DyOXmpU0vxrQcY0Y/1aSNNE0kV8n5orW44YKGN2ou6E42GDYCTDj5rmyDcBGaZJvi6QVRf76Il1Udv/mtIpqSZoOQNPvj9ToPviyHxHDYSHuPWEWcWU4clJiwMKUBmMZUjZVRebemUhK+B0jyJD6T1Fnmrf4S3JH5TplhKpmGG1+ioIuTrXcXeQwLtkiyHp5gcpXeKAig35K9Fi3XChYkyHqrcG3gmNTtb3bkVwnv/O55I6p47SXpzP1Gsu5YhsUnRDnyETtBV+gCsEUOmbjPrJXt27E3vDUYw5lcYlWi/+20XJeIDXxOlmbKQDorVtjQf7Zb0f7/OBXk7VwOsytCc/fZKI/AEw4h+EppUDDSSw7LMdSJPQKQQwPKriJliD5zMDZeZ1Giijy3KTRzqockDJNDUM5coEA936HpfSVbsE4XohikYe8jTvoND4H3Q7BDfecALWbNqvhSwcJu4UHYChyyZjMdizkNOP1LRbeI7otiM8ooz8pckIhjmgOP+3aEXqBLMwqd/y4LWdSqtyoeUC9ixlKF4aDN2KEDR3QBaEJWjXgpI6pFYyFR38jpK8ZsHVbqfPxm2dFYHrtAuI60LdbGKUV1tdkPZ7eRSexE0XLdYjP5rToXniG3tYFJlaz6d66A7v+wSuIPInw5VgvVo8S1sMfJKdQOYFXMEburFcyuZw5DXWUW/f1D1oHxIkK+KVjT/us1+msRDxgu8yWzi55Dl1CIBH29iUc5+hKOTIdc9oQtIffmh1T44w9Dl5JT1fL/KHlnZHotAzvk/VQl2m0RiYSIlrt0hBRwgY6bHRioD3mOL33hkONXugXlndBEA3nUNIMtgv31SF7F2318Gwe8cDfJ374tcCfrg+J/fVxrAdLYvRK95ameXjqM/PlYmDtHQAAEu8V6mgrU7k8Fp/soK9Q8hBa3e/6Yn855JqjXmx5tSMESN92W/4qiNrxE21w7RvlmiekI2UxtJ5AUhgNPN0j1Ykks6EItjBRCQzXHyIwWLiU9Faw5WDONnBRNZQPZQMKnnuoufvTgIoZ4ChhUGgpuw8EwmiGDOj+dMnLlli8gJ9zRN37A2P0h6zx0imPBYOFnu6eFwd+QM+cvQI+lapN98ruVuiJ43NbAjzHBqHKkOSOSYLVKFjP1ZgTnajc+fcNEhwLvppA7y3b5eu8Bpn4dRzWWPX5k5uLiCjap6YvlLpQe/6mTiC/IuMAz9DdHXc0gn07c0pMQadw6dg1mVt2m5+rP2LGNN+d0cLJTLlaFCSlNrcbq8zuAoK/vzc6/ehlTyu0WyJT9oH2pPoP+uhq7PgfkK19K+L1himwPp+DFKKND6iaS/Rg3iKTxK8YrDLX97mUPoAeQOjoU62UttYrB0K+/ljiMLkoSoff3ljJ4sk7Fzjj7dubNDkDx+erAk6Hcl+9+bg3/ZjTYI6CIaXrXCCzJaje6+aa7iozo85lGN212PpLWnVNv76zdtRhphP5R/VIewIo966WQRyQr3EpQEBv7gKZvhAv/et07p8Rd/aCAl5rteEHVwi6LPRuMrX5q0Ba3pfaJrohE37rMvFA3FudI/9RMXh9dWiSMorugcX1khU8h+uWiRJqoV8+cAuddMtVI8Mp8tgEkN2U9ajDk2oIFO7uqiuJPRui1/JlXDGIPPrv1Vavpwc69ZsoRLmkeR0NyVffKJv6CiEdU+GxeA5U9DmkTuO1gwiqGSnKX595GGsib13qWweLqR3YrTYuUH+egeyJDNww/4Lpx0WoqRSGYYszYMLgT8MDO/BqwU3tzfs7VgH0rWFAV0DM9VmFnjcOqLkqKGxBo1ZTtW7TQErlm7QNN+4h3OWpfy4h//MYOBvf5m8MWo6/JZ0xj9fY2JM8aepa7He0yzNQ10luVoSdlk1uiyiF+o8MP1SVD3pQF8oPqbKErFd0kRKsih39Aoj6c7JXTMcaArzI45jRrPc6+dn2tI5MYRunus/5O/sKGp1TWdlmHtwbmLqKJ9p9icb8HebKXVXgtbCuxaF89OA1IVrluamAGz9wkrvb0shnUxI61C5QNFYtmDkQIa9Y7+kFAjTkvaINqmBvZpGHhrytWg/fjysilEBf6OvfdzTx6VpXGb1gXJiqLLk3yZVf3JjUmWgO2nNKJSWuWlqMFjR0UElFGU9FJCcV3Bher7OyVyaTBvDquVkgcFQky817qNetWKCAn3fbrYrdg3fTMi0lX6/3X5RL6uBTaR1CQckU28IxCwBPHdZghPWC4oNlrm3qcI93cNI9PEBlk98TYsIYEH5BdyKBr/L7iqmFoSDytcRqkvkMkjLckLEj2/Kp2HwDIHqXpMlfSsxzwV5USIGKkb8cZZvCdL2ic/mVDSiGq9OVzr3t8UeDafMXCEdKNOjPxtDv8reIly7oVV/Vd9k8d4sQWNgVM2lS5QOObo0ojmUASUGGqg0XMD0V4p1h0YB9sZVmzjzEXimafI9W9XGqT9EQzQiBJ0pbASWsMLqlDq/cc0wLyCBtid20l3L6hlX2ERgdPVQArhd4JQKfApZnsOQSDx9A2KSl0ZudCI70Z6lFitEL+Kusi3sl7u5fkpYS7n31EauJUVDkCb4rUk4+qMt/KIVdkG03nrve8YAwL+dZv5sEMK+QZcJkKAPrGJzBjkgqUjdkCKbI34vsBTXdF8cplMpnDjOaxWrEWzes2ZrPgY/uOpOB/AW0ATKIQd6V302uW7yLA3nhJC6zJHBZpeO4h/Ctjh/8OMeCYkChgvHisD4moA/7m120tQw9zrNrHX7o6y+0wAg3ACbh0/c8wrgmCPody0tjSX3gNf/bzX3ALWW51E5c4UK+p5DWf+ry/YyIYyvY7udesC/EcXZPJhqykkGFsMqnUUpFCmoZ5GNK/amRwgnKJZws8VnKHHBZyieeqvmc35uDLdKS8/TbRU0Kqwa3o8+3fpmeysiTXDmnHBkER7tjJk/Bobd84LlmCTJKOHJX4fMWFQ1Ln3plIxE5Kb4aRPV4PwTpRyM9BInB7WsqrwLo4u2VREBJKq11tWUxI+6S+wDXlMvvAU0cP8EhqYK41Lob7mKhCcfYBJAs3/Sd3hE6WQqd7dpXKvK1EXYJ9VqX5eMpiZN8P91zZJ36/PxTHQwH80lybI/ueYVyW5aicBx5gGx65yBAZZxgbs36dvZ3QU1w0xJHoyMYr9gceMgHOR9AqetQJ09uHc2NIZfig3ojUWnXIu7pI3tnMSdTNofTABAngCpBMRZGc9+scDzgJ4T2uLGw6Qc96XAPgfQKkrqgKZysQwsZQn/7FXY+D9USJbC3p83ftryK6O7PkXw5OUgKwtfCFiDcDounRDGPO/le+uFbrkqXM6HETYbf1XFNJVvSJy4olvEtSO/xHaGT93IkYjc2P2vjieGuuPa+RsZYmRNLxaMllkNbZZAz+Ugffy8NKh65cEFkMkCLosM9P8fjh29Ij8MQWwC2pYDgt/7uYgYbQrNY7NU/WfRqAmnBKQAumoAKihjcP4eLeaTF7LVlNa8qT5U8ZHDg2/evH0+HZTxWmWMnkx+KtIT3wILvZ4FaqhGCqOAvSbxaWgXIK10JHx9Hbtd5166gKUuPLZDCHK1r37sxXD28p0i4rAV3CgAQe6LyqRFpaxPOKU92avkkRoaSN37xEx3gK70OaaTmZPoEWgNAxEdX4vTVJq2f4nGxRlv/vJp3u52ahJd9ajzrJe5d0TAHRuOuoOV6RVJUpATB3pWpbDuRmtx0jNFNP3XtpjWcq5e7QTMWEfteJvo8F8DIDV9vgV1DbiWd/nbTImVuYc+BkunCtHsFm4/xz09NQNJ81SbQDd9fP1eKhn/1S8nSssDmDdSoXfLPS1MTXFCRCG4Bfis+hyCC1SIg+pLnDUDGSCRxrw3OVqqx2mVpt3VOPbz/hU9DQJx5v103mwnuBtikYOs+QYCfpFF+cekCAGS3Nt65KkbUs9c5rTvhWWXFdmxZ80N/LD5VERniZYz9xJZKRJ3v8g0YZ5fbkLm1b5OYDzvear7MxINkGIC6TuYQOU+9bUhQtLkcH9YZ9lZ39T3GDaD8QXnH86Xgn1Pn3vgKgUEjKG9zrcoGGangiZLQAi+HLaljyvIvB0iAIqMQW0GKr902XtkO/zEPlOIY16LtAycmSf8k/9LLSk3l3nzEznlphch32tlLO1/GqFM/Gqh/i/z4REOWYxYTU3wVioiYgUNcnfoO5sLQMs0NPKEgMVd9oivcSUbgdGdwHt/B3ORKPXyBppT0XMrdu5WRVJtSJwuDS7HRjfOjP6tv8yS9lXBC/ADbhO4v4jA4fX4UEKotkqiVkvGj9bYepKTVuaWq3/FkpC2wzyqDkr//pu8DODhPUD+U21B9Mya3ZBw08w1/RijMN3432j3ocXJWr4dCcm/Ra7LpMufRdRf8goH4JZJMlP9by4jFOJwtOcMVVFtLBNu+xEKVEG82xTO9FTZnloKxDVbM1e/WDlxbUSwNBp4tGFEIlw5c5Pb/xd55LEkILen5XbRFEXi3rMJ7Cg87vPeepxetK8VIipBm7oQiZjPLauBwziEz/++v7k4ouPy5TZaWP+F8EXRL1LTcMEr/nC6DAoX7slb4C2yC67dc43JlR47OGYE+lcO+t5QByfArmxG5jI10ZL61yAATDnzJF/n973i5wml3J0PdjAN8XgSi8gtWsY+BeVsRp3Pbkpp5XCwaRFuOWywE/+LLSldMGcLlZKQ0/WGinldZtv/9k4VIiXy7/ViWItmzJSkkup/fs7VfEWTXrw4KcdZBJ47LKESRmlWwwONOKZjlFv7G0hH2vFEiLSSZoGB+vCKG2qJnSwykbOr2cisHRodvCrs6k53C6laUuwF4uWLzm6BfK9gcZgdXv79PsYtKPqgeucmMJBK8aoDNz1F/YAKDgNAfobJIMLoycAmBVOC+uuWmu1gYKmbrR412Zu59Q0oDvbLhFhyyvZ2tcp/hSbXnf+ZDHHrgsFlrZ92n4nRQXVkYh/TmnJGehIiNCYhYTVdveTHqU64sgrIAm/RfDMDIv/mU9LkjOfMT9wUX+TK5SrDzmU3W9tOBlN9T089vNtDuF+ma6DONfH3yCVkg5hsqdC9WtgmiXuWqFLrfwGjNo3LBoaL9zCiXZA2h7PWDOSLJW+7zvQwLfZ+hwF3b3VSuSR3tSY3v82K/WvEkTaq2F3V9Yt+JoblRyxQBRfcSKe4bOtluQ8yVfnPM095cq76ijDSCXhL0YjHSgoE4Tf8S07mjdWTOJU5rg6c7o5080Oct8/ad727FR3rxX4sQTp4XK94mfy/L1E+iKBOCzTHxZbKijSvEuEKfyhBN5rg8WNTJg/gstMQCScsMy3l+K9YfU97woXuim7iswoq5b2G7hZlYXo+uKIcMCruekXkGJhR76Wq/VoEW01BAcinxPiwe10aAZ3SZi8vTehejXtxnTuqLJ50z/FGUOnw9u7ZpQ5815FEx8gsR7CZj3o4jauvU5Fs/FTBj5/fZ8rZ6tXQVkGjn8rV6cWBlCCMwo7402vJj/qzZbIvyYHATa8HOEI6UNW2m4JnkssBPRKJ4mRaOTekUFoVxFXBH48dbMV2MjGItneF4tpWa0haNbtjqgQQ6mjCcfVz4gAYtQijYahnqwuaIW5EdCw9yiWwTW7kVxcqJzIabCO91Sj/r+TTCoH0QggQgSvqAT5l1qnmlPVWAjdsPqqUtlODUC7MZdoFx8rY9EoUcMOOXs2VIRSf5gMkqwhB8YRlETXL82yeYEiMRn1URPLzVkw6xMRxyoMcf+vcyZwYXMQi7jIV9tG3gXhVRz9/rt1MVz+BVMpOb6gv4rLiFWnrUyNuHU6BuNzOKuuiMa453SCX/WEouNwHLJU4uffFBCOVp4Q4qgfLEQZob17CK7icCJUurV3/n7gDG+la8qVnXCKncgcrzG6LfqzmaeTSpBfvJJTdCl1/lx9/PxSNk1DE6ijtvXPP1+T5svkoW4Wl/cUYbRc380x4OBL7l6KI6deM4i1/QroHs/Pw00qnciaqTKErD3y4B3Cw7Eap21oLL496kCmE3ZYJe08yUIFtkSHucCop9ni3BCaXKRGw85wBQc4yDCKQIsUerTCWVImKqqhcwPzOKx7wNvrjOw9+uh/ZrPATH0Zcpd1xh1j0YaMk3qy79nZy6mym/a9+Zlfv4sz73mQb3vf1Otf5txaxpKG5ZO9sZqrH6qAUFcCNdX1BVsjDKE5OMqOf3ozsynPz961/JrTlgFxmH1pKYk6n9BCFuNyQywGFQKQIs1L7J077CmtrWashBjEevKGMIPOS92ny8l8w8ZNZu4te91plGzyZaiGdZAHiBeYQrebbpV3QOtA6XenyTx5Jn5mwwKM6vqj4lqE/iDJGsZN6hPMLJzqR0JNLyMunwjMb3MsmUtlFRGQRTs++eeu9PiVvG6jCkDGApH7o/XIZm6EbUbQyDy9KGgAohu59feCUE2clNyg+yr1cu/H1aDXX9uPVSTngZ1WA6wy9gfw6U63HysBdFTBlvcWw/x4kUfHGMBR7dmk7R6tkkx2tK9dT6FhfQBddRmw5XJe3LJ14V1Hxo4BSzFaZdslqkWz1KqzGLRAh6BUXAayWjMglHCi1/0F+328zjADtgsoBxep0vWWnyc/0KShAUCuP1WDBJ3XGpCdIpQqyyIVXZtP8OGPnYkzjEiTt527b4KIL0lP3QTWujv6No0lE7Tpr6zATgikXkAc6j8Ekf4T2f6dIFF3XhQ4fCLisHMtByff2U/MbfekYZgJ1pLtnltNXwb64mkSbGCdaW7YxbcjDJaAnwL8z44LcjlnYXs0HFkodxlkFq7FffNGHNf6dZvLTyndClvkhsAwPnGHcEuJqlqBKotOU3uSMq4Okpo9b6Ehh9z9IHPELvJUK+6b8NtVI8Sny+TdLJ1AL48WSb5QmVf2/X8XQsSw7GPIXgW41xh2+YuY3sNjK5+0Os0/U+TnMdVOB8et4sUrgV25SvfsqFoYCxcU7L/HwU3rJp6iyV0VfFbH5252GQS+L25/it2lA8sXKpaSiPqPl5CgzKFQK632P94dE4LEk1w7LNm1QI/1nFkMK3PBc4tEbP58y+kFGEMEXn37XGREt+S6dmjFm+kwjcP70lMsnh3lXQGPElUeo1M072yChXgDnX2x98yCUrMrHz1NYhu5S/DoGQ1FDE9bW+gvrr7J/aQiur4gihEQu3nfGFzz+qfTkF+wTikkyy4LVcqH/lJZayz4pCl3+DY8Z1ZsmwTpec9UfhF0y3yf0HQK+5eEXtMe/YuBRQsA/DLBt16N+d6El15CrgzaJ8IHBqBGOknIfudxbnRxqfCpxBbBkWYUi/6i8fIIKTCUVbOBp0QdyS9NmmLWDSv7v/JDXRALAFz6APsJ6CD8tn5bIppeMqFn+KczUZtT2ioB+YcJPnIqR36d0t0jjFo/2+9orDIsKmIoTHTcA84zy2KJUFZKFL+4Hk2phD0ukHxXUbB/SZTYrsd9WyHnTM7w/UoFaztCCx/kxq2BcLBmnSbshF+PoFv99KQ9qEvNQmmD4XnJRvTO62xtERCYzcBbAoCOld/lWzMnijRZFMfRdu85hatGw+RiH7skX9vqyX0rVRfHr35TAH9GA05oy0mSTxS4da5CQOOzD7cYaZv5PiCDjAryh/FOMXj2qz055gfp2bxaqyRi3xxXAsL+qViRJmIaODHMn+wmQ87A07ZUdkUfT+mFGFQKkOVxEwmBxJJXWFk5G1CiLlHPR7sHQB+tBvqXm8Dcrxx+47NsD7z31rcYPTckVeb9AHMrnkinreI2drHt7dYlQQOLk7NCK1PkastL7bCZ281fjzM+uovJ3v6t0DTgMPiQb3rzgnZ+n153xT0UHx5VPNHW5QFZQNgfxlXe1FsLsV8s3e6GM6R8RfRg2lljx2JkSbXRkUpgCMoCV6Leb6S4ubIq18KLQMynLdPhaL1OeM0vaCkl+PByhxSH5UKJ+Ca7lFCCm1pvwqMfnBCmLK8qbjaMf8VUB0eI2zU5Yjpp+8gecXKGBcJ5cI+0rV+EEjcmQhY3PWfeTJw3FKzxgUPPbe88t8gZCgUVp0v4aWSXI3NVlGkwuWokJ3BuGVgKbhYF/v6H8J892lCnsmnqwiLDyuUjSj+B07P1RoXKOCQaaf3pHaFkyEjNQ0sRgHOSStOBsF5bznwLsjuuXfHOElDd0WfNRLYN3nw8D5ZnWv0ZEy8/CnKeiNaDWNWww2wCebX4Z5oCzv2Ko/oo5YzXGhvcqtcTe/srL53ueVkzdcNIQ9hAbwKnJve3iAgdzAe+ZNB2eQUN0d1Bpk6pKrmpoifNFxr4ddEAB5DcvSmy+BV4FUhgD8ZNradNStgGKkZQ0btiTQuXRFgfCX19KeJ0xli6xqtbbP3CgR4lTc4RGFB4t37Hy6BffJDzzUK3Q5Kpw3Tw9/iZSsN++gO7lDo9+kr3lPvNd4qorot7UnivUORZfSBkZqk86WDq9bMW4ZQrNh+VaaBT8dsC04/ExEYvCJ+7Bn2gwoIkXE29NCdHpCcpnfGGJ/6hpTW3JPkJSjbtT0OpnufA0HNXgM3FazATXjbMtLF2V4Mxpgr88bb+GQY0+tsgV+6jbs9qpThM98PbFwiCO4DZN2FiWbUHyFv9ANBiwhFBIBZAlACFAPX2MB9N8gQWBpBkV20AwJfGBtcdycFv1lAc0mNgQobrbfYL4R5jmJkEkxyDZN6hZRRbxDtPysFr1mymVP53GafUA4EuZtDTsrURyj2cFjenpR+DHW0QW2uM6vmVUwIIpb/aJnF6IpJsoUZHVIpTQ64dOGsVbNHkRRYnea2owgoOl68YQMO9hM6xoERK/0ukPtHtkKMy3BpIAL3kjGrPRlez2hDH7s+KKRq2u/9c7IaoYD83P/u+ak4MCjf0IYDHC8109XW1Q2OL+I774E+Xoo8LFa1suzahItD6Or0ipXd0grIRglsvlq15O5BGhjA3VV7g5X2zIn4fJB6Dac8IuFhSQazYZUOn1hi3x8jVTNObJ1R3MNOtbSBenuIqPJnOVCvQn6s6vTn0mw4QZfcfHOzp9KGVxBbCzR+NmvgOE4BAcY2axPdAnkvPayvVRHGgToznrH9WzfZPD2bp8Njqje+xcuHHyD473x68//+p5Hx2Dt03Hw1uZhxBUhb9zK3MaVo4d4nkx8Drvp5MLZHO8Lg2GrvlU8hbvTeWH6p95V3Q1DlVIRdQ5FeFkUFL3GVFKmVk/JixgsosAspNdQthBz7C9HtTCfvR27Fs6qcPczqbDwwLkWv9gbrMuCv95kucSHecNWuOZd7mQTlxXfUyUajpGUCbKTX+ggevFjenk1utA6foF0d7PVD6rtELp4XnPztdLnidd0UKj87qOjwIZhG83HVI/fCGxrcSgKj6aDryj87flqivPfy6KFZ+vAmZlt8ncx+mJ0+vxF+XDek7XJ+zngChk3/V9scg2X6468uQbcJMyEjISL/hBZRnb09YhyJi17JkRifq9KzSvZnIyagglz+gxOeJhJWkP4mkpelIrYq/vBOLdRA8R9FD1/HYUChVV6zuCphIP84qXo6QP2/aA31+ZZKfxLwBrU+d6cmRyQHL/qEeFbwb8oRRp+wG98B6sbzErVETYA5PKJf3O4n0+6SoXOW1C2N6/h79jDu84oizmIoXbE+uNxYjwd+Z2oNHLzUG7VW8EP9oVNzWjCN5KSDXv4TT97RWaVVFunYLp8xJ3F1BnfS2NYx4pnklDfbBbYS35ewHBPGRMztDA/wdzH+sK3WI3akqYXsDZu5xnHezy+W5EddWgHsJMhl1zM1B4hy53nlV+9k+B9iuawtp/rHOQO/9pCgYKPxsJzcosI8AOHsmt2WA/euhVjCMPH7z6mVEUFvXs4eTsA8j1taWjF7dzifgxM8aBx2E8YOeJJaDkzPpcqKvt8lJ4J5JseObGycRuMBOlNdSyL89PXt9tm2d/kIisDfAEv4gM8A2V8bxTcayrWSy5NHkxYn4JYiOJpBZKOoX31TgJmz0dp1oCM24R9W/Xu2uCA/erpWzWwevsx8+Cso5pcvu2SSaHXC7vUbnIAV2G7JmxtuP2CvZue+4+zVAjEaRdplZ6wy2/Co3iXKvh9HMKAj3ZkW8Qh4y8Xwx3I4Z9IMEXyzr/GhNGeQIgsD2KmzIYX9mZUrk08sWTzJk4I0v6Ng12W7Zxx8gViW4X1JVBEfjXAnj+XQQlvzHoVeHd7LZnJQm2KtIqdGHMdz4zrdqbdnQY57CXr92fvdjuKgAz1nt1IPQ6ixQFATmH2l1j0lMokxP88WOcpSy7U9XKG4xHFCX3pzUrY+ZzF2CFIQLTIWyp/thyWIUHCUASs9zjbiv5uvCUTYhARVKVDZw4BiPkaQJZbIXbjGU+Hrwaw5cLr39DS4b3rZU1jBMJqb6WNF3DY9kg70ul5RRaBGyFkiF69kQzulje9JlnkvEeg3xyut40bjTEH7kkinB75WX2y6Q9D756w0eNzzHXWRIacbqmNRk4Uh8ivkvcphk2/O5ObjApcYD4Pn3pID58zOC+U4Oq4Bf1Enr90D19JOrQazFPcZ/JIUAP1mLy4mXcX1u7FWi2EOC0zIxtE9uePmSGrGNneO+/Ho2fgrah8xap9+A3CbioITz8P5hrv0EnvfNJ2u/aoQU3t/J2Lt2pCrb17xKse+Ma9qB//Xd3bvBAkkUhhxDLagS+WPS6KO0ezrF9ZBvbzjjJ/bF6boB0fKB3ZEGnGpWEPgmhs50KjKlXO69djszWib9Dg3i7dSc42kUMQqNgRE9htFq50EKbn9/0m766E2FsunGNgAvi43+KYMAdaEjNsLlNblF/fe59c3Tt1kouVvZg+/AQlKbfm/MayLIg3P/1xCOCJg5meZD0RI4QTVjFO/pvnkdb9cPf1r2W3noknjuYkysFDv7XhJrwt3vuseT54PJG+sDft/HLK8IqccGdyYGj34LwcSrzz9C1iibI8dKA7kvFxHdOBX4yZzPkjC7wH8Fa9qVK8EBiATmu5CQvgFRHU7ZbRz/2HhT2+3+u0GB8OX82YsMO34jCT3luUBXvIwYcGmGZ/x9KANx0ZAZeXtt1LeWDFwp7eqynEyNsfsFyTb6O/u5PjoLZcNJgxIISP65etyOgY06xtXefNjfqBmAGy7j+WyV012O4WeIvZuxH4mKgl1FAt8nesn9sZ68SIqsNBo+GfEI380akx775TxnXu2jTLxd+txVRGCpwSn3uXJzs/yMLC1Eb4zRk6V1LMB9oFXqCrC/ostYmy53LNnxoXjCfb16cy8cqRxGMDeOvMtIUmHm8/sgbi+iI2daN+QVzdTlzmh7LZR/Ao3i4DhPg9NUAm9Ulfvjzrd6+VNkzfndNfBucOMPrFl8eW6Kyj0eHPtZnwTSGVfm+k8ZBIxRyv4J3FBniQ5dhrqvGeikaeuoVMCoee7KIIdndW6aDDCGuumEZo1LysVopOQJMHi+2sIj7GWywDu5+yVnNxW0JgIoG/X7AoiSilbTfGk94+sro3ZIdPMJLWkKxtzdphXeIofuKy9i9T6I6yhYXSU03aVq7HQc2AqUdD5nIM++nONSu4tN18fN69mlAIcdqTKz21+1EJWuhSwVGvQmTTaycj6J3/+PdnzPmWQiVljQgqDnnU4N1vB14mRH6bgE9bx5m1WE7JsKBKpU98o+KG2WYsdP8Q+xGAmTEY52Ur+hD8sY3ZPZ09n/5hb5LMnpI45hz9YNKoAuQLP/PiCcxljRlRCcAoTJsGXJ0SqLv5XdMvg/XpnO7H5f39wVNimyXROCJw3J2j0DPzXER599CDvWSED78LjHc6Fm3cjRNAtBwloz2pE0bgJ8CD5nMz/UvTpJnJNYCAlgtoJd+L0n5RqyKRn1e9Md1kUtTVHwNWGD2Vct78uHJHSztWbKNocDEyQ0ES2ouaW5ucRcPDgcUn1VyL1mNqiiZBipOejRgZ0R/NThwmiessVmsgQOwqOW2f67bb1+JrybTJMd1TWBThi+7imEX2cQvGzi3DCnCRXNXq7HYNTkEXr+avnYaAPo9spcB4JOjFSDmP2KeIzI6K6q7TsFAJ0yKI3xIj7/kmUXsvQEAx3knTVRkTcsM+VzRZdPFOcOU29t5gwyFwmBIkJkR3zBktGhafSWzFXiaWud6fk/TsmDTCmwdf0c7uIySidQgZkXU0B8u6+WYc2AbhOUBKn6i5vuziThg7NnRWdmGPdFBT7hM1fE86QSyPJlGceze61XgIKFMA/kZwlWQaL3+R0eYF/JUkdBICCWaeZDwW8pw6HSfoL0I9t038wmdGt0JAOchyWx6UKFyTNy4LZnmyMQsKJj5AGsEt3owlyVpUXqtHII0vfbEgBGVFgOyIfqshDXva6BxvwsT3NbDLrD422MqRg5k7+hjRbyjG/pJrypp1EccDv+o6rUwQotk5JXCWrYPeeCGfZQuO2DVz8zNNit+Gxt8XyQcHVL80MwkBZP32eIe1ex3Gr4SR54wMRt4J9cWtSC+e+5ts9g0wSNx68d6g+GeR4KzQh+Xn7wv7a6C7yIFz9vpbK49KEGhFcJteTlMfPEEbtx7DolAbJhyP67M6nCfokscQvA8LP19J8W5+389tu+Px961Qvl+LhgjG/jnXnBamxKcvocUQXJdjyvGo6jzVIeeDI1U28CFiaEJae9U/thE9MgPXNESFa0+rgB3pS30n7YcJD9cMDDczrvZu1zxuc7pn70MQdh0F6BE6wKw2NEj0aqK5lwwmdpmSvELRdd923l2MUb9RKRegTm0g8MTvwVylE+FItaM5qdh0jdoBg22xgz3yJl9nWzXXMh3AncTdybvY/IbyHP3Rr0+8obkWFhF8+Hb2Fk5DyzU8migMEw+lQrOUSJWgoQWXD+vvmnA9A/GgvyP7ZLf9DeUciP52b+d0sxeTDXNz8NdsIFsmznHEHnZPr9MRWtVXUZZO8ueD9GZOHCoOnIk9PNVaDJFX4m2Qf/WFStNhB0KtUeFlTWigPT7Re4y1Q4kBeV3nhCWj1ecYW9a3IU6KJrJ3pJtOiaz1vHkCNI9I+XqFFTP0XtWHDErXTiRjnM2saRnNy1N4a7+b805Gthfu4zVGZCSVEZ7huMXrC0JiJDS7yTKMzKQ9PowmKz5EJjKrxkzkWAeIw2Zi2itncJvwLXpaz7sIR6RU7O11kBEO9XO3x4VRcxeEza/TJbHYZ8sxrkbRZnN/Ov1SR3MtZRoQJWZEgWt5rS37SHBLdqxyk5nunnzhPxxRDUjPKM9FVSMW1z+DvjTP9ay+Po5UOrs7Y+QJnraWT6Oon1h80whrYgmADsO0SZXyuNpTwYg9iaNJStiqc5yrqHduh1dbjThWuEXJdiO2jm1NH/Bo1txrCQ59e3qqHRPksKI3Kaxo3dKzDG80s61wLj2i8fnpIAaZ3weoRHWYZ+spYtWw3RY5n8TXKSVv6mfpdWT3iO7sPMBcqCmVxzHWisZr7NVjkscd4zMI8gNSnh/ccYJWkMc1AYJSUHs1KWC6sW/ZT2C4Z6rZEZkG3YLlLWoyEkjTIqoBaxe7ruRB+DtY9GOZ2BGR/p1YRBsnmn7xI16O8WGd3a18o62dnM2TdJIkopoIPUnCVDFp3kSEyWYU0yaBPK75+0JRERczyw2wpmeskbrmAnhphzr8923EPXM1aR8gIL2ZrqeP5YsfWVScJ8lWfr89MQzGdAajmSFcDnZQosaLbm90/YzQZ9wB6P5WXdwF9IhQRiryk7AsJtroOh8aZVXMSPNE5oo1QoVfXIbKFFSBX1JfxXbBT4R2fT3Uj96eYpLh/QXYlX6DMluUaSdsoc/rmt4ASskjsSEXN1xC3TMRpN86vu6PHHViwyZBNpkKYGYMK/9oKtvYyQhJdVylRMqGLEDGn4LFnBF94BsFkbl71Vl6ZZesj3ie4Hd9wQ4AGEZX2k3tn4sGApUwoIRom1hGCJMPnKrQJsiNuRgcnCLUqwt6DKpKCZYBUlMeTyU/O3pPHZXe97XscRCyWP6x26PAoicJu/MoNvVydjx2llAypgeh4Zj7DBt+tW2ug03l/uRZ1Ebq56GcM0aoMSgdL5SXu6E2ng/kwDM6VuMtHn+8OtY/3Zp0/gAQWaev2q0b47BjkW/YTxlOTfN7Ff6z6wF4Y4H7pZGUahsKh86IdV9XkH4lBL2PjOHhUt4xU1x2sheVWGTajohZ3cVo2u1TyX2k75jJIsoPYvGy0Fb5gynuQqXKyvvImt73z60wFLSI6STpdPcdP504NDpJ/p58BET7cxbuDWdH/QMMnkltQBgqWntB/Xl5uBNGxBCh7HT50VNkWqGWvyXTv7iIHc/u85cRdLJNZFkP3KFlYe/e6Koze4cbN3sAp9lhbV0cIJrtuvHH7pZyGiZZwD6z2KQr/wx54tt0sgCkOvHch8T0x6MQgdbR3TekhewBPxmyu3VElqty7MGEBW5QmA7Jtkt12xatS3GEfoKr52tB32HIwMCtUpAaaFEbEm0OyENflb1HQn0GxlQ8mJet6JdjfYvszOWJqC+c3qlHWgFyF3iMT6eCojaU2jK5eaSnCjz0HsYeOF32lcvwK21MvQLYiVw6P0PRW7A67Nk3/sArKkuuLS+8HaC9wTOq/Hw9rgG8ySCqjHAfp7yttmb/XJpcvBoJNS1OTDNIoOxNBOwJEm4EEa60DJti5+tlhgsdcmeoG52Ciq3WIY8cTEJDfySTvrBBXqxY5eSjROOc6bWjUWhHZlpCNqA4o4rk8+QAj8IP+ZHfSCkA8UKbPgousDGnNIc0eiMewdHAjPEvZUHZENIjF6/tDvpCFHr4IWffRdIuVXTPCDSUYc6T9DkuLmkazk7XranDrpblQPdA5/cX6Sf/1kE2IWpD+Ptdi3AoGTcFnYI7PjFhzm/lkUqOvaKPUwcm9WwWHuWYGrY3PqgqoKGzaZm0dWjCoyf4UwPvhu9Pl7GSxS68oKZT17TKnJ+QhZbZLNrKZOiodb8M7ONoD9vZSH7r6oNEJlmTVxYxxMa/NtOkBKhE8ta0hAkOwtmXHi2Qai6f8IexnEOIunuKuHO5AYoM7EC83Ka7DPZZOJF/vQ4uWR9hzmDzvreHWT/iWKvAZw5swZmInWG5Z4lIXUG1YC2/ugUmpuLenUY7P8DonHx9jNveHkERBk3uJwO3p0wKCXtXLdU8+4W6rEzEyBFw/94ZWHOmt5NYIvfhfUkKqDFA8xZMJQQw11nlu/b003XdTT4PhdIOsDIzahjRazGqv680QKcP9Bv/7DbaxuhFOTCHky+DYamhOK/9UA4UPe/BCy0IASoMkyeerL1nJFAk4G+h86WpjcAyqX935QmQj1B8kczxq25UdZfWQT0oRDZsA9vMJFHNIJN98pKf5oAh1RmifNHYtTzz9x67IiJ8DTzFWZkcfTkK1tA32ACGFA8GjN3z/Pd6a48nCFn19770RroqG0RvMuNZRw9cpkxEDzjX+jNpt5Y9KDV3ZAi9jA/d12eK5FWJOs9NDsziDMm8c2ITe7VTF4bxQUpmchJ9t49UZKAO6dfOjiixIg21K2fna/JcMnlUnoRDbXkHSnwXJ4FP8JNi3D1HajO5J3fk3oP66I1qCrKqnEWPL6KbARHRFtrN04qRqeIg+aNI7g91pFzUazjbaJxQTPfXfBdxn0nPWnq05oOStOpiY75fUIIdfdMiKaA4jgy8SuGk9Bp7WFGS7KQm8Iritck/XwEtSlVKg/DzQLilZ6YT6fhyozGwX5fBC81LOBm9+7SVYoKffDpCvvXeXyt1OAcleoYPSwOsg2Y0enwQqo/hl5RFcI2Nb9bSIDyUh5knXf8x44+5Tf1RYdDv6hyO+QnnXys/gyuTLPMLwkO+7C+CsYDXv3v5qXxoGwn7Bto4DW/GOqGUFYuPToYIsAfnbsa3Jo2K6TPh1LngBwekbdWi8Ba1qjoqRmiq2J72TVhn3wLHBRniwv82F5wrfCkCIjQ2C9q5Zf8d//FWoo53Wnv/9QzzX/5rWi9pl/8/ujfbf92bOZz5x6vd5qiCs/+te7NgjH9vrpk/gmzgrPj3vh3oP7s3/2f35v/s3vxPdG/u3DfeCI0tCf2f696Me+znNBru/Ovm+k92b/6/Xfvv7958/1u6N4/3K0mV5ri3fsON7rSw6lh91Gib4XxQ7Ybr0ClPvZcuXQhPrZf+nd2bx1NvfnDkh1Bkw73ha5fqh8i7v5vBuqfGwN1fF2n94TDtPaYj3D/bvfl8x0RDJITfsd51cO86fnfoS1vovGPeEBI5VWM4vzPy3ffc8D+ge/MHD5+siRr3r6bB755vOitXYQ2/+18+qhN1hqDhOvvtojceon+te7P3e+viu252hP5DujcPepX1/9a1S8j7TC/dkdC/tRt/axei/n0uuMamj+rLlcF+kLDhoOhd47/aufofa7/+1q/Z///X/i9doPXxXc8Q+W9819Q/9uR/dEN2Ee/6Rwfl/xmn1ZT+xfvQ/ktn5P9DG/6Xjsu2xYX/6Lj8Dw3875r4d9xEq/ONsSUKfuWbW3/ae0sNBUDwsVF/6q/AssXxbq4vG/rbT5n36C/A5vr9uOVYUxIkf3K75D6YwHFfnfl08RR+ri8i2ypTE14slpwTyxXjTeHVs7V0uTojl8NlaxTf9Zs0CtLI8JbF8+mHXFdilNTy3Qwd3CQHwU1CgMlomPp92IwHvcF5BndUPIZnu8hnH0AzQIjpzhVLW9QKMRN3SHyZkWx/SeBU0npu4q0INr7h5MGtEDptMr8Gi+XnHvHwyrD2QdU5zZ97Mhv9ipteIzdLtWr3kuLRGRke01RY8vRbVcWALLcOLZ9TDrUvpckQAtJqv1xUpGLsGQwAIUrR3IgM+sEKyA+5cWRusgeCy6U3L79CYMM6W/fYan/u3CZRIteSwss61aCsNdu5qARlJ6gmbEDFlWLQxjnKDRhKo7pHa0ftFitVKHXhQChSgiYYsD4hnfCBoIy2vSQuKN6FV39i8oIQ4eo8osIp/WguI0BrRK9TRACjRnBSaqUQamxPGRgOECBPMGuRr9W2ORxTmLpw12sRVo9WUNYjp79/72ipRDpnv+OR816xSW8lV1Xa+osnVK4W0ccYnNGJWCVSTJ5sTHBAKf552GtNP2ivOx0rI1+4gNz4WvPPMxvTXrP8ftYzdpCC/3rlMknCxVZooyG7fBz4o9RSAl59sQryOQ48iMI1mu29JFYVL1mDjihlgL7HiGeT2+uLq8hWTGv4TFRhgo37YcXjgXzGdavnxPC6l5MIuSfJHPc7G5WyL0eSEt6guXXX+CgctlYCYHJpGTm4y/eseJ5x4kJTmHdtW63Tb3rh4PRtNIdg+gQcmpVdpTbO4erhf0zfCe3UBrlc7tSsjt/eRz7lGBDy7t2fSyPIelFadTvBPP4imkaTi+lhH/tZrI8Cr6uCGun6uST377M3ceuL9l/In2zp93MXb1SerGXB47y+FTUGYtCCDJc8GMNi6Z3hHxn6fUF0cLx2S0A3lEy70EwqLtgICpArRA8KFThByEqaFRALlFntQaB75djv3Bik/EEgKYhs3QziCcViN+OYr71LpB433A9aXZVh7pnLhIPfvpU7+grfFS7WCB1Txh8/givxE8eD6UBnnJ4py9QzXIOyQ8I8H7J10We/WiMOs9ycLceo0GY/tn9n9HZY6zrswTMlGg5qGv9phLMdisM5ZLX+hu0XEAu9KT+cvzBFj/x+guKVFd68lmsUPrAUpK7xlaRKALfJoIThLduvbnzC+w5pxRD4a+Sgb2U6onJ95qv7RgCdOePoC1FYSrLnDkQKasJADNZv5VQjiDvnNTC8ApTUNOuVyp/UG2jTb9/8UE68SgogZ+vHFhFWUWfbcPCkCpNgiYxCHFMib6wHJSv178dftDxz38meRowv/iLGh3t8kRWN+ajqqsgRd/C5AzqPRoF5IYTa/toDeUTOhJvPQVcXG94inl1DlChH1p49lFXnU2ynR5hSv0zDV4LVQ3R+Pp0Cncy9KL9jW3J6g8K+jCUvX8XETeNv+d4rSQfyuzujxiv3j6cdZ/cU8XR/pJzbDG3vBvMWsuZxNl4Km8yatO3r6caCVst7Tcwpl9Fxw8eF8OsnlGTo/Wra7YefBkVRAlsWxOLsu1+cDNv5XRGajw5nNl7MpV7n98sTCM0zd6n8vGUa3HWU2Gi8LxcALNeJICZTdQI2Nq+7/aKAo+HzcVM3yF8WhQcUtsSPDlEceCiKHj/JilLSCE4sw7rfohxGokeHJ38+o3T4+rpuH41frK07g3HfOuf7KRcCzhpqLxcfXDh4zfvpM/hMWQYQltkE0yUkkxFRClu/86cwQarfQmn+ekmFtZ+rxtzyzbuL/UDQ5DMrpPMMs9Get4nEuIaCEnW9dyh5dZWJonbN4CUCafAZ+7l9TPFTW9eLlXnjtTt8WqmKRke2dvw4aPQQ4Ig9kccmjs6+sbd63aPE+QavEmwwmtZnrwG59zIUbDLinRjD8mwLYZfSGD4CZ4qzoxr8xPzcMEvCe3cOg6SalqoLZmZd3NlhfegCh/vv4Nbr4zqSxnjBQGrqRhdXTRpkTxvFQAgjpMCmdQ+pHCVuyOsKX4Ke3E+Le27t1XzqN/Gk3RFxosgnFhcqTVp9JuvBpYLXAr2+pN1zDD9UCBQqiFlkUMxvDCd4yfJ9AAflsQgs7GUuBUbpqmBCyGK6hS8zHq5CQu4Xr0OK/Lw68jUyPLJmIxz99vNSafmGXZUAMwIcW2VKhVFHxMcwr4Km2UPdUJknuZBnzkaX4iEBkQTl5DqUMFfhaWYsF+8Tnm8SOAuOqGSPLjBu5fU7bvExNOLlufBXaCKBZ6XP/nrOm0+gXWZaL9z3aU3TJ+a8xbhx7ypC/WfNWo+GWTytQeWRGxbyv6m6+GR4GGu0Z/3V9Wh5aPLdyx3KjoZq6I54b2EBm/nSzA+KubmRRo+oP5izlyTvedZfP7QxVHQemMPhdyKuN1eHvkofBUzfwst+r+XW1whd7tNYYbX6Eqc/dXUY8vZmxTxKy3wazJM1BoyACJk7rE8iPGGXzTbDQtgcWCWX6NtO/lLtI4Fc6k2PhtXWT0paZEFOffYVBim3YPs+mAUgkP7F3jjkiSwlCn8nSMPW0cG6RkOQxOjwo5AB57SKkNp94/5Q+lWPz9ErIEj9slCbysiyGeOP84V9czTmaXkCrXWmc9qBmggn57Y3dkbKr0rcy45eQarS+poiBw8X7WyRNXqMype4g4be484cP1/+W5FKPW1RcI+v0lMovlnVl6m+B349o1l08oQvWRC+urfPwWyZBfqhCR8A50f4ghMUdRCvXNthfzguuxZWIkUnXXCgMOVrH7EPUF/h93aLDIPnWx536+K+xorMyUzXXue2DRiHeClAQYRTpnC674TisoDtUrnQZpbLLSKxU2jmcqACorTLZyqyTJtNlyzQxodlM+/2qMs+H7sIvMRGcPveE2iiwVUM8a0EVmuDWPlFvpIS4WdQ492Hb0vP+GRz5fPDAl1573Hb2Y9uFgPShytpSS4rrImYhRcw56RId29AX1zf/HhObHJJwhIpn+iShH889qMIIqthXDqMv7bZ2shRidUIJDCkOotZENkFFnRBH2o95dkr8eXHjVj1exTiI8ONPflqcBwwuMYTJMIzqi3j57dY+Jv2i1+qIGY4o/mePD/KYNE9da72+Jz0xFfnJ1uUnYxlyAcgDMrswdGGUA6QPODqRIC35oGy3xLWhKGGxJboY9yNEt8Cr8AbvO4HlnlgzmDI730XcX7mVAEXZavBKxt1/XNaE6zvrTZ+Bl6ZYH72wNMZ3VenXvSfbgLM3L0Gnm1QoCbM7635qMY2qkVB7MZXNRY3L2xxo0Dl8MRHN6KRq/mB3ewNpOMLUxg4+q2Qyp16l7TqZ6fl41frKmIy2w6gYAbrUxXptqhmjqK9Bs552Qgh+vLcz7Fbz4PS0mJMeGb9Ne0x02uhc/rwQ0xdTLLs6LA3LzRCTO/1tw6KOAChU6b8jHKPpnwjcYR6U9W0T8OycbsgNhtw1gkJrnLHLydhSMh8JBPR3M3DzXQleMyqivyeEe496tb0xKWN6O/lqTVUiXYuTQ9eJmlcuTEEanaV3ZloOfko8/o96vAz1lbGK1NDvven9MIVYV+OvLplTa5Lf97rOVztW2JUshx92Ej9yW/OV0qXsvRhJJKpQUlTOsWH9FrOcb3owPyYc0NFGX/0I+pI69yESPITeNwZ7sxB4IVsIYqafc2/ZXkmRhM+5IkuuOJIHhFFNKoueYM2Ei8Du7/v1L9FN5tAGp9cHg+bPuqp5k02yTpheB/Sbt+42kUV0dQncwX3eKIJbL9lDuRJpUklfiRltkHQudFrD8osNeNwP6x+qyC5YhceFr6l+q9u2nT36k01ZuC8GMLosnv1xgxE4w2lKroBZdLSHRo9bEnyRv72mo3vf/uBssjHtOgpz9YY45+ZU/QeuIUPgCddmp/bSh8qKRYJXmGC7MuxsEWoHxdJcFCYGdoJB2rx11oVZ994kAK/G02WSR5DTONr7Zh2hQGf2AQpbcK+9Uf9dJv3iKaziCzr/31ur5RQt4fe4rhjmpDrJSRa5ptLycxkSVaU/q6BYZBVBgWgT/c7sOZtOA5BiXIGPQdM8/Pi9yQHRN638WoPjuC5P8kIUvhQDenU0D5vSfxy5wt8rXkADfIVZUAmIvLLpfPvhHI8P4YMqUkb2FGALo2E/LRuPEItatUvMgTC7xExWmsu9Ic9+PK9yvXZ+BpmkxD23gje8mPr+dJxZwZF4XWwYHDDEObU8zOSpAeFos+PuOHdxfdsv55VeNZ0tM/NKsHzjPnAlSJ5hprSA1WgWKbPebsIrrz+QYjz8dijR2EJE0Lkdjo946K+7i4EHgNOlN5siey8e1CI5BF921o2N3bwVVDAN3Kl2XHDUiUd4L4AchDZMwddVmgqhw3JDVx/LYmSd4EB6B1emgIgBz1lOAlNRVOWpYf2mPDuBOiRoFK+YUskvvBQVeizkAXeQMX3XlfgLYyecMh3IBfi8pr+zhTRN7/mJgDV52tMF0qHjFUfQhbHiJqKhXbxTBVZPZd+IAq43Kobi1UgpGG5gC5nIw6Tj9N09ZzUt+8UryZB4XsB6tbaGTGWnw44Z3cpYnlOzj+CXIxkGPqElY2J1lVGeZSXkeq0w2taoHW6G18oub5aI4hg5CEy9bP7n7MML7Ys+o9TTRxBWg4BXrn+Mg9of/SpfkmSXAK18JU7ibtHAuTHJ/2eddrv94mg17/ioS32+kI1G23ZwvQkc/vEgPmEBP0wYSXlhVLua1gSxJdVJWuL6QGEnz57Kqa0Bw/lThDPIJ+x54NAzGpLS08+ChPUzueHXL8BeE6DApRtACod0yc6RfO/feY2lS6iQv+1snFAuYJWpWcSCuQByVM+EghAX/lAQRIjzioaYic9HLN1uWgmVLgM53xEgw7mAjml7hETs4N05bw9uqRrPcciKXcGiCeaRAHPakVsigMbv4mNPtSFm6LJALGxDueWiYgKDFjXqt6KfPExEcLV8n7X5PYZROUExe003A++iYKesxj18qKzP5MjTy+INo4MFb414TYbP+J10ZVA27hAdwFyOA0QLcBj40k1G1dy1MEnmieavOpeXyAugiCXlcdfqPP66cgH1TNxURB95W+4gWq1saXbv/EqejJI4C/6gzT1TJNHALrz1kw8AfVVa9RpxzSyARicxc6N7JRXcxFFfNzkIt1Fu8frpBb5hjJXlrIoxPaaciZ9zA7aklTFtjRiRrdmbXFfN4bArQib1BWAE2srb3AYoPZIj5fXHeRdsmR5ehgDM0VSznbnKdPkyHDP3NNIz3tZa3ZUnUuttmG4kY5grH4Q5MCUVREPqSEWV+o058BW97QNdv6Fmwf2GQcaNIgtK3pQLeAghQ5N2oJN6fTbBpsWr5iGqHhosXu938eGEa+M01nUhfx4BB1hFTpOpFiD7HdWCMsmedikRTs391uMO3OGAjy5zEaffy5H6Q4drrDy9f7N0Py3tq6dt0EYDP4kSlqnsTqlFg/HBOhnoIWNAAaDTVAeICr1vxeGDJWqG2668U4n3XBuo7PZZLA/J4sHNgBiII11qKB4OiXYpzNrUJqysi6MS6Ls4Ygys90jjgLG7STrvUsZqBCH1rrpURl33t1c0pg+0DLSv2f+GFVSWu30CQhFOaE+ARdU2CfpOp409EsocnIMnxIq/+Dm1cLqokUbXdXKdbQbb2DMhlvF229ZyPNV3wV+xqx7UbQzWH1oCAwa1GuwyT9inneuBo4dymnImZKGuSsxxODo8WhOotVisrdLiyJxUVj99M978M/bLy383wkeRAEA"></script><script>"use strict";(()=>{var r=Uint8Array,e=Uint16Array,n=Uint32Array,a=new r([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),t=new r([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),o=new r([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),i=function(r,a){for(var t=new e(31),o=0;o<31;++o)t[o]=a+=1<<r[o-1];for(var i=new n(t[30]),o=1;o<30;++o)for(var f=t[o];f<t[o+1];++f)i[f]=f-t[o]<<5|o;return[t,i]},f=i(a,2),v=f[0],l=f[1];v[28]=258,l[258]=28;var c=i(t,0),u=c[0],d=c[1],s=new e(32768);for(p=0;p<32768;++p)w=(p&43690)>>>1|(p&21845)<<1,w=(w&52428)>>>2|(w&13107)<<2,w=(w&61680)>>>4|(w&3855)<<4,s[p]=((w&65280)>>>8|(w&255)<<8)>>>1;var w,p,h=function(r,n,a){for(var t=r.length,o=0,i=new e(n);o<t;++o)r[o]&&++i[r[o]-1];var f=new e(n);for(o=0;o<n;++o)f[o]=f[o-1]+i[o-1]<<1;var v;if(a){v=new e(1<<n);var l=15-n;for(o=0;o<t;++o)if(r[o])for(var c=o<<4|r[o],u=n-r[o],d=f[r[o]-1]++<<u,w=d|(1<<u)-1;d<=w;++d)v[s[d]>>>l]=c}else for(v=new e(t),o=0;o<t;++o)r[o]&&(v[o]=s[f[r[o]-1]++]>>>15-r[o]);return v},g=new r(288);for(p=0;p<144;++p)g[p]=8;var p;for(p=144;p<256;++p)g[p]=9;var p;for(p=256;p<280;++p)g[p]=7;var p;for(p=280;p<288;++p)g[p]=8;var p,b=new r(32);for(p=0;p<32;++p)b[p]=5;var p;var y=h(g,9,1);var E=h(b,5,1),m=function(r){for(var e=r[0],n=1;n<r.length;++n)r[n]>e&&(e=r[n]);return e},T=function(r,e,n){var a=e/8|0;return(r[a]|r[a+1]<<8)>>(e&7)&n},k=function(r,e){var n=e/8|0;return(r[n]|r[n+1]<<8|r[n+2]<<16)>>(e&7)},x=function(r){return(r+7)/8|0},S=function(a,t,o){(t==null||t<0)&&(t=0),(o==null||o>a.length)&&(o=a.length);var i=new(a.BYTES_PER_ELEMENT==2?e:a.BYTES_PER_ELEMENT==4?n:r)(o-t);return i.set(a.subarray(t,o)),i};var z=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],A=function(r,e,n){var a=new Error(e||z[r]);if(a.code=r,Error.captureStackTrace&&Error.captureStackTrace(a,A),!n)throw a;return a},U=function(e,n,i){var f=e.length;if(!f||i&&i.f&&!i.l)return n||new r(0);var l=!n||i,c=!i||i.i;i||(i={}),n||(n=new r(f*3));var d=function(e){var a=n.length;if(e>a){var t=new r(Math.max(a*2,e));t.set(n),n=t}},s=i.f||0,w=i.p||0,p=i.b||0,g=i.l,b=i.d,z=i.m,U=i.n,C=f*8;do{if(!g){s=T(e,w,1);var _=T(e,w+1,3);if(w+=3,_)if(_==1)g=y,b=E,z=9,U=5;else if(_==2){var D=T(e,w,31)+257,M=T(e,w+10,15)+4,N=D+T(e,w+5,31)+1;w+=14;for(var R=new r(N),B=new r(19),F=0;F<M;++F)B[o[F]]=T(e,w+F*3,7);w+=M*3;for(var L=m(B),P=(1<<L)-1,Y=h(B,L,1),F=0;F<N;){var j=Y[T(e,w,P)];w+=j&15;var q=j>>>4;if(q<16)R[F++]=q;else{var I=0,O=0;for(q==16?(O=3+T(e,w,3),w+=2,I=R[F-1]):q==17?(O=3+T(e,w,7),w+=3):q==18&&(O=11+T(e,w,127),w+=7);O--;)R[F++]=I}}var $=R.subarray(0,D),G=R.subarray(D);z=m($),U=m(G),g=h($,z,1),b=h(G,U,1)}else A(1);else{var q=x(w)+4,H=e[q-4]|e[q-3]<<8,J=q+H;if(J>f){c&&A(0);break}l&&d(p+H),n.set(e.subarray(q,J),p),i.b=p+=H,i.p=w=J*8,i.f=s;continue}if(w>C){c&&A(0);break}}l&&d(p+131072);for(var K=(1<<z)-1,Q=(1<<U)-1,V=w;;V=w){var I=g[k(e,w)&K],W=I>>>4;if(w+=I&15,w>C){c&&A(0);break}if(I||A(2),W<256)n[p++]=W;else if(W==256){V=w,g=null;break}else{var X=W-254;if(W>264){var F=W-257,Z=a[F];X=T(e,w,(1<<Z)-1)+v[F],w+=Z}var rr=b[k(e,w)&Q],er=rr>>>4;rr||A(3),w+=rr&15;var G=u[er];if(er>3){var Z=t[er];G+=k(e,w)&(1<<Z)-1,w+=Z}if(w>C){c&&A(0);break}l&&d(p+131072);for(var nr=p+X;p<nr;p+=4)n[p]=n[p-G],n[p+1]=n[p+1-G],n[p+2]=n[p+2-G],n[p+3]=n[p+3-G];p=nr}}i.l=g,i.p=V,i.b=p,i.f=s,g&&(s=1,i.m=z,i.d=b,i.n=U)}while(!s);return p==n.length?n:S(n,0,p)};var C=new r(0);var _=function(r){(r[0]!=31||r[1]!=139||r[2]!=8)&&A(6,"invalid gzip data");var e=r[3],n=10;e&4&&(n+=r[10]|(r[11]<<8)+2);for(var a=(e>>3&1)+(e>>4&1);a>0;a-=!r[n++]);return n+(e&2)},D=function(r){var e=r.length;return(r[e-4]|r[e-3]<<8|r[e-2]<<16|r[e-1]<<24)>>>0};function M(e,n){return U(e.subarray(_(e),-8),n||new r(D(e)))}var N=typeof TextDecoder<"u"&&new TextDecoder,R=0;try{N.decode(C,{stream:!0}),R=1}catch{}var B=()=>{var r;let e=document.querySelectorAll('script[type="text/javascript+gzip"][src]');for(let n of e)try{let e=n.src.match(/^data:(.*?)(?:;(base64))?,(.*)$/);if(!e)continue;let[a,t,o,i]=e,f=Uint8Array.from(o?atob(i):decodeURIComponent(i),(r=>r.charCodeAt(0))),v=(new TextDecoder).decode(M(f)),l=document.createElement("script");l.textContent=v,(r=n.parentNode)==null||r.replaceChild(l,n)}catch(r){console.error("Could not gunzip script",n,r)}};B();window.gunzipSync=M;window.gunzipScripts=B})();</script><script>var randomNumberGenerator=new MersenneTwister((new Date).getTime()),randomNumberGeneratorSeeded=new MersenneTwister(hashString(`${tokenHash}`));function makeGradientPlane(e,a,t,n,i){const o=document.createElement("canvas");o.width=256,o.height=256;const r=o.getContext("2d");if("linear"==t)var s=r.createLinearGradient(0,0,0,o.height);else if("radial"==t)s=r.createRadialGradient(o.width/2,o.height/2,0,o.width/2,o.height/2,o.width/2);for(let e of n)s.addColorStop(e[0],e[1]);r.fillStyle=s,r.fillRect(0,0,o.width,o.height);const l=new THREE.CanvasTexture(o),d=new THREE.PlaneGeometry(e,a),c=new THREE.MeshBasicMaterial({map:l,fog:i});return new THREE.Mesh(d,c)}function makePerlinTexture(e,a,t,n,i,o,r,s,l="perlin3"){const d=document.createElement("canvas");d.setAttribute("id","canvas1"),d.width=e,d.height=a;const c=d.getContext("2d");if(r){var p=document.createElement("canvas");p.width=e,p.height=a;var m=p.getContext("2d")}noise.seed(Math.random());for(var u=0;u<d.width;u++)for(var g=0;g<d.height;g++){if("perlin3"==l)var E=noise.perlin3(u/t,g/n,u^g%150),f=256*Math.abs(E*o)+i;else if("simplex3"==l)E=noise.simplex3(u/t,g/n,u^g%150),f=256*Math.abs(E*o)+i;else if("simple"==l)f=255*Math.random()*o+i;let e=f,a=f,d=f;c.fillStyle="rgb("+e+","+a+","+d+")",c.fillRect(u,g,1,1),r&&(d=f/s,m.fillStyle="rgb("+d+","+d+","+d+")",m.fillRect(u,g,1,1))}const S=new THREE.CanvasTexture(d);if(S.wrapS=S.wrapT=THREE.RepeatWrapping,r){const e=new THREE.CanvasTexture(p);return e.wrapS=e.wrapT=THREE.RepeatWrapping,[S,e]}return S}function makeLight(e,a=!0){"point"==e.type?(e.light=new THREE.PointLight(e.color,e.power,e.size),a&&e.light.position.set(e.positionX,e.positionY,e.positionZ),enableShadows&&(e.light.castShadow=!0,e.light.shadow.mapSize.width=512,e.light.shadow.mapSize.height=512,e.light.shadow.camera.near=.5,e.light.shadow.camera.far=500,e.light.shadow.normalBias=.5)):"hemisphere"==e.type?e.light=new THREE.HemisphereLight(e.color1,e.color2,e.power):"ambient"==e.type?e.light=new THREE.AmbientLight(e.color):"directional"==e.type&&(e.light=new THREE.DirectionalLight(e.color,e.power),e.light.position.set(e.positionX,e.positionY,e.positionZ),e.light.rotation.set(e.rotationX,e.rotationY,e.rotationZ),enableShadows&&(e.light.castShadow=!0,e.light.shadow.mapSize.width=512,e.light.shadow.mapSize.height=512,e.light.shadow.camera.near=.5,e.light.shadow.camera.far=500,e.light.shadow.normalBias=.5))}function animateAxisNegativeSpace(e,a){null==e.userData&&(e.userData={},e.userData.negativeSpaceTargetX=rand(e.negativeSpaceAnimationX[0],e.negativeSpaceAnimationX[1],e.negativeSpaceAnimationX[2]),e.userData.negativeSpaceTargetY=rand(e.negativeSpaceAnimationY[0],e.negativeSpaceAnimationY[1],e.negativeSpaceAnimationY[2]),e.userData.negativeSpaceCurrentX=0,e.userData.negativeSpaceCurrentY=0);let t=0,n=0,i=e.negativeSpaceAnimationSpeedX*a,o=e.negativeSpaceAnimationSpeedY*a;if(e.userData.negativeSpaceCurrentX<e.userData.negativeSpaceTargetX?(t=i,e.userData.negativeSpaceCurrentX+=i):e.userData.negativeSpaceCurrentX>e.userData.negativeSpaceTargetX&&(t=-i,e.userData.negativeSpaceCurrentX-=i),e.userData.negativeSpaceCurrentY<e.userData.negativeSpaceTargetY?(n=o,e.userData.negativeSpaceCurrentY+=o):e.userData.negativeSpaceCurrentY>e.userData.negativeSpaceTargetY&&(n=-o,e.userData.negativeSpaceCurrentY-=o),(e.userData.negativeSpaceTargetX>=0&&e.userData.negativeSpaceCurrentX>e.userData.negativeSpaceTargetX||e.userData.negativeSpaceTargetX<=0&&e.userData.negativeSpaceCurrentX<e.userData.negativeSpaceTargetX)&&(e.userData.negativeSpaceTargetX=rand(e.negativeSpaceAnimationX[0],e.negativeSpaceAnimationX[1],e.negativeSpaceAnimationX[2])),(e.userData.negativeSpaceTargetY>=0&&e.userData.negativeSpaceCurrentY>e.userData.negativeSpaceTargetY||e.userData.negativeSpaceTargetY<=0&&e.userData.negativeSpaceCurrentY<e.userData.negativeSpaceTargetY)&&(e.userData.negativeSpaceTargetY=rand(e.negativeSpaceAnimationY[0],e.negativeSpaceAnimationX[1],e.negativeSpaceAnimationY[2])),0!=t||0!=n)for(let a in e.clipPlanes)e.clipPlanes[a].translate(new THREE.Vector3(t,n,0))}function makeCamera(){if("perspective"==cameraType)(e=new THREE.PerspectiveCamera(fieldOfView,cameraAspect,cameraNear,cameraFar)).aspect=rendererWidth/rendererHeight;else var e=new THREE.OrthographicCamera(rendererWidth/-orthographicCameraScale,rendererWidth/orthographicCameraScale,rendererHeight/orthographicCameraScale,rendererHeight/-orthographicCameraScale,cameraNear,cameraFar);return e.position.x=cameraX,e.position.y=cameraY,e.position.z=cameraZ,e.updateProjectionMatrix(),e.userData.animationQueue=[],e}function makeScene(){const e=new THREE.Scene;return e.fog=new THREE.Fog(fogColor,fogNear,fogFar),e.fog.userData={animationQueue:[]},e.fog.enabled=!0,enableFog||(e.fog.near=200,e.fog.far=200,e.fog.enabled=!1),e.background=new THREE.Color(worldGradientColors[worldGradientColors.length-1][1]),e}function makeRenderer(){const e=new THREE.WebGLRenderer({antialias:rendererAntialias,premultipliedAlpha:!0});return e.setSize(rendererWidth,rendererHeight,!1),e.setPixelRatio(window.devicePixelRatio),e.toneMapping=THREE[rendererToneMapping],e.localClippingEnabled=!0,enableShadows&&(e.shadowMap.enabled=!0,e.shadowMap.type=THREE.PCFShadowMap),e.autoClear=!1,document.body.appendChild(e.domElement),e}function loadOBJ(e,a,t,n,i){const o=new THREE.OBJLoader;return object=o.parse(atob(e)),object.traverse((function(e){e.material=a})),object.scale.set(t[0],t[1],t[2]),object.position.set(n[0],n[1],n[2]),object.rotation.set(THREE.MathUtils.degToRad(i[0]),THREE.MathUtils.degToRad(i[1]),THREE.MathUtils.degToRad(i[2])),object}function addPivotToAxis(e,a,t){let n=new THREE.Object3D;n.userData.name=t;var i=rand(e.axisX[0],e.axisX[1],e.axisX[2]),o=rand(e.axisY[0],e.axisY[1],e.axisY[2]),r=rand(e.axisZ[0],e.axisZ[1],e.axisZ[2]);n.userData.rotationSpeed=rand(e.coneRotationSpeed[0],e.coneRotationSpeed[1],e.coneRotationSpeed[2]),n.userData.originalRotationSpeed=n.userData.rotationSpeed,n.rotation.z=THREE.MathUtils.degToRad(rand(e.axisAngle[0],e.axisAngle[1],e.axisAngle[2])),n.userData.originalPosition=[i,o,r],n.position.set(i,o,r),n.add(a),e.pivots.push(n),e.mainPivot.add(n)}function addConeToAxis(e,a,t,n){let i=rand(t.radius[0],t.radius[1],t.radius[2]),o=rand(t.height[0],t.height[1],t.height[2]),r=rand(t.scale[0],t.scale[1],t.scale[2]),s=r+rand(t.scaleX[0],t.scaleX[1],t.scaleX[2]),l=r+rand(t.scaleY[0],t.scaleY[1],t.scaleY[2]),d=r+rand(t.scaleZ[0],t.scaleZ[1],t.scaleZ[2]),c=rand(t.positionX[0],t.positionX[1],t.positionX[2]),p=rand(t.positionY[0],t.positionY[1],t.positionY[2]),m=rand(t.positionZ[0],t.positionZ[1],t.positionZ[2]),u=rand(t.rotationX[0],t.rotationX[1],t.rotationX[2]),g=rand(t.rotationY[0],t.rotationY[1],t.rotationY[2]),E=(rand(t.rotationZ[0],t.rotationZ[1],t.rotationZ[2]),t.numberOfRadialSegments),f=t.numberOfHeightSegments,S=t.openEnded;e.ellipseMode&&(c*=Math.pow(20-Math.abs(p),e.ellipseModePowerOf)*e.ellipseModeMultiplier,m*=Math.pow(20-Math.abs(p),e.ellipseModePowerOf)*e.ellipseModeMultiplier),e.enableScaleEllipseMode&&(s*=Math.pow(e.scaleEllipseModeBaseX-Math.abs(p),e.scaleEllipseModePowerOfX)*e.scaleEllipseModeMultiplierX,l*=Math.pow(e.scaleEllipseModeBaseY-Math.abs(p),e.scaleEllipseModePowerOfY)*e.scaleEllipseModeMultiplierY,d*=Math.pow(e.scaleEllipseModeBaseZ-Math.abs(p),e.scaleEllipseModePowerOfZ)*e.scaleEllipseModeMultiplierZ);let h={};for(let e=0;e<100;e++){let e=t.types[randS(0,t.types.length-1,1)];if(randS(0,1,.1)>1-e.probability){h=e;break}}let v=materialTemplates[t.material].clone();t.wireframeProbability&&randS(0,1,.01)>1-t.wireframeProbability?(v.wireframe=!0,E=5,f=5,S=!0):v.wireframe=!1;let A=makeCone(v,i,o,E,f,S,[s,l,d],[c,p,m],[u,g,u],h);if(n){let e=Math.max(s,l,d),a=e/100*n;a=Math.max(a,1e-7),A.scale.set(0,0,0),A.userData.animationQueue=[makeAnimationForQueue("scale",0,e,e,a)]}e.enableNegativeSpace&&(A.material.clippingPlanes=e.clipPlanes,A.material.clipIntersection=!0),A.userData.name=a,addPivotToAxis(e,A,a)}function addConeToAxisFALLBACK(e,a,t){let n=rand(e.coneRadius[0],e.coneRadius[1],e.coneRadius[2]),i=rand(e.coneHeight[0],e.coneHeight[1],e.coneHeight[2]),o=rand(e.coneBaseScale[0],e.coneBaseScale[1],e.coneBaseScale[2]),r=o+rand(e.coneAddScaleX[0],e.coneAddScaleX[1],e.coneAddScaleX[2]),s=o+rand(e.coneAddScaleY[0],e.coneAddScaleY[1],e.coneAddScaleY[2]),l=o+rand(e.coneAddScaleZ[0],e.coneAddScaleZ[1],e.coneAddScaleZ[2]),d=rand(e.conePositionX[0],e.conePositionX[1],e.conePositionX[2]),c=rand(e.conePositionY[0],e.conePositionY[1],e.conePositionY[2]),p=rand(e.conePositionZ[0],e.conePositionZ[1],e.conePositionZ[2]),m=rand(e.coneRotationX[0],e.coneRotationX[1],e.coneRotationX[2]),u=rand(e.coneRotationY[0],e.coneRotationY[1],e.coneRotationY[2]),g=(rand(e.coneRotationZ[0],e.coneRotationZ[1],e.coneRotationZ[2]),e.coneNumberOfRadialSegments),E=e.coneNumberOfHeightSegments,f=e.coneOpenEnded;e.ellipseMode&&(d*=Math.pow(20-Math.abs(c),e.ellipseModePowerOf)*e.ellipseModeMultiplier,p*=Math.pow(20-Math.abs(c),e.ellipseModePowerOf)*e.ellipseModeMultiplier),e.enableScaleEllipseMode&&(r*=Math.pow(e.scaleEllipseModeBaseX-Math.abs(c),e.scaleEllipseModePowerOfX)*e.scaleEllipseModeMultiplierX,s*=Math.pow(e.scaleEllipseModeBaseY-Math.abs(c),e.scaleEllipseModePowerOfY)*e.scaleEllipseModeMultiplierY,l*=Math.pow(e.scaleEllipseModeBaseZ-Math.abs(c),e.scaleEllipseModePowerOfZ)*e.scaleEllipseModeMultiplierZ);let S={};for(let a=0;a<100;a++){let a=e.axisArrayConeTypes[rand(0,e.axisArrayConeTypes.length-1,1)];if(rand(0,1,.1)>1-a.probability){S=a;break}}var h=e.coneMaterial;e.wireframeProbability>0&&rand(0,1,.01)>1-e.wireframeProbability&&((h=e.coneMaterial.clone()).wireframe=!0,g=5,E=5,f=!0);let v=makeCone(h,n,i,g,E,f,[r,s,l],[d,c,p],[m,u,m],S);if(t){let e=Math.max(r,s,l),a=e/100*t;a=Math.max(a,1e-7),v.scale.set(0,0,0),v.userData.animationQueue=[makeAnimationForQueue("scale",0,e,e,a)]}v.userData.name=a,addPivotToAxis(e,v,a)}function animateWorldPlane(){SCENE.worldPlane.userData.animationQueue||((SCENE.worldPlane.scale.x>1+SCENE.worldPlane.userData.scaleAmount&&SCENE.worldPlane.userData.scaleFactor>0||SCENE.worldPlane.scale.x<1&&SCENE.worldPlane.userData.scaleFactor<0)&&(SCENE.worldPlane.userData.scaleFactor*=-1),SCENE.worldPlane.scale.set(SCENE.worldPlane.scale.x+SCENE.worldPlane.userData.scaleFactor,SCENE.worldPlane.scale.y+SCENE.worldPlane.userData.scaleFactor,1))}function makeWorldPlane(){worldPlane=makeGradientPlane(3*rendererWidth,3*rendererWidth,worldGradientType,worldGradientColors,!1),worldPlane.userData.name="worldPlane",worldPlane.position.z=-rendererWidth,worldPlane.z=-100,worldPlane.userData.scaleFactor=rand(worldGradientAnimationSpeed[0],worldGradientAnimationSpeed[1],worldGradientAnimationSpeed[2]),worldPlane.userData.scaleAmount=rand(worldGradientAnimationScale[0],worldGradientAnimationScale[1],worldGradientAnimationScale[2]),worldPlane.userData.animationQueue=[],SCENE.worldPlane=worldPlane,SCENE.scene.add(SCENE.worldPlane)}function addExtraShapeToAxis(e,a,t,n,i){let o,r=t,s=randFromRange(n.scale),l=s+randFromRange(n.scaleX),d=s+randFromRange(n.scaleY),c=s+randFromRange(n.scaleZ),p=randFromRangeS2(n.positionX),m=randFromRangeS2(n.positionY),u=randFromRangeS2(n.positionZ),g=randFromRange(n.rotationX),E=randFromRange(n.rotationY),f=randFromRange(n.rotationZ);if(n.material)var S=materialTemplates[n.material].clone();else{S=e.coneMaterial.clone();e.coneMaterial.map&&(n.textureScale&&(S.map.repeat.x=n.textureScale[0],S.map.repeat.y=n.textureScale[1]),n.textureRotation&&(S.map.rotation=THREE.MathUtils.degToRad(n.textureRotation),S.map.rotation=!0)),n.color&&(S.color=new THREE.Color(n.color),S.color.needsUpdate=!0)}if("flower1"==r){S.map=void 0,S.bumpMap=void 0;let e=S.clone();if(SCENE.palette.special)S.color=new THREE.Color(SCENE.palette.special.flower[0]),e.color=new THREE.Color(SCENE.palette.special.flower[1]);else{let a=pickS2(SCENE.palette.colors);S.color=new THREE.Color(a[0]),e.color=new THREE.Color(a[1])}S=[S,e]}if("terrain"==r){let e=randFromRange(n.heightScale),a=[];o=makeTerrain(S,n.worldSizeX,n.worldSizeY,e,[l,d,c],[p,m,u],[g,E,f],a)}else if("frame"==r){let e=randFromRange(n.height),a=randFromRange(n.width),t=randFromRange(n.thickness),i=randFromRange(n.depth);o=makeFrame(S,e,a,t,i,[l,d,c],[p,m,u],[g,E,f])}else if("rectangle"==r){let e=randFromRange(n.height),a=randFromRange(n.width),t=randFromRange(n.depth);o=makeRectangle(S,e,a,t,[l,d,c],[p,m,u],[g,E,f])}else if("arrow"==r){let e=randFromRange(n.depth),a=randFromRange(n.bevelThickness),t=randFromRange(n.bevelSize),i=randFromRange(n.bevelSegments),r=n.type||0;o=makeArrow(S,e,a,t,i,[l,d,c],[p,m,u],[g,E,f],r)}else if("knot"==r){let e=randFromRange(n.radius),a=randFromRange(n.tube),t=randFromRange(n.tubularSegments),i=randFromRange(n.radialSegments),r=randFromRange(n.p),s=randFromRange(n.q);o=makeKnot(S,e,a,t,i,r,s,[l,d,c],[p,m,u],[g,E,f])}else r in base64Objects&&(o=loadOBJ(base64Objects[r],S,[l,d,c],[p,m,u],[g,E,f]));if(i){let e=Math.max(l,d,c),a=e/100*i;a=Math.max(a,1e-7),o.scale.set(0,0,0),o.userData.animationQueue=[makeAnimationForQueue("scale",0,e,e,a)]}o.userData.name=a,o.name=a,e.enableNegativeSpace&&(o.material.clippingPlanes=e.clipPlanes,o.material.clipIntersection=!0),addPivotToAxis(e,o,a)}function updateObjectRotationSpeed(e,a,t,n=1,i=.1){for(let o of Axis)if(o.name==a)for(let a of o.pivots)if(a.userData.name==e){let e=a.userData.rotationSpeed;void 0===e&&(e=0);let o=makeAnimationForQueue("rotationSpeed",e,t,t,n,i);return void 0===a.userData.animationQueue&&(a.userData.animationQueue=[]),void a.userData.animationQueue.push(o)}}function switchObjectRotationDirection(e,a,t=1,n=.1){for(let i of Axis)if(i.name==a)for(let a of i.pivots)if(a.userData.name==e){let e=a.userData.rotationSpeed;void 0===e&&(e=0);let i=makeAnimationForQueue("rotationSpeed",e,-1*e,-1*e,t,n);return void 0===a.userData.animationQueue&&(a.userData.animationQueue=[]),void a.userData.animationQueue.push(i)}}function updateObjectDistanceFromAxis(e,a,t,n=1,i=.1){for(let o of Axis)if(o.name==a)for(let a of o.pivots)if(a.userData.name==e)for(let o of a.children)if(o.userData.name==e){let e=o.position.x,a=makeAnimationForQueue("distance",e,t,t,n,i);void 0===o.userData.animationQueue&&(o.userData.animationQueue=[]),o.userData.animationQueue.push(a)}}function increaseBackgroundGradientAnimationSpeed(e){SCENE.worldPlaneScaleFactor*=worldGradientAnimationSpeed}function updateBackgroundGradientScale(e,a=1,t=.1){let n=Math.max(SCENE.worldPlane.scale.x,SCENE.worldPlane.scale.y);SCENE.worldPlane.userData.animationQueue.push(makeAnimationForQueue("scale",n,e,e,a,t))}function updateCameraPosition(e,a,t,n=1,i=.1){void 0!==e&&SCENE.camera.userData.animationQueue.push(makeAnimationForQueue("x",SCENE.camera.position.x,e,e,n,i)),void 0!==a&&SCENE.camera.userData.animationQueue.push(makeAnimationForQueue("y",SCENE.camera.position.y,a,a,n,i)),void 0!==t&&SCENE.camera.userData.animationQueue.push(makeAnimationForQueue("z",SCENE.camera.position.z,t,t,n,i))}function updateObjectScale(e,a,t,n=1,i=.1){for(let o of Axis)if(o.name==a)for(let a of o.pivots)if(a.userData.name==e)for(let o of a.children)if(o.userData.name==e){let e=Math.max(o.scale.x,o.scale.y,o.scale.z),a=makeAnimationForQueue("scale",e,t,t,n,i);void 0===o.userData.animationQueue&&(o.userData.animationQueue=[]),o.userData.animationQueue.push(a)}}function updateObjectScale2(e,a,t=1,n=.1){let i=Math.max(e.scale.x,e.scale.y,e.scale.z),o=makeAnimationForQueue("scale",i,a,a,t,n);null==e.userData.animationQueue&&(e.userData.animationQueue=[]),e.userData.animationQueue.push(o)}function updateVanishingPoint(e,a,t=1){SCENE.scene.fog.userData.animationQueue.push(makeAnimationForQueue("near-far",[SCENE.scene.fog.near,SCENE.scene.fog.far],[e,a],[e,a],t))}function updateFogColor(e,a=1){SCENE.scene.fog.userData.animationQueue.push(makeAnimationForQueue("color",SCENE.scene.fog.color,e,e,a))}function addNewShape(e,a,t,n){for(ax of Axis)if(shapeParams=extraShapes[t],ax.name==e){if(shapeParams.cone)return void addConeToAxis(ax,a,shapeParams,n);addExtraShapeToAxis(ax,a,t,shapeParams,n)}}function rotateAxis(e,a,t,n,i=1,o=.1){for(let r of Axis)r.name==e&&(null==r.mainPivot.userData.animationQueue&&(r.mainPivot.userData.animationQueue=[]),void 0!==a&&(a=THREE.MathUtils.degToRad(a),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("angleX",r.mainPivot.rotation.x,a,a,i,o))),void 0!==t&&(t=THREE.MathUtils.degToRad(t),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("angleY",r.mainPivot.rotation.y,t,t,i,o))),void 0!==n&&(n=THREE.MathUtils.degToRad(n),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("angleZ",r.mainPivot.rotation.z,n,n,i,o))))}function moveAxis(e,a,t,n,i=1,o=.1){for(let r of Axis)r.name==e&&(null==r.mainPivot.userData.animationQueue&&(r.mainPivot.userData.animationQueue=[]),void 0!==a&&(a=THREE.MathUtils.degToRad(a),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("x",r.mainPivot.position.x,a,a,i,o))),void 0!==t&&(t=THREE.MathUtils.degToRad(t),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("y",r.mainPivot.position.y,t,t,i,.1))),void 0!==n&&(n=THREE.MathUtils.degToRad(n),r.mainPivot.userData.animationQueue.push(makeAnimationForQueue("z",r.mainPivot.position.z,n,n,i,.1))))}function getObjectVertexXYZ(e,a,t){for(let n of Axis)if(n.name==e)for(let e of n.pivots)if(e.userData.name==a)for(child of e.children){let e=child.geometry.getAttribute("position");null==t&&(t=rand(0,e.count,1));let a=new THREE.Vector3(e.getX(t),e.getY(t),e.getZ(t));return a.applyMatrix4(child.matrixWorld),a}}function zapTerrain(e,a,t,n,o,r,s,l){Array.isArray(t)&&(t=pick(t)),Array.isArray(n)&&(n=randFromRange(n)),Array.isArray(o)&&(o=randFromRange(o)),Array.isArray(r)&&(r=randFromRange(r)),Array.isArray(s)&&(s=randFromRange(s)),Array.isArray(l)&&(l=randFromRange(l));for(let d of Axis)if(d.name==e){let c=getObjectVertexXYZ(e,a),p=rand(2,4,1);for(i=0;i<p;i++){let e=makeLightning(new THREE.LineBasicMaterial({color:t,linewidth:s*rand(.5,1.2,.1)}),n*rand(1,1.5,.1),o*rand(.5,2,.1),r,l,[1,1,1],[c.x,c.y,c.z],[0,0,0]);d.mainPivot.add(e),d.lightnings.push(e)}}}function addRotationLoop(e,a,t,n){for(let i of Axis)if(i.name==a)for(let a of i.pivots)if(a.userData.name==e)for(let i of a.children)if(i.userData.name==e){let e,a;"X"==t?(e="angleX",a=i.rotation.x):"Y"==t?(e="angleY",a=i.rotation.y):"Z"==t&&(e="angleZ",a=i.rotation.z);let o=makeAnimationForQueue(e,a,a+1,a+1,n,void 0);void 0===i.userData.animationLoop&&(i.userData.animationLoop=[]),i.userData.animationLoop.push(o)}}function removeRotationLoop(e,a,t){for(let n of Axis)if(n.name==a)for(let a of n.pivots)if(a.userData.name==e)for(let n of a.children)if(n.userData.name==e&&n.userData.animationLoop){let e;"X"==t?e="angleX":"Y"==t?e="angleY":"Z"==t&&(e="angleZ");for(let a=0;a<n.userData.animationLoop.length;a++)if(n.userData.animationLoop[a].attribute==e)return void n.userData.animationLoop.splice(a,1)}}function logDebugMessage(){let e=`Hash: ${tokenHash} Randomness:`;for(let a=0;a<5;a++)e+=" "+randS(1,100,1);e+=`\nPalette: ${JSON.stringify(SCENE.palette)}`,e+="\nAxis shapes:";for(let a of Axis)for(shape in e+="\n"+a.name+":",a.extraShapes)e+=" "+shape+` [${a.extraShapes[shape].numberOfShapes} ${a.extraShapes[shape].material}]`}async function walletActivityUpdates(){try{return await getLastBlockReceipts()}catch(e){}}function testProbabilities(){let e=[[.1,"1"],[.1,"2"],[.1,"3"],[.1,"4"],[.1,"5"],[.1,"6"],[.1,"7"]],a={1:0,2:0,3:0,4:0,5:0,6:0,7:0};for(let t=0;t<1e3;t++){a[pickFromProbabilityArrayS(e)]+=1}let t="";for(let e in a)t+=a[e],t+=","}function disableAxis(e,a=.01,t=.3){e.enabled=!1;for(let n of e.pivots){n.userData.originalScale||(n.userData.originalScale=n.scale.x),updateObjectScale2(n,0,a,t);for(let a of n.children)setTimeout((()=>{a.visible=e.enabled}),2e4)}}function enableAxis(e,a=.01,t=.3){e.enabled=!0;for(let n of e.pivots){updateObjectScale2(n,n.userData.originalScale,a,t);for(let e of n.children)e.visible=!0}}function setAxisInvisibleAndDisabled(e){e.enabled=!1;for(let a of e.pivots){a.userData.originalScale=a.scale.x,a.scale.set(0,0,0);for(let e of a.children)e.visible=!1}}function setAxisVisibleAndEnabled(e){e.enabled=!0;for(let a of e.pivots){updateObjectScale2(a,a.userData.originalScale,.01,.2);for(let e of a.children)e.visible=!0}}function disappearObjects(e,a=.01,t=.3,n=!1){let i=0;for(let o=0;o<500;o++){let o=Axis[rand(0,Axis.length-1,1)];if(!o.enabled||!o.pivots||0==o.pivots.length)continue;let r=rand(0,o.pivots.length-1,1),s=o.pivots[r];if(!(s.children[0].userData.animationQueue&&s.children[0].userData.animationQueue.length>0)&&(!s.userData.disabled&&(s.children[0].userData.originalScale=s.children[0].scale.x,updateObjectScale2(s.children[0],0,a*s.children[0].scale.x,t),setTimeout((()=>{s.userData.disabled=!0,s.visible=!1,n&&(s.userData.toBeRemoved=!0)}),2e4),i++,i>=e)))break}return i}function appearObjects(e,a=.01,t=.3){let n=0;for(let i=0;i<500;i++){let i=Axis[rand(0,Axis.length-1,1)];if(!i.enabled||!i.pivots||0==i.pivots.length)continue;let o=i.pivots[rand(0,i.pivots.length-1,1)];if(!(o.children[0].userData.animationQueue&&o.children[0].userData.animationQueue.length>0)&&(o.userData.disabled&&(updateObjectScale2(o.children[0],o.children[0].userData.originalScale,a*o.children[0].userData.originalScale,t),o.visible=!0,o.userData.disabled=!1,n++,n>=e)))break}return n}function randomContractData(){let e=[rand(0,1e3,1)],a=[],t=[rand(0,1e3,1)],n=[],i=[rand(20,300,1)],o=[],r=[],s=1681510366,l=1681510366,d=1681510366,c=1681510366;for(let e=0;e<200;e++)s+=rand(1e3,1e6,1),l+=rand(1e3,1e6,1),d+=rand(1e3,1e6,1),c+=rand(1e3,1e6,1),a.push(s),n.push(l),o.push(d),o.push(rand(3e15,6e15,1)),r.push(c),r.push(rand(3e15,6e15,1));return[e,a,t,n,i,o,r,[300]]}function randomWalletActivity(){return GOLD_WALLET_ACTIVITY[rand(0,GOLD_WALLET_ACTIVITY.length,1)]}function pickAxis(e,a=[],t=!1){for(let n=0;n<100;n++){let n=rand(0,Axis.length-1,1);if(Axis[n].pivots&&0!=Axis[n].pivots.length&&(!(-1!=a.indexOf(n)||t&&Axis[n].extremeAngle)&&Axis[n].enabled==e))return Axis[n]}}function getLoopingObjects(){let e=[];for(let a of Axis)if(a.enabled)for(let t of a.pivots)t.children[0].animationLoop&&e.push([a.name,t]);return e}function getNotLoopingObjects(){let e=[];for(let a of Axis)if(a.enabled)for(let t of a.pivots)t.children[0].animationLoop||e.push([a.name,t]);return e}function animateFog(){SCENE.scene.fog.userData&&(SCENE.scene.fog.userData.nearTo&&(SCENE.scene.fog.near<SCENE.scene.fog.userData.nearTo?SCENE.scene.fog.near+=dynamicUpdateAnimationSpeeds.fog.speed:SCENE.scene.fog.near>SCENE.scene.fog.userData.farTo?SCENE.scene.fog.near-=dynamicUpdateAnimationSpeeds.fog.speed:SCENE.scene.fog.userData.nearTo=void 0),SCENE.scene.fog.userData.farTo&&(SCENE.scene.fog.far<SCENE.scene.fog.userData.farTo?SCENE.scene.fog.far+=dynamicUpdateAnimationSpeeds.fog.speed:SCENE.scene.fog.far>SCENE.scene.fog.userData.farTo?SCENE.scene.fog.far-=dynamicUpdateAnimationSpeeds.fog.speed:SCENE.scene.fog.userData.farTo=void 0))}function updateScene(){for(let e of Axis){for(let a of e.pivots)a.userData.toBeRemoved&&SCENE.scene.remove(e.pivot);e.pivots=e.pivots.filter((e=>!e.userData.toBeRemoved))}let e="",a=getCurrentTs();SCENE.camera.userData&&SCENE.camera.userData.positionUpdateTimestamp&&a>SCENE.camera.userData.positionUpdateTimestamp+60*durationOfTimeBasedUpdates&&(SCENE.camera.userData.animationQueue=[],SCENE.camera.userData.positionUpdateTimestamp=void 0,updateCameraPosition(void 0,void 0,SCENE.camera.userData.originalPositionZ,dynamicUpdateAnimationSpeeds.cameraPosition.speed,dynamicUpdateAnimationSpeeds.cameraPosition.curve),e+="Normalized camera position\n");for(let t of Axis)if(t.enabled){if(t.extremeAngleEnabledTimestamp&&a>t.extremeAngleEnabledTimestamp+60*durationOfTimeBasedUpdates){t.extremeAngle=void 0,t.axisAngle=t.originalAngle;let a=THREE.MathUtils.radToDeg(t.mainPivot.rotation.z);t.extremeAngleEnabledTimestamp=void 0;let n=randFromRange(t.axisAngle);rotateAxis(t.name,void 0,void 0,n,dynamicUpdateAnimationSpeeds.axisExtremeAngle.speed,dynamicUpdateAnimationSpeeds.axisExtremeAngle.curve),e+=`Normalized ${t.name} extreme angle from ${a} to ${n}\n`}for(let n of t.pivots)n.userData.lightningTriggered&&a>n.userData.lightningTriggeredTimestamp+60*durationOfTimeBasedUpdates&&(n.userData.lightningTriggered=void 0,n.userData.lightningTriggeredTimestamp=void 0,e+=`Deactivated lightning for ${t.name} ${n.userData.name}\n`);if(t.rotationDirectionSwitchTimestamp&&a>t.rotationDirectionSwitchTimestamp+60*durationOfTimeBasedUpdates){t.rotationDirectionSwitchTimestamp=void 0;for(let e of t.pivots)switchObjectRotationDirection(e.userData.name,t.name,dynamicUpdateAnimationSpeeds.axisRotationDirection.speed,dynamicUpdateAnimationSpeeds.axisRotationDirection.curve);e+=`Normalized axis rotation direction ${t.name}\n`}}if("generated"!=DEBUG_UPDATE_SOURCE)var t={changed:!0,value:rand(-3,3,1)},n={changed:!0,value:rand(-3,3,1)},i={changed:!0,value:rand(-3,3,1)},o={changed:!0,value:rand(-3,3,1)};else t=SCENE.data.contract.tiers.royalty_received_tier,n=SCENE.data.contract.tiers.contract_activity_tier,i=SCENE.data.contract.tiers.sends_tier,o=SCENE.data.contract.tiers.approvals_tier;e="";let r=[];if("random"==DEBUG_UPDATE_SOURCE?r=[rand(0,12,1)]:"generated"==DEBUG_UPDATE_SOURCE?(t.changed&&r.push(13),t.changed&&r.push(5),i.changed&&r.push(6),o.changed&&r.push(7),rand(0,1,.01)>.5&&(r=[pick([0,1,2,3,4,8,9,10,11,12])])):null!=DEBUG_UPDATE_SOURCE&&(r=[DEBUG_UPDATE_SOURCE]),-1!=r.indexOf(0)){let a=0,t=0;for(let e of Axis)for(let n of e.pivots)n.userData.disabled?t++:a++;let n=0,i=0;0==t?i=rand(0,10,1):a/t<3?(n=rand(10,20,1),i=0):(n=rand(0,10,1),i=n*rand(0,.5,.1)),e+=`Appeared objects:${appearObjects(n,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.speed,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.curve)} Dissapeared objects:${disappearObjects(i,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.speed,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.curve)} (${a},${t})\n`}if(-1!=r.indexOf(1)){let a,t,n=Axis.filter((e=>e.enabled&&e.pivots.length)),i=Axis.filter((e=>!e.enabled&&e.pivots.length));3==n.length?(a=pick(i),t=enableAxis):7==n.length?(a=pick(n),t=disableAxis):rand(0,1,.01)>.5?(a=pick(i),t=enableAxis):(a=pick(n),t=disableAxis),t&&a&&(t(a,dynamicUpdateAnimationSpeeds.axisAppearAndDisappear.speed,dynamicUpdateAnimationSpeeds.axisAppearAndDisappear.curve),e+=`${t==enableAxis?"Enabled":"Disabled"} axis:${a.name}\n`)}if(-1!=r.indexOf(2)){let a=pickAxis(!0,[],!0);if(null==a)return;let t=randFromRange(hashOverwrites.axisAngle),n=THREE.MathUtils.radToDeg(a.mainPivot.rotation.z);rotateAxis(a.name,void 0,void 0,t,dynamicUpdateAnimationSpeeds.axisAngle.speed,dynamicUpdateAnimationSpeeds.axisAngle.curve),e+=`Changed ${a.name} angle from ${n} to ${t}\n`}if(-1!=r.indexOf(3)){let a=pickAxis(!0,[],!0);if(null==a)return;let t=THREE.MathUtils.radToDeg(a.centralRodRotation[2]),n=rand(0,1,.001)>.5?rand(-90,-30,1):rand(30,90,1);null==a.originalAngle&&(a.originalAngle=a.axisAngle),a.extremeAngle=n,a.axisAngle=[n,n,1],a.extremeAngleEnabledTimestamp=getCurrentTs(),rotateAxis(a.name,void 0,void 0,n,dynamicUpdateAnimationSpeeds.axisExtremeAngle.speed,dynamicUpdateAnimationSpeeds.axisExtremeAngle.curve),e+=`Changed ${a.name} extreme angle from ${t} to ${n}\n`}if(-1!=r.indexOf(4)){let a,t,n,i=pickAxis(!0,[],!1),o=`${i.centraRodPosition[0]} ${i.centraRodPosition[1]} ${i.centraRodPosition[2]}`,r=rand(0,2,1);0==r?a=randFromRange(hashOverwrites.axisX):1==r?t=randFromRange(hashOverwrites.axisY):n=randFromRange(hashOverwrites.axisZ);let s=`${a/20} ${t/20} ${n/20}`;moveAxis(i.name,a,t,n,dynamicUpdateAnimationSpeeds.axisPosition.speed,dynamicUpdateAnimationSpeeds.axisPosition.curve),e+=`Changed ${i.name} position from ${o} to ${s}\n`}if(-1!=r.indexOf(5)){let a=tierToValue(tiersStructure.royalty,t.value),n=pickAxis(!0,[],!1);for(let t of n.pivots){let i=t.userData.originalRotationSpeed*a;updateObjectRotationSpeed(t.userData.name,n.name,i,dynamicUpdateAnimationSpeeds.objectRotationSpeed.speed,dynamicUpdateAnimationSpeeds.objectRotationSpeed.curve),e+=`Changed ${n.name} ${t.userData.name} rotation speed from ${t.userData.originalRotationSpeed} to ${i}\n`}}if(-1!=r.indexOf(6)){let a=tierToValue(tiersStructure.royalty,t.value),n=pickAxis(!0,[],!1);for(let t of n.pivots){let i=t.userData.originalPosition[0],o=i*a;updateObjectDistanceFromAxis(t.userData.name,n.name,o,dynamicUpdateAnimationSpeeds.objectPosition.speed,dynamicUpdateAnimationSpeeds.objectPosition.curve),e+=`Changed ${n.name} ${t.userData.name} distance from axis from ${i} to ${o}\n`}}if(-1!=r.indexOf(7)){let a=tierToValue(tiersStructure.royalty,t.value);SCENE.worldPlane.userData.originalScaleX||(SCENE.worldPlane.userData.originalScaleX=SCENE.worldPlane.scale.x);let n=SCENE.worldPlane.userData.originalScaleX*a;updateBackgroundGradientScale(n,dynamicUpdateAnimationSpeeds.gradientScale.speed,dynamicUpdateAnimationSpeeds.gradientScale.curve),e+=`Changed gradient scale from ${SCENE.worldPlane.scale.x} to ${n}\n`}if(-1!=r.indexOf(8)){let a=getLoopingObjects().length,t=getNotLoopingObjects();shuffle(t);let n=randFromRange(spinningObjectsRange);e+=`N spinning objects: ${a} Desired N spinning objects: ${n}\n`;let i=!1;for(let o=0;o<500;o++){for(let o of t){let t=o[0],r=o[1];if(null==r.children[0].userData.animationLoop||0==r.children[0].userData.animationLoop.length){let o=randFromRange(dynamicUpdateAnimationSpeeds.objectRotationSpeed2.speed);if(addRotationLoop(r.userData.name,t,"Y",o),e+=`Adding rotation loop to ${t} ${r.userData.name} speed: ${o}\n`,a++,a>=n){i=!0;break}break}}if(i)break}}if(-1!=r.indexOf(9)){if(SCENE.camera.userData.animationQueue&&SCENE.camera.userData.animationQueue.length>0)return;SCENE.camera.userData.originalPositionZ=SCENE.camera.position.z,SCENE.camera.userData.positionUpdateTimestamp=getCurrentTs();let a=rand(30,40,1);rand(0,1,.1)>.5&&(a=rand(50,150,1)),updateCameraPosition(void 0,void 0,a,dynamicUpdateAnimationSpeeds.cameraPosition.speed,dynamicUpdateAnimationSpeeds.cameraPosition.curve),e+=`Changed camera position to ${a}\n`}if(-1!=r.indexOf(10)&&(SCENE.scene.fog.enabled?(SCENE.scene.fog.userData={nearTo:200,farTo:200},SCENE.scene.fog.enabled=!1,e+="Disabled fog\n"):(SCENE.scene.fog.userData={nearTo:50,farTo:51},SCENE.scene.fog.enabled=!0,e+="Enabled fog\n")),-1!=r.indexOf(11)){let a=pickAxis(!0,[],!1);for(let e of a.pivots)a.rotationDirectionSwitchTimestamp=getCurrentTs(),switchObjectRotationDirection(e.userData.name,a.name,dynamicUpdateAnimationSpeeds.axisRotationDirection.speed,dynamicUpdateAnimationSpeeds.axisRotationDirection.curve);e+=`Changed axis rotation direction ${a.name} \n`}if(-1!=r.indexOf(12))for(let a of Axis[0].pivots)a.userData.name.includes("terrain")&&!a.userData.lightningTriggered&&(a.userData.lightningTriggered=!0,a.userData.lightningTriggeredTimestamp=getCurrentTs(),e+=`Triggered lighning for ${Axis[0].name} ${a.userData.name}\n`);if(-1!=r.indexOf(13)){let a=0;for(let e of Axis)e.enabled&&(a+=e.pivots.length);SCENE.originalNumberOfShapes||(SCENE.originalNumberOfShapes=a);let t=tierToValue(tiersStructure.contract,n.value),i=SCENE.originalNumberOfShapes*t;if(a<300&&i>a)for(let t=0;t<i-a;t++){let a=pick(Object.keys(extraShapes)),n=pick(extraShapes[a].axis),i=Axis[n-1];addNewShape(i.name,a+`E${t}`,a,1),e+=`Added shape ${a} to ${i.name} \n`}else if(a>20&&i<a){e+=`Removed ${disappearObjects(a-i,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.speed,dynamicUpdateAnimationSpeeds.objectAppearAndDisappear.curve,!0)}\n`}}}function randomDataUpdate(){SCENE.data.wallets=randomWalletActivity(),SCENE.data.contract=randomContractData(),SCENE.data.contract.tiers={royalty_received_tier:{changed:pick([!0,!1]),value:rand(-3,3,1)},contract_activity_tier:{changed:pick([!0,!1]),value:rand(-3,3,1)},sends_tier:{changed:pick([!0,!1]),value:rand(-3,3,1)},approvals_tier:{changed:pick([!0,!1]),value:rand(-3,3,1)}}}async function dataUpdate(){SCENE.data.wallets=await walletActivityUpdates(),SCENE.data.contract=await getContractData(),SCENE.data.contract.tiers=calculateTiers(SCENE.data.contract)}function init(){SCENE={data:{wallet:{},contract:{}},specialObjects:{}},tokenHash&&(populatePalette(),populateAbstractMaterials(),populateAxisExtraShapes(),overwriteAxis(),logDebugMessage()),SCENE.camera=makeCamera(),SCENE.scene=makeScene(),SCENE.renderer=makeRenderer();for(let a of Axis){a.mainPivot=new THREE.Object3D,a.mainPivot.name=a.name,a.lightnings=[];var e=[];for(let t in a.coneTypes)a.coneTypes[t][t]=!0,e.push(a.coneTypes[t]);shuffle(e),a.axisArrayConeTypes=e,a.enableNegativeSpace&&createNegativeSpace(a,!0),a.pivots=[];let t=a.growShapes.onStartup?a.growShapes.speed:void 0;if(!tokenHash)for(let e=0;e<a.numberOfCones;e++)addConeToAxisFALLBACK(a,`cone${e}`,t);for(let e in a.extraShapes){let n=a.extraShapes[e];for(let i=0;i<n.numberOfShapes;i++)n.cone?addConeToAxis(a,`cone${i}`,n,t):addExtraShapeToAxis(a,`${e}${i}`,e,n,t)}let n=meanPositionOfPivots(a.pivots),i=meanRotationOfPivots(a.pivots);if(a.centraRodPosition=n,a.centralRodRotation=i,a.addCentralRod){a.rodMaterial=new THREE.MeshBasicMaterial({color:a.centralRodColor,side:THREE.FrontSide,wireframe:!1});const e=new THREE.BoxGeometry(a.centralRodWidth,a.centralRodLength,a.centralRodWidth);a.rod=new THREE.Mesh(e,a.rodMaterial),a.rod.position.set(n[0],n[1],n[2]),a.rod.rotation.z=i[2],a.mainPivot.add(a.rod)}SCENE.scene.add(a.mainPivot),a.enabled||setAxisInvisibleAndDisabled(a)}for(let e of Lights)makeLight(e),SCENE.scene.add(e.light);enableWorldGradient&&makeWorldPlane(),SCENE.renderer.render(SCENE.scene,SCENE.camera),enableShadows&&(SCENE.renderer.shadowMap.enabled=!0,SCENE.renderer.shadowMap.type=THREE.PCFShadowMap);let a=new THREE.Clock,t=0,n=1/animationFPS;SCENE.cameraMovementSpeed={x:0,y:0,z:0};const i=e=>{requestAnimationFrame(i),t+=a.getDelta(),animateFog();for(let e of Axis){e.mainPivot.userData.animationQueue&&e.mainPivot.userData.animationQueue.length>0&&processAnimationQueue(e.mainPivot);for(let a of e.pivots){a.userData.lightningTriggered&&0==e.lightnings.length&&zapTerrain(e.name,a.userData.name,["#FF0000","#00FF00","#0000FF"],1,[.5,2,.1],[5,15,1],[1,5,1],[10,100,10]),a.rotateY(THREE.MathUtils.degToRad(a.userData.rotationSpeed*t)),a.userData.animationQueue&&a.userData.animationQueue.length>0&&processAnimationQueue(a),a.userData.animationLoop&&processAnimationLoop(a);for(let e of a.children)e.userData.animationQueue&&e.userData.animationQueue.length>0&&processAnimationQueue(e),e.userData.animationLoop&&processAnimationLoop(e)}if(e.enableNegativeSpaceAnimation&&animateAxisNegativeSpace(e,t),e.clipPlanes)for(let a of e.clipPlanes)a.userData&&(a.userData.desiredConstant>a.constant?a.constant+=.05:a.userData.desiredConstant<a.constant&&(a.constant-=.05));for(let a of e.lightnings)animateLightning(a,e)}SCENE.worldPlane.userData.animationQueue&&SCENE.worldPlane.userData.animationQueue.length>0&&processAnimationQueue(SCENE.worldPlane),SCENE.camera.userData.animationQueue&&SCENE.camera.userData.animationQueue.length>0&&processAnimationQueue(SCENE.camera),enableWorldGradientAnimation&&animateWorldPlane(),enableFog&&processAnimationQueue(SCENE.scene.fog),0!=SCENE.cameraMovementSpeed.y&&(SCENE.camera.position.y+=SCENE.cameraMovementSpeed.y,SCENE.cameraMovementSpeed.y*=.98),0!=SCENE.cameraMovementSpeed.x&&(SCENE.camera.position.x+=SCENE.cameraMovementSpeed.x,SCENE.cameraMovementSpeed.x*=.98),0!=SCENE.cameraMovementSpeed.z&&(SCENE.camera.position.z+=SCENE.cameraMovementSpeed.z,SCENE.cameraMovementSpeed.z*=.98),SCENE.renderer.render(SCENE.scene,SCENE.camera),t%=n};function o(){SCENE.camera.aspect=window.innerWidth/window.innerHeight,SCENE.camera.updateProjectionMatrix(),SCENE.renderer.setSize(window.innerWidth,window.innerHeight)}requestAnimationFrame(i),window.addEventListener("resize",o,!1),o(),document.addEventListener("keydown",(function(e){"w"===e.key&&(SCENE.cameraMovementSpeed.y=Math.min(.5,SCENE.cameraMovementSpeed.y+=.1)),"s"===e.key&&(SCENE.cameraMovementSpeed.y=Math.max(-.5,SCENE.cameraMovementSpeed.y-=.1)),"a"===e.key&&(SCENE.cameraMovementSpeed.x=Math.max(-.5,SCENE.cameraMovementSpeed.x-=.1)),"d"===e.key&&(SCENE.cameraMovementSpeed.x=Math.max(.5,SCENE.cameraMovementSpeed.x+=.1)),"q"===e.key&&(SCENE.cameraMovementSpeed.z=Math.max(.5,SCENE.cameraMovementSpeed.z+=.1)),"e"===e.key&&(SCENE.cameraMovementSpeed.z=Math.max(-.5,SCENE.cameraMovementSpeed.z-=.1))}))}init(),updateScene(),setInterval(updateScene,12e3),"generated"==DEBUG_UPDATE_SOURCE&&(randomDataUpdate(),setInterval(randomDataUpdate,12e3));</script></body></html>", "attributes": [{"trait_type": "-A98:␟", "value": "␋␎␀␙␄)"},{"trait_type": "␋[lqMi|", "value": "true"},{"trait_type": "␜ih}T␉Q", "value": "true"},{"trait_type": "!?␟5Qzio%x␑␞FK)", "value": "true"},{"trait_type": "␈7#6##{␝[␏2$,K␛", "value": "true"},{"trait_type": "␆IM␕␘␛!,␏;uvHx[", "value": "true"},{"trait_type": "z␃cqH␓#␄}Xr)5(3", "value": "true"},{"trait_type": "6␈#^␜9m␎$/y`B|␐", "value": "true"},{"trait_type": "cu␏/~␇␈=2Rd9␍e␉", "value": "true"}]}